<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>二进制（队列请求）</title>
      <link href="/hexo/2023/08/31/er-jin-zhi-dui-lie-qing-qiu/"/>
      <url>/hexo/2023/08/31/er-jin-zhi-dui-lie-qing-qiu/</url>
      
        <content type="html"><![CDATA[<p>设计队列导出的实现思路模式</p><a id="more"></a><h4 id="一、批量导出"><a href="#一、批量导出" class="headerlink" title="一、批量导出"></a>一、批量导出</h4><blockquote><p>1.发起多个请求信号，返回信号id<br>2.根据多个信号id分别请求结果，轮询请求，直到结果返回<br>难点：轮询接口，可能会重复请求多次</p></blockquote><p><font size="4" color="#007ACC">利用递归，实现轮询，新建一个数组，把未返回结果的队列重新添加进去，再一次重新开始队列请求，直到这个队列数组为空</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;&#x2F; 表格勾选多个批量导出async exportTextbooks() &#123;if (this.multipleSelection.length &lt;&#x3D; 0) &#123;this.$message(&#123;type: &#39;error&#39;,message: &#39;请勾选要导出的教材&#39;&#125;)return&#125;&#x2F;&#x2F; 页面loading，一般传回调函数一直到结果出现，loading结束const loading &#x3D; this.$loading(&#123;lock: true,text: &#39;导出中&#39;,spinner: &#39;el-icon-loading&#39;&#125;)&#x2F;&#x2F; 先给每个任务发起一个信号，信号队列const queueEvents &#x3D; this.multipleSelection.map(item &#x3D;&gt; &#123;return this.$api.resource.exportTextbooks(item.id)&#125;)&#x2F;&#x2F; 拿到信号队列的结果const res &#x3D; await Promise.all(queueEvents)&#x2F;&#x2F; 执行请求结果队列this.exportFileFun(res, loading)&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">async exportFileFun(res, loading) &#123;&#x2F;&#x2F; 新建一个结果队列const exportFile &#x3D; []for (const item of res) &#123;&#x2F;&#x2F; 隔断2s请求await new Promise(resolve &#x3D;&gt; setTimeout(resolve, 2000))&#x2F;&#x2F; 轮询接口const data &#x3D; await this.$api.resource.exportTextbooksAccept(item.job_id)&#x2F;&#x2F; data.job_status &#x3D;&#x3D; 2 表示拿到结果if (data.job_status &#x3D;&#x3D; 2) &#123;location.href &#x3D; data.full_url.url;&#x2F;&#x2F; 使用location.href跳转过于频繁会导致只会触发一个，或者被偷吃掉await new Promise(resolve &#x3D;&gt; setTimeout(resolve, 500))&#125; else &#123;exportFile.push(&#123; job_id: item.job_id &#125;)&#125;&#125;&#x2F;&#x2F; 判断队列是否为空，不为空重新执行此方法，为空表示队列下载导出已经全部完成if (exportFile.length &gt;&#x3D; 1) &#123;this.exportFileFun(exportFile, loading)&#125; else &#123;loading.close()&#125;&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>indexDB（前端数据库）</title>
      <link href="/hexo/2023/07/18/indexdb-qian-duan-shu-ju-ku/"/>
      <url>/hexo/2023/07/18/indexdb-qian-duan-shu-ju-ku/</url>
      
        <content type="html"><![CDATA[<p><a href="https://dexie.org/docs/API-Reference">indexDB API参考官网</a> </p><a id="more"></a><h3 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h3><h4 id="创建数据库新建表"><a href="#创建数据库新建表" class="headerlink" title="创建数据库新建表"></a>创建数据库新建表</h4><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const db &#x3D; new Dexie(&quot;MyDatabase&quot;);db.version(1).stores(&#123;friends: &quot;++id&quot;,gameSessions: &quot;id&quot;&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="数据库查询"><a href="#数据库查询" class="headerlink" title="数据库查询"></a>数据库查询</h4><p>查询对应name值为’david’的所有数据</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const friends &#x3D; await db.friends.where(&quot;name&quot;).equalsIgnoreCase(&quot;david&quot;).toArray();for (const friend of friends) &#123;  console.log(&quot;Found: &quot; + friend.name + &quot;. Phone: &quot; + friend.phoneNumber);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>查询对应name值为’david’，且对应age值在23-43之间符合条件的所有数据</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const davids &#x3D; await db.friends.where([&quot;name&quot;, &quot;age&quot;])  .between([&quot;David&quot;, 23], [&quot;David&quot;, 43], true, true)  .toArray();for (const david of davids) &#123;  console.log(&#96;Found a David with age $&#123;david.age&#125;&#96;);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表添加数据（object为对象）</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">db.friends.add(object)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>表数据更新（key：表key值；object：表value值）</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">db.friends.update(key | object, changeObject)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到表的所有key值，查出数据库总共有几条（数组length）</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">db.friends.keys()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">where &#x2F;&#x2F; 查表头id、name、age之类equals &#x2F;&#x2F; 查索引，表头id列的keyequalsIgnoreCase &#x2F;&#x2F; 查值keys &#x2F;&#x2F; 获取表所有key值，得到数据库数据总数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="dexie-js实现二次封装实例代码"><a href="#dexie-js实现二次封装实例代码" class="headerlink" title="dexie.js实现二次封装实例代码"></a>dexie.js实现二次封装实例代码</h3><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import Dexie from &#39;dexie&#39;import &#123; databaseId &#125; from &#39;@&#x2F;store&#x2F;main&#39;import &#123; Slide &#125; from &#39;@&#x2F;types&#x2F;slides&#39;import &#123; LOCALSTORAGE_KEY_DISCARDED_DB &#125; from &#39;@&#x2F;configs&#x2F;storage&#39;export interface writingBoardImg &#123;  id: string | number  dataURL: Array&lt;string&gt;,&#125;export interface Snapshot &#123;  index: number  slides: Slide[]&#125;const databaseNamePrefix &#x3D; &#39;PPTist&#39;&#x2F;&#x2F; 删除失效&#x2F;过期的数据库&#x2F;&#x2F; 应用关闭时（关闭或刷新浏览器），会将其数据库ID记录在 localStorage 中，表示该ID指向的数据库已失效&#x2F;&#x2F; 当应用初始化时，检查当前所有数据库，将被记录失效的数据库删除&#x2F;&#x2F; 另外，距离初始化时间超过12小时的数据库也将被删除（这是为了防止出现因意外未被正确删除的库）export const deleteDiscardedDB &#x3D; async () &#x3D;&gt; &#123;  const now &#x3D; new Date().getTime()  const localStorageDiscardedDB &#x3D; localStorage.getItem(LOCALSTORAGE_KEY_DISCARDED_DB)  const localStorageDiscardedDBList: string[] &#x3D; localStorageDiscardedDB ? JSON.parse(localStorageDiscardedDB) : []  const databaseNames &#x3D; await Dexie.getDatabaseNames()  const discardedDBNames &#x3D; databaseNames.filter(name &#x3D;&gt; &#123;    if (name.indexOf(databaseNamePrefix) &#x3D;&#x3D;&#x3D; -1) return false        const [prefix, id, time] &#x3D; name.split(&#39;_&#39;)    if (prefix !&#x3D;&#x3D; databaseNamePrefix || !id || !time) return true    if (localStorageDiscardedDBList.includes(id)) return true    if (now - (+time) &gt;&#x3D; 1000 * 60 * 60 * 12) return true    return false  &#125;)  for (const name of discardedDBNames) Dexie.delete(name)  localStorage.removeItem(LOCALSTORAGE_KEY_DISCARDED_DB)&#125;&#x2F;&#x2F; 新建PPTistDB数据库 - 数据下新建表名为‘snapshots’、‘writingBoardImgs’表 - key值为idclass PPTistDB extends Dexie &#123;  public snapshots: Dexie.Table&lt;Snapshot, number&gt;  public writingBoardImgs: Dexie.Table&lt;writingBoardImg, number&gt;  public constructor() &#123;    super(&#96;$&#123;databaseNamePrefix&#125;_$&#123;databaseId&#125;_$&#123;new Date().getTime()&#125;&#96;)    &#x2F;&#x2F; 创建两张表    this.version(1).stores(&#123;      snapshots: &#39;++id&#39;,      writingBoardImgs: &#39;++id&#39;,    &#125;)    this.snapshots &#x3D; this.table(&#39;snapshots&#39;)    this.writingBoardImgs &#x3D; this.table(&#39;writingBoardImgs&#39;)  &#125;&#125;export const db &#x3D; new PPTistDB()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron（new BrowserWindow配置项）</title>
      <link href="/hexo/2023/07/17/electron-browserwindow-pei-zhi-xiang/"/>
      <url>/hexo/2023/07/17/electron-browserwindow-pei-zhi-xiang/</url>
      
        <content type="html"><![CDATA[<p>基础配置项</p><a id="more"></a><h3 id="new-BrowserWindow-基础配置使用"><a href="#new-BrowserWindow-基础配置使用" class="headerlink" title="new BrowserWindow 基础配置使用"></a>new BrowserWindow 基础配置使用</h3><p><a href="https://www.electronjs.org/zh/docs/latest/api/browser-window#new-browserwindowoptions">BrowserWindow api</a></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const mainWin &#x3D; new BrowserWindow(&#123;show: false, &#x2F;&#x2F; 先隐藏窗口，不然加载index.html会出现短暂空白frame: false &#x2F;&#x2F; 隐藏默认菜单、无边框窗口width: 100, &#x2F;&#x2F; 窗口宽度 ; maxWidth | minWidthheight: 200, &#x2F;&#x2F; 窗口高度 ; maxHeight | minHeighticon: &#39;&#39;, &#x2F;&#x2F; 图标路径title: &#39;萌新&#39;, &#x2F;&#x2F; 窗口标题，记得index.html的title要为空autoHideMenuBar: true,&#x2F;&#x2F; 允许渲染进程使用node.js集成环境webPreferences: &#123;preload: path.resolve(__dirname, process.env.QUASAR_ELECTRON_PRELOAD!),webSecurity: false,nodeIntegrationInWorke: true, &#x2F;&#x2F;是否在Web工作器中启用了Node集成. 默认值为 false. nodeIntegration: true &#x2F;&#x2F; 是否启用Node integration. 默认值为 false.&#125;&#125;)mainWin.loadFile(&#39;index.html&#39;)mainWin.on(&#39;ready-to-show&#39;, () &#x3D;&gt; &#123;&#x2F;&#x2F; 加载完页面窗口显示mainWin.show()&#125;)&#x2F;&#x2F; 关闭窗口需要释放窗口mainWin.on(&#39;closed&#39;, () &#x3D;&gt; &#123;mainWin &#x3D; null&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="调用api实现窗口的-口-X-事件"><a href="#调用api实现窗口的-口-X-事件" class="headerlink" title="调用api实现窗口的 - 口 X 事件"></a>调用api实现窗口的 - 口 X 事件</h3><p><a href="https://www.electronjs.org/zh/docs/latest/tutorial/ipc">ipc 进程通信</a></p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二进制插件（zipjs食用指南）</title>
      <link href="/hexo/2023/07/12/er-jin-zhi-cha-jian-ya-suo-bao-sheng-cheng-zipjs-shi-yong-zhi-nan/"/>
      <url>/hexo/2023/07/12/er-jin-zhi-cha-jian-ya-suo-bao-sheng-cheng-zipjs-shi-yong-zhi-nan/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html2canvas、htmlToImage食用指南</title>
      <link href="/hexo/2023/07/12/er-jin-zhi-cha-jian-tu-pian-sheng-cheng-html2canvas-he-htmltoimage/"/>
      <url>/hexo/2023/07/12/er-jin-zhi-cha-jian-tu-pian-sheng-cheng-html2canvas-he-htmltoimage/</url>
      
        <content type="html"><![CDATA[<p>获取元素生成图片</p><a id="more"></a><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install html2canvasnpm install html-to-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="一-html2canvas使用"><a href="#一-html2canvas使用" class="headerlink" title="一.html2canvas使用"></a>一.html2canvas使用</h3><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import html2canvas from &#39;html2canvas&#39;const htmlToImage &#x3D; async () &#x3D;&gt; &#123;const body &#x3D; iframeContent.querySelector(&#39;body&#39;)const canvasEl &#x3D; await html2canvas(body)const link &#x3D; canvasEl.toDataURL(&#39;image&#x2F;jpg&#39;)const img &#x3D; new Image() as HTMLImageElementimg.src &#x3D; link&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二-htmlToImage使用"><a href="#二-htmlToImage使用" class="headerlink" title="二.htmlToImage使用"></a>二.htmlToImage使用</h3><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import * as htmlToImage from &#39;html-to-image&#39;const htmlToImage &#x3D; async () &#x3D;&gt; &#123;const baseView &#x3D; (document.querySelector(&#39;#base-view&#39;) as HTMLDivElement).cloneNode(true) as HTMLDivElementconst screenSlide &#x3D; (baseView.querySelector(&#39;.current&#39;) as HTMLDivElement)const canvas_2 &#x3D; (document.querySelector(&#39;.writing-board-tool&#39;) as HTMLDivElement)const canvas &#x3D; new Image() as HTMLImageElementcanvas.src &#x3D; await htmlToImage.toPng(canvas_2)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三-html2canvas和htmlToImage的区别"><a href="#三-html2canvas和htmlToImage的区别" class="headerlink" title="三.html2canvas和htmlToImage的区别"></a>三.html2canvas和htmlToImage的区别</h3><blockquote><p>1.html2canvas可以对iframe生效、htmlToImage对其会报错（应该不能直接转换成图片、需要将其转换成canvas再进行图片导出）<br>2.<a href="https://www.npmjs.com/package/html-to-image">htmlToImage</a>更全面</p></blockquote><ul><li>toPng</li><li>toSvg</li><li>toJpeg</li><li>toBlob</li><li>toCanvas</li><li>toPixelData</li></ul><h3 id="四-iframe生成图片"><a href="#四-iframe生成图片" class="headerlink" title="四.iframe生成图片"></a>四.iframe生成图片</h3><p><font color="red">需要先获取iframe的contentWindow，不然获取的iframe区域是空白的</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">nextTick(async () &#x3D;&gt; &#123;const baseView &#x3D; document.querySelector(&#39;#base-view&#39;) as HTMLDivElementconst screenSlide &#x3D; baseView.querySelector(&#39;.current&#39;) as HTMLDivElementawait new Promise((resolve) &#x3D;&gt; &#123;$(screenSlide).ready(resolve)&#125;)const iframe &#x3D; $(&#39;iframe&#39;)[0] as anyconst iframeContent &#x3D; iframe.contentDocument || iframe.contentWindow.documentconst body &#x3D; iframeContent.querySelector(&#39;body&#39;)const canvasEl &#x3D; await html2canvas(body)const link &#x3D; canvasEl.toDataURL(&#39;image&#x2F;jpg&#39;)const img &#x3D; new Image() as HTMLImageElementimg.src &#x3D; linkimg.style.width &#x3D; &#39;100%&#39;img.style.height &#x3D; &#39;100%&#39;nodeViewRef.value &#x3D; img as HTMLImageElement&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Demo（基于element-plus多选框hook）</title>
      <link href="/hexo/2023/07/06/demo-ji-yu-element-plus-duo-xuan-kuang-1/"/>
      <url>/hexo/2023/07/06/demo-ji-yu-element-plus-duo-xuan-kuang-1/</url>
      
        <content type="html"><![CDATA[<p>vue3 + hook + element-plus 实现多选单选</p><a id="more"></a><h2 id="实现hook封装，可略过不看"><a href="#实现hook封装，可略过不看" class="headerlink" title="实现hook封装，可略过不看"></a>实现hook封装，可略过不看</h2><blockquote><p>checkedList: 选中项<br>plainOptions：供选择项<br>./useSave.ts</p></blockquote><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import &#123; ref, watch &#125; from &#39;vue&#39;import &#123; isEmpty, map &#125; from &#39;lodash&#39;import &#123; storeToRefs &#125; from &#39;pinia&#39;import &#123; useMpptxStore, useUserInfoStore &#125; from &#39;@&#x2F;store&#39;const useSave &#x3D; () &#x3D;&gt; &#123;  const saveDialogVisible &#x3D; ref(false as boolean)  const indeterminate &#x3D; ref(true as boolean)  const &#123; checkedList &#125; &#x3D; storeToRefs(useMpptxStore())  const &#123; plainOptions &#125; &#x3D; storeToRefs(useUserInfoStore())  const &#123; getUserInfo &#125; &#x3D; useUserInfoStore()  const checkAll &#x3D; ref(false as boolean)  const checkLoading &#x3D; ref(false as boolean)  const onCheckAllChange &#x3D; (e: number[]) &#x3D;&gt; &#123;    checkedList.value &#x3D; e ? map(plainOptions.value, &#39;value&#39;) : []    indeterminate.value &#x3D; false  &#125;const onCheckMoreChange &#x3D; (e: number[]) &#x3D;&gt; &#123;checkedList.value &#x3D; [e[e.length - 1]]    checkAll.value &#x3D; e.length &#x3D;&#x3D;&#x3D; plainOptions.value.length    indeterminate.value &#x3D; e.length &gt; 0 &amp;&amp; e.length &lt; plainOptions.value.length&#125;  const onCheckChange &#x3D; (e: number[]) &#x3D;&gt; &#123;&#x2F;&#x2F; checkedList.value &#x3D; [e[e.length - 1]] 单选&#x2F;&#x2F; 默认是多选    checkAll.value &#x3D; e.length &#x3D;&#x3D;&#x3D; plainOptions.value.length    indeterminate.value &#x3D; e.length &gt; 0 &amp;&amp; e.length &lt; plainOptions.value.length  &#125;  watch(() &#x3D;&gt; saveDialogVisible.value, async () &#x3D;&gt; &#123;    if (!saveDialogVisible.value) return    if (plainOptions.value.length &gt; 0) return    await getUserInfo()    if (plainOptions.value.length &gt; 0) checkLoading.value &#x3D; true    if (!isEmpty(checkedList.value)) checkLoading.value &#x3D; false  &#125;)    return &#123;    saveDialogVisible,    plainOptions,    indeterminate,    checkedList,    checkAll,    checkLoading,    onCheckChange,onCheckMoreChange,    onCheckAllChange  &#125;&#125;export default useSave<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="最基础使用-hook"><a href="#最基础使用-hook" class="headerlink" title="最基础使用 hook"></a>最基础使用 hook</h2><blockquote><p>无法自由切换单选多选</p></blockquote><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import &#123; ElCheckboxGroup, ElCheckbox &#125; from &#39;element-plus&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkLoading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~ justify-between items-center<span class="token punctuation">"</span></span> <span class="token attr-name">_m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>t-20px b-10px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">_text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16px [black] bolder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请选择<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElCheckbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkAll<span class="token punctuation">"</span></span> <span class="token attr-name">:indeterminate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indeterminate<span class="token punctuation">"</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onCheckAllChange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>全选<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElCheckbox</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElCheckboxGroup</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkedList<span class="token punctuation">"</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onCheckMoreChange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElCheckbox</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in plainOptions<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span> <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item.label &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElCheckbox</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElCheckboxGroup</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="搭配封装组件使用hook"><a href="#搭配封装组件使用hook" class="headerlink" title="搭配封装组件使用hook"></a>搭配封装组件使用hook</h2><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import useSave from &#39;.&#x2F;hooks&#x2F;useSave&#39;import &#123; ElCheckboxGroup, ElCheckbox &#125; from &#39;element-plus&#39;const &#123;  checkAll,   indeterminate,  onCheckAllChange,onCheckMoreChange,  onCheckChange,  checkedList,  plainOptions,  saveDialogVisible,  checkLoading&#125; &#x3D; useSave()const props &#x3D; defineProps(&#123;  tip: &#123;    type: String,    required: true,  &#125;,all: &#123;type: Boolean,default: false&#125;&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkLoading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~ justify-between items-center<span class="token punctuation">"</span></span> <span class="token attr-name">_m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>t-20px b-10px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">_text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16px [black] bolder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; tip &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElCheckbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkAll<span class="token punctuation">"</span></span> <span class="token attr-name">:indeterminate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indeterminate<span class="token punctuation">"</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onCheckAllChange<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>全选<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElCheckbox</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElCheckboxGroup</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkedList<span class="token punctuation">"</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all ? onCheckMoreChange() : onCheckChange()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElCheckbox</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in plainOptions<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span> <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item.label &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElCheckbox</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElCheckboxGroup</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> Demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript基本类型</title>
      <link href="/hexo/2023/06/30/ts-lei-xing-duan-yan-su-cai/"/>
      <url>/hexo/2023/06/30/ts-lei-xing-duan-yan-su-cai/</url>
      
        <content type="html"><![CDATA[<p>TS定义变量的类型,在TS中是最常用的最基本的</p><a id="more"></a><p>element-plus多选框</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import &#123; CheckboxValueType &#125; from &#39;element-plus&#39;const onCheckAllChange &#x3D; (e: CheckboxValueType) &#x3D;&gt; &#123;  checkedList.value &#x3D; e ? map(plainOptions.value, &#39;value&#39;) : []  indeterminate.value &#x3D; false&#125;const onCheckChange &#x3D; (e: CheckboxValueType[]) &#x3D;&gt; &#123;  &#x2F;&#x2F; checkedList.value &#x3D; [e[e.length - 1]] 单选  checkAll.value &#x3D; e.length &#x3D;&#x3D;&#x3D; plainOptions.value.length  indeterminate.value &#x3D; e.length &gt; 0 &amp;&amp; e.length &lt; plainOptions.value.length&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/hexo/2023/06/28/er-jin-zhi-wen-jian/"/>
      <url>/hexo/2023/06/28/er-jin-zhi-wen-jian/</url>
      
        <content type="html"><![CDATA[<p>常用的功能：文件上传</p><a id="more"></a><h4 id="一、文件上传-js"><a href="#一、文件上传-js" class="headerlink" title="一、文件上传 .js"></a>一、文件上传 .js</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> md5 <span class="token keyword">from</span> <span class="token string">'js-md5'</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token comment">/** * 组合使用 * @param &#123; Object &#125; config  判断条件回调 * config &#123; *  api: 接口请求 *  before：上传之前的配置 *  accept：限制文件格式 * &#125; * @return &#123; String &#125; */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">uploadFileEvent</span> <span class="token operator">=</span> <span class="token parameter">config</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>input<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token punctuation">&#123;</span> color<span class="token operator">:</span> <span class="token string">'red'</span><span class="token punctuation">&#125;</span>input<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'file'</span><span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>accept<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> input<span class="token punctuation">.</span>accept <span class="token operator">=</span> config<span class="token punctuation">.</span>accept<span class="token punctuation">&#125;</span>input<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">const</span> file <span class="token operator">=</span> input<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> config<span class="token operator">?.</span>before<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token operator">?.</span>api<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">httpRequest</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> config<span class="token punctuation">.</span>api<span class="token punctuation">)</span> <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>input<span class="token punctuation">.</span><span class="token function-variable function">oncancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'取消上传'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>input<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'上传出错~'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>input<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * url链接展示文件墙 * @param &#123; Array &#125; fileUrl url链接数组 * @return &#123; Array&lt;Object> &#125; 数组 */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fileUrlToBase64</span> <span class="token operator">=</span> <span class="token parameter">fileUrl</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> fileUrl<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> filename <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'*'</span> <span class="token comment">// 从 URL 中获取文件名</span><span class="token keyword">let</span> blobUrl <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> type<span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 创建一个 Blob 对象并获取 URL</span><span class="token keyword">return</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> filename<span class="token punctuation">,</span> url<span class="token operator">:</span> blobUrl<span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 上传之前的校验 * @param &#123; String, Object &#125; file params  二进制 | 回调 * params：&#123; *  suceessCallback：校验成功之后的回调 *  errorCallback：失败回调 *  doneCallback：完成回调 *  maxSize：文件大小 * &#125; * @return &#123; Boolean &#125; */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">const</span> defaultParams <span class="token operator">=</span> <span class="token punctuation">&#123;</span>maxSize<span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span><span class="token function-variable function">suceessCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">成功</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">errorCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">上传图片大小不能超过</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token number">2000</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">KB!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">doneCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">完成</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> maxSize<span class="token punctuation">,</span> suceessCallback<span class="token punctuation">,</span> errorCallback<span class="token punctuation">,</span> doneCallback <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> defaultParams<span class="token punctuation">)</span> <span class="token keyword">let</span> flag <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">></span> maxSize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>errorCallback <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">errorCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>suceessCallback <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">suceessCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span> doneCallback <span class="token operator">&amp;&amp;</span> <span class="token function">doneCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">return</span> flag<span class="token punctuation">&#125;</span><span class="token comment">/** * * @param &#123; String &#125; file  二进制 * @return &#123; Promise &#125; */</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">readBlobAsArrayBuffer</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span>reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 上传方法 * @param &#123; String &#125; file  二进制 * @return &#123; Promise &#125; */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">httpRequest</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> api</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">let</span> rf <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readBlobAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token constant">MD5</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>rf<span class="token punctuation">)</span> <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>file_key<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>filename<span class="token operator">:</span> file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>hash<span class="token operator">:</span> <span class="token constant">MD5</span><span class="token punctuation">,</span>mime_type<span class="token operator">:</span> file<span class="token punctuation">.</span>type<span class="token punctuation">,</span>size<span class="token operator">:</span> file<span class="token punctuation">.</span>size<span class="token punctuation">,</span>storage<span class="token operator">:</span> <span class="token punctuation">&#123;</span> channel<span class="token operator">:</span> <span class="token string">'public'</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">let</span> fileUrl <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">></span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>file<span class="token punctuation">)</span>fileUrl <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">uploadFileForm</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>uri<span class="token punctuation">,</span> form<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>data<span class="token punctuation">.</span>headers<span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>fileUrl <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>uri<span class="token punctuation">,</span> rf<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>data<span class="token punctuation">.</span>headers<span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> fileUrl<span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">uploadFileForm</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'multipart/form-data'</span><span class="token punctuation">,</span> <span class="token operator">...</span>config<span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">.</span>data<span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">uploadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'multipart/form-data'</span><span class="token punctuation">,</span> <span class="token operator">...</span>config<span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">.</span>data<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二、引入使用"><a href="#二、引入使用" class="headerlink" title="二、引入使用"></a>二、引入使用</h4><p>上传execl文件、解析二进制数据</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">uploadFileEvent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>accept<span class="token operator">:</span> <span class="token string">'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readBlobAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>上传pdf文件、请求接口获取上传服务器的链接、上传</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> uri<span class="token punctuation">,</span> node <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">uploadFileEvent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> accept<span class="token operator">:</span> <span class="token string">'application/pdf'</span><span class="token punctuation">,</span> api<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$api<span class="token punctuation">.</span>question_set<span class="token punctuation">.</span>upload<span class="token punctuation">,</span> beforeUpload<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="三、文件accept格式"><a href="#三、文件accept格式" class="headerlink" title="三、文件accept格式"></a>三、文件accept格式</h4><table><thead><tr><th>文件格式</th><th>accept</th></tr></thead><tbody><tr><td>.3gpp</td><td>audio/3gpp, video/3gpp</td></tr><tr><td>.ac3</td><td>audio/ac3</td></tr><tr><td>.asf</td><td>allpication/vnd.ms-asf</td></tr><tr><td>.au</td><td>audio/basic</td></tr><tr><td>.css</td><td>text/css</td></tr><tr><td>.csv</td><td>text/csv</td></tr><tr><td>.doc</td><td>application/msword</td></tr><tr><td>.dot</td><td>application/msword</td></tr><tr><td>.dtd</td><td>application/xml-dtd</td></tr><tr><td>.dwg</td><td>image/vnd.dwg</td></tr><tr><td>.dxf</td><td>image/vnd.dxf</td></tr><tr><td>.gif</td><td>image/gif</td></tr><tr><td>.htm</td><td>text/html</td></tr><tr><td>.html</td><td>text/html</td></tr><tr><td>.jp2</td><td>image/jp2</td></tr><tr><td>.jpe</td><td>image/jpeg</td></tr><tr><td>.jpeg</td><td>image/jpeg</td></tr><tr><td>.jpg</td><td>image/jpeg</td></tr><tr><td>.js</td><td>text/javascript,</td></tr><tr><td>.json</td><td>application/json</td></tr><tr><td>.mp2</td><td>audio/mpeg, video/mpeg</td></tr><tr><td>.mp3</td><td>audio/mpeg</td></tr><tr><td>.mp4</td><td>audio/mp4, video/mp4</td></tr><tr><td>.mpeg</td><td>video/mpeg</td></tr><tr><td>.mpg</td><td>video/mpeg</td></tr><tr><td>.mpp</td><td>application/vnd.ms-project</td></tr><tr><td>.ogg</td><td>application/ogg</td></tr><tr><td>.pdf</td><td>application/pdf</td></tr><tr><td>.png</td><td>image/png</td></tr><tr><td>.pot</td><td>application/vnd.ms-powerpoint</td></tr><tr><td>.pps</td><td>application/vnd.ms-powerpoint</td></tr><tr><td>.ppt</td><td>application/vnd.ms-powerpoint</td></tr><tr><td>.rtf</td><td>application/rtf</td></tr><tr><td>.svf</td><td>image/vnd.svf</td></tr><tr><td>.tif</td><td>image/tiff</td></tr><tr><td>.tiff</td><td>image/tiff</td></tr><tr><td>.txt</td><td>text/plain</td></tr><tr><td>.wdb</td><td>application/vnd.ms-works</td></tr><tr><td>.wps</td><td>application/vnd.ms-works</td></tr><tr><td>.xhtml</td><td>application/xhtml+xml</td></tr><tr><td>.xlc</td><td>application/vnd.ms-excel</td></tr><tr><td>.xlm</td><td>application/vnd.ms-excel</td></tr><tr><td>.xls</td><td>application/vnd.ms-excel</td></tr><tr><td>.xlt</td><td>application/vnd.ms-excel</td></tr><tr><td>.xlw</td><td>application/vnd.ms-excel</td></tr><tr><td>.xml</td><td>text/xml,</td></tr><tr><td>.zip</td><td>aplication/zip    Compressed Archive</td></tr><tr><td>.xlsx</td><td>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</td></tr><tr><td>.xltx</td><td>application/vnd.openxmlformats-officedocument.spreadsheetml.template</td></tr><tr><td>.potx</td><td>application/vnd.openxmlformats-officedocument.presentationml.template</td></tr><tr><td>.ppsx</td><td>application/vnd.openxmlformats-officedocument.presentationml.slideshow</td></tr><tr><td>.pptx</td><td>application/vnd.openxmlformats-officedocument.presentationml.presentation</td></tr><tr><td>.sldx</td><td>application/vnd.openxmlformats-officedocument.presentationml.slide</td></tr><tr><td>.docx</td><td>application/vnd.openxmlformats-officedocument.wordprocessingml.document</td></tr><tr><td>.dotx</td><td>application/vnd.openxmlformats-officedocument.wordprocessingml.template</td></tr><tr><td>.xlsm</td><td>application/vnd.ms-excel.addin.macroEnabled.12</td></tr><tr><td>.xlsb</td><td>application/vnd.ms-excel.sheet.binary.macroEnabled.12</td></tr></tbody></table><h4 id="四、后端接口返回blob数据前端下载导出"><a href="#四、后端接口返回blob数据前端下载导出" class="headerlink" title="四、后端接口返回blob数据前端下载导出"></a>四、后端接口返回blob数据前端下载导出</h4><p><img src="http://linmingqi.top/img/%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E7%9A%84blob%E7%BB%93%E6%9E%84.png"></p><p><font color="blue">接口请求responseType： arraybuffer | blob</font><font color="red">（不设置responseType，导出的文件会无法打开报错，这里例举zip和xlsx）</font></p><p><img src="http://linmingqi.top/img/%E4%B8%8D%E8%AE%BE%E7%BD%AEresponseType%E6%8A%A5%E9%94%99.png"><br><img src="http://linmingqi.top/img/%E4%B8%8D%E8%AE%BE%E7%BD%AEresponseType%E6%8A%A5%E9%94%99xlsx.png"></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">async _multiPartGet(url) &#123;let res &#x3D; await this.axios.get(url, &#123;responseType: &quot;arraybuffer&quot;,&#125;);return res.data;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="blue">利用a标签唤起浏览器下载</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;** * @description: 文件下载 * @param &#123;Blob&#125; blob 参数1：blob对象 * @param &#123;string&#125; name 参数2：文件名称，包含文件后缀 * @return &#123;*&#125; *&#x2F;const download &#x3D; (res, name) &#x3D;&gt; &#123;const link &#x3D; document.createElement(&#39;a&#39;); link.style.display &#x3D; &#39;none&#39;const blob &#x3D; new Blob([res], &#123; type: &#39;application&#x2F;zip&#39; &#125;)const url &#x3D; URL.createObjectURL(blob); link.href &#x3D; url; link.download &#x3D; name; document.body.appendChild(link); link.click(); document.body.removeChild(link); URL.revokeObjectURL(url); &#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="blue">使用示例：多个导出进行下载</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// loading（element）</span><span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$loading</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>lock<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>text<span class="token operator">:</span> <span class="token string">'导出中'</span><span class="token punctuation">,</span>spinner<span class="token operator">:</span> <span class="token string">'el-icon-loading'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// queueEvents下载队列</span><span class="token keyword">const</span> queueEvents <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>multipleSelection<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">_multiPartGet</span><span class="token punctuation">(</span><span class="token string">'接口/'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>queueEvents<span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token string">'教材'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>loading<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript数组方法——高阶</title>
      <link href="/hexo/2023/06/26/js-shu-zu-chu-li-gao-jie/"/>
      <url>/hexo/2023/06/26/js-shu-zu-chu-li-gao-jie/</url>
      
        <content type="html"><![CDATA[<p>系统化的数组方法: 偏客制化</p><a id="more"></a><h4 id="1-找出对象数组某属性值为空的元素，生成一个新数组"><a href="#1-找出对象数组某属性值为空的元素，生成一个新数组" class="headerlink" title="1.找出对象数组某属性值为空的元素，生成一个新数组"></a>1.找出对象数组某属性值为空的元素，生成一个新数组</h4><p><font color="#08c" size="3">传统：findIndex()函数找寻元素所在的数组下标位置，和push()配合使用实现</font></p><p><font color="#08c" size="3">进阶：reduce()、push()配合使用</font><font color="red" size="3">（好处：能同时获取该元素、或者下标，同时实现findIndex()和find()）</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;***data：数组**propertyName: 属性名*&#x2F;const reducePush &#x3D; (data: Array, propertyName: String) &#x3D;&gt; &#123;const array &#x3D; data.reduce((indexes, obj, index) &#x3D;&gt; &#123;if (obj[propertyName]) &#123;&#x2F;&#x2F; index下标、obj元素内容indexes.push(obj);&#125;return indexes;&#125;, [])return array&#125;const data &#x3D; [&#123; name: &#39;&#39;, age: &#39;11&#39; &#125;, &#123; name: &#39;小明&#39;, age: &#39;12&#39; &#125;]const newData &#x3D; reducePush(data, &#39;name&#39;) &#x2F;&#x2F; find效果newData: [&#123; name: &#39;小明&#39;, age: &#39;12&#39; &#125;]&#x2F;&#x2F; findIndex效果newData: [1]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-递归过滤整个数组对象某属性值为空的值"><a href="#2-递归过滤整个数组对象某属性值为空的值" class="headerlink" title="2.递归过滤整个数组对象某属性值为空的值"></a>2.递归过滤整个数组对象某属性值为空的值</h4><p><font color="#08c" size="3">一般用于树形结构，判断title属性为空过滤</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;***data：数组**propertyName: 属性名*&#x2F;const removeEmptyItems &#x3D; (data: Array, propertyName: String) &#x3D;&gt; &#123;const newArr &#x3D; [];for (let i &#x3D; 0; i &lt; arr.length; i++) &#123;const item &#x3D; arr[i];if (item[propertyName] !&#x3D;&#x3D; &#39;&#39;) &#123;if (Array.isArray(item.children)) &#123;item.children &#x3D; this.removeEmptyItems(item.children);&#125;newArr.push(item);&#125;&#125;return newArr;&#125;const data &#x3D; [&#123; name: &#39;&#39;, age: &#39;11&#39; &#125;, &#123; name: &#39;小明&#39;, age: &#39;12&#39;, children: [&#123; name: &#39;&#39;, age: &#39;110&#39; &#125;, &#123; name: &#39;小黑&#39;, age: &#39;120&#39; &#125;, ]&#125;]const newData &#x3D; reducePush(data, &#39;name&#39;) &#x2F;*newData: [&#123; name: &#39;小明&#39;, age: &#39;12&#39;, children: [&#123; name: &#39;小黑&#39;, age: &#39;120&#39; &#125;, ]&#125;]*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XLSX插件使用指南</title>
      <link href="/hexo/2023/06/26/er-jin-zhi-cha-jian-biao-ge-sheng-cheng-xlsx-cha-jian-shi-yong-zhi-nan/"/>
      <url>/hexo/2023/06/26/er-jin-zhi-cha-jian-biao-ge-sheng-cheng-xlsx-cha-jian-shi-yong-zhi-nan/</url>
      
        <content type="html"><![CDATA[<p>导出execl、导入execl解析树形结构</p><a id="more"></a><p><a href="https://docs.sheetjs.com/docs/api/utilities/array/">xlsx官网文档</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install XLSX<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-execl文件导出"><a href="#1-execl文件导出" class="headerlink" title="1.execl文件导出"></a>1.execl文件导出</h3><p>例如</p><p><img src="http://linmingqi.top/img/execl%E8%A1%A8%E6%A0%BC%E5%AF%BC%E5%87%BA.png"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">exportExecl</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> worksheet <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">aoa_to_sheet</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'一级目录'</span><span class="token punctuation">,</span> <span class="token string">'二级目录'</span><span class="token punctuation">,</span> <span class="token string">'三级目录'</span><span class="token punctuation">,</span> <span class="token string">'四级目录'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'第一单元 我和我的祖国'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'第一章节 我的祖国'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'欣赏'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'我的中国心'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'演唱'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'我的祖国'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> columnWidths <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token comment">// 设置每列宽度</span><span class="token punctuation">&#123;</span> wpx<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span> wpx<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span> wpx<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span> wpx<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>worksheet<span class="token punctuation">[</span><span class="token string">'!cols'</span><span class="token punctuation">]</span> <span class="token operator">=</span> columnWidths<span class="token punctuation">;</span><span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> worksheet<span class="token punctuation">,</span> <span class="token string">'Sheet1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 也可以导出csv纯json格式数据，具体实现官网</span><span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> <span class="token string">'模板.xlsx'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-execl文件导入解析树状结构"><a href="#2-execl文件导入解析树状结构" class="headerlink" title="2.execl文件导入解析树状结构"></a>2.execl文件导入解析树状结构</h3><p>拿到上面导出的execl导入解析需要转换为以下格式、树状结构</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const jsonData &#x3D; [  &#123;    title:&#39;第一单元 我和我的祖国&#39;,    level: 1,    children: [      &#123;        title:&#39;第一章节 我和我的祖国&#39;,        level: 2,        children: [          &#123;            title:&#39;欣赏&#39;,            level: 3,            children: [              &#123;                title:&#39;我的中国心&#39;,                level: 4,                children: null              &#125;            ]          &#125;,          &#123;            title:&#39;演唱&#39;,            level: 3,            children: [              &#123;                title:&#39;我的祖国&#39;,                children: null              &#125;            ]          &#125;,        ]      &#125;    ],  &#125;,];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="导入execl获取到表格的数据"><a href="#导入execl获取到表格的数据" class="headerlink" title="导入execl获取到表格的数据"></a>导入execl获取到表格的数据</h4><p>通过reducePush找到符合条件的各个元素下标位置</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">importExecl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">uploadFileEvent</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>accept<span class="token operator">:</span> <span class="token string">'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readBlobAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token keyword">const</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> type<span class="token operator">:</span> <span class="token string">'array'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> worksheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>workbook<span class="token punctuation">.</span>SheetNames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">const</span> jsonData <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>worksheet<span class="token punctuation">)</span><span class="token comment">// console.log('jsonData最开始结构', jsonData)</span><span class="token keyword">const</span> oneIndex <span class="token operator">=</span> <span class="token function">reducePush</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">,</span> <span class="token string">'一级目录'</span><span class="token punctuation">)</span><span class="token comment">// console.log('jsonData第一级目录下标', oneIndex) [1,9,10,11,12]</span><span class="token keyword">const</span> twoIndex <span class="token operator">=</span> <span class="token function">reducePush</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">,</span> <span class="token string">'二级目录'</span><span class="token punctuation">)</span><span class="token comment">// console.log('jsonData第二级目录下标', twoIndex) [2,8,13,16]</span><span class="token keyword">const</span> threeIndex <span class="token operator">=</span> <span class="token function">reducePush</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">,</span> <span class="token string">'三级目录'</span><span class="token punctuation">)</span><span class="token comment">// console.log('jsonData第三级目录下标', threeIndex) [3,14,17]</span><span class="token keyword">const</span> fourIndex <span class="token operator">=</span> <span class="token function">reducePush</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">,</span> <span class="token string">'四级目录'</span><span class="token punctuation">)</span><span class="token comment">// console.log('jsonData第四级目录下标', fourIndex) [4,5,6,7,15,18,19]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="分析数据结构"><a href="#分析数据结构" class="headerlink" title="分析数据结构"></a>分析数据结构</h4><p><font color="red" id="back">缕清之间的关系oneIndex、twoIndex、threeIndex、fourIndex</font> <a href="#json">具体结构</a> </p><ul><li>一级目录有1,9,10,11,12,发现1-9中间就是1的子级，9、10、11没有子级，大于12的就是12的子级 </li><li>二级目录2,8是1的子级，13,16是12的子级</li><li>三级目录3是2的子级，14是13的子级，17是16的子级</li><li>四级目录4,5,6,7是3的子级，15是14的子级，18,19是17的子级</li></ul><p><font color="red">其实就是相邻之间的范围值就是要填充的位置，最后一位时肯定是空的，只需要判断 下标+1 的时候是undefined 就能知道是最后一位，直接大于最后一位</font></p><h4 id="逻辑实现代码"><a href="#逻辑实现代码" class="headerlink" title="逻辑实现代码"></a>逻辑实现代码</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> arrayOne <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>oneIndex<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">one<span class="token punctuation">,</span> oneIdx</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span>title<span class="token operator">:</span> jsonData<span class="token punctuation">[</span>one<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'一级目录'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>twoIndex<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">two<span class="token punctuation">,</span> twoIdx</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>two <span class="token operator">></span> one <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>two <span class="token operator">&lt;</span> oneIndex<span class="token punctuation">[</span>oneIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> oneIndex<span class="token punctuation">[</span>oneIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">&#123;</span>title<span class="token operator">:</span> jsonData<span class="token punctuation">[</span>two<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'二级目录'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>a<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>threeIndex<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">three<span class="token punctuation">,</span> threeIdx</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>three <span class="token operator">></span> two <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>three <span class="token operator">&lt;</span> twoIndex<span class="token punctuation">[</span>twoIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> twoIndex<span class="token punctuation">[</span>twoIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token punctuation">&#123;</span>title<span class="token operator">:</span> jsonData<span class="token punctuation">[</span>three<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'三级目录'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>b<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>fourIndex<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">four</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>four <span class="token operator">></span> three <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>four <span class="token operator">&lt;</span> threeIndex<span class="token punctuation">[</span>threeIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> threeIndex<span class="token punctuation">[</span>threeIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token punctuation">&#123;</span>title<span class="token operator">:</span> jsonData<span class="token punctuation">[</span>four<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'四级目录'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span>c<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>arrayOne<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="reducePush函数"><a href="#reducePush函数" class="headerlink" title="reducePush函数"></a>reducePush函数</h4><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;***data：数组**propertyName: 属性名*&#x2F;const reducePush &#x3D; (data: Array, propertyName: String) &#x3D;&gt; &#123;const array &#x3D; data.reduce((indexes, obj, index) &#x3D;&gt; &#123;if (obj[propertyName]) &#123;&#x2F;&#x2F; index下标、obj元素内容indexes.push(obj);&#125;return indexes;&#125;, [])return array&#125;const data &#x3D; [&#123; name: &#39;&#39;, age: &#39;11&#39; &#125;, &#123; name: &#39;小明&#39;, age: &#39;12&#39; &#125;]const newData &#x3D; reducePush(data, &#39;name&#39;) &#x2F;&#x2F; find效果newData: [&#123; name: &#39;小明&#39;, age: &#39;12&#39; &#125;]&#x2F;&#x2F; findIndex效果newData: [1]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font id="json">树形数据结构展示</font> <a href="#back">回到触发点</a> </p><pre class="line-numbers language-js" data-language="js"><code class="language-js">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_1<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_2<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_3<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_4<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_4<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_4<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_4<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_2<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_1<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_1<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_1<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_1<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_2<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_3<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_4<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_2<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_3<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>id_4<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>id_4<span class="token operator">:</span> jsonData<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>功能模块（html-to-image生成图片）</title>
      <link href="/hexo/2023/06/08/gong-neng-mo-kuai-html-to-image-sheng-cheng-tu-pian/"/>
      <url>/hexo/2023/06/08/gong-neng-mo-kuai-html-to-image-sheng-cheng-tu-pian/</url>
      
        <content type="html"><![CDATA[<p>使用html-to-iamge插件依赖，html元素转换成图片</p><a id="more"></a><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import &#123; toPng, toJpeg, toBlob, toPixelData, toSvg &#125; from &#39;html-to-image&#39;export const htmlToCanvasToBaseUrl &#x3D; (node &#x3D; &lt;HTMLDivElement&gt;document.body) &#x3D;&gt; &#123;  return new Promise((reslove) &#x3D;&gt; &#123;    htmlToImage.toPng(node).then(function(dataUrl) &#123;      const img &#x3D; new Image() as any      img.src &#x3D; dataUrl      document.body.appendChild(img)      reslove(dataUrl)    &#125;).catch(function(error) &#123;      console.error(&#39;oops, something went wrong!&#39;, error)    &#125;)  &#125;)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>html-to-image遇到iframe元素会报错，可以试试 html2canvas 插件依赖解决 iframe 转换报错问题，功能实现差不多</p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>canvas实现画布效果（画笔、橡皮擦、清除、撤回、放大）</title>
      <link href="/hexo/2023/06/08/gong-neng-mo-kuai-canvas-shi-xian-hua-bi-xiang-pi-ca-qing-chu-che-hui/"/>
      <url>/hexo/2023/06/08/gong-neng-mo-kuai-canvas-shi-xian-hua-bi-xiang-pi-ca-qing-chu-che-hui/</url>
      
        <content type="html"><![CDATA[<p>canvas实现画布的画笔绘画功能、橡皮擦擦除功能、撤回功能、清除画布功能、画布放大</p><a id="more"></a><h3 id="1、组件封装（实现最基础的canavs绘画功能：画笔、橡皮擦、涂鸦笔）"><a href="#1、组件封装（实现最基础的canavs绘画功能：画笔、橡皮擦、涂鸦笔）" class="headerlink" title="1、组件封装（实现最基础的canavs绘画功能：画笔、橡皮擦、涂鸦笔）"></a>1、组件封装（实现最基础的canavs绘画功能：画笔、橡皮擦、涂鸦笔）</h3><h4 id="WritingBoard-html"><a href="#WritingBoard-html" class="headerlink" title="WritingBoard.html"></a><font color="#FF5E2A">WritingBoard.html</font></h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>writing-board<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>writingBoardRef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blackboard<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boardModel === <span class="token punctuation">'</span>black<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>whiteboard<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boardModel === <span class="token punctuation">'</span>white<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>staffboard<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boardModel === <span class="token punctuation">'</span>staff<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvas<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvasRef<span class="token punctuation">"</span></span>      <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span></span><span class="token attr-value">        <span class="token property">width</span><span class="token punctuation">:</span> canvasWidth + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">        <span class="token property">height</span><span class="token punctuation">:</span> canvasHeight + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">      <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span>      <span class="token attr-name">@mousedown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$event => handleMousedown($event)<span class="token punctuation">"</span></span>      <span class="token attr-name">@mousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$event => handleMousemove($event)<span class="token punctuation">"</span></span>      <span class="token attr-name">@mouseup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleMouseup()<span class="token punctuation">"</span></span>      <span class="token attr-name">@touchstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$event => handleMousedown($event)<span class="token punctuation">"</span></span>      <span class="token attr-name">@touchmove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$event => handleMousemove($event)<span class="token punctuation">"</span></span>      <span class="token attr-name">@touchend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleMouseup(); mouseInCanvas = false<span class="token punctuation">"</span></span>      <span class="token attr-name">@mouseleave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleMouseup(); mouseInCanvas = false<span class="token punctuation">"</span></span>      <span class="token attr-name">@mouseenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mouseInCanvas = true<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mouseInCanvas<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>         <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eraser<span class="token punctuation">"</span></span>        <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span></span><span class="token attr-value">          <span class="token property">left</span><span class="token punctuation">:</span> mouse.x - rubberSize / 2 + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">          <span class="token property">top</span><span class="token punctuation">:</span> mouse.y - rubberSize / 2 + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">          <span class="token property">width</span><span class="token punctuation">:</span> rubberSize + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">          <span class="token property">height</span><span class="token punctuation">:</span> rubberSize + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">        <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span>        <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>model === <span class="token punctuation">'</span>eraser<span class="token punctuation">'</span><span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>         <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pen<span class="token punctuation">"</span></span>        <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span></span><span class="token attr-value">          <span class="token property">left</span><span class="token punctuation">:</span> mouse.x - penSize / 2 + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">          <span class="token property">top</span><span class="token punctuation">:</span> mouse.y - penSize * 6 + penSize / 2 + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">          <span class="token property">color</span><span class="token punctuation">:</span> color<span class="token punctuation">,</span></span><span class="token attr-value">        <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span>        <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>model === <span class="token punctuation">'</span>pen<span class="token punctuation">'</span><span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IconWrite</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>penSize * 6<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>model === <span class="token punctuation">'</span>pen<span class="token punctuation">'</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>         <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pen<span class="token punctuation">"</span></span>        <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span></span><span class="token attr-value">          <span class="token property">left</span><span class="token punctuation">:</span> mouse.x - markSize / 2 + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">          <span class="token property">top</span><span class="token punctuation">:</span> mouse.y + <span class="token string">'px'</span><span class="token punctuation">,</span></span><span class="token attr-value">          <span class="token property">color</span><span class="token punctuation">:</span> color<span class="token punctuation">,</span></span><span class="token attr-value">        <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span>        <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>model === <span class="token punctuation">'</span>mark<span class="token punctuation">'</span><span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IconHighLight</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>markSize * 1.5<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>model === <span class="token punctuation">'</span>mark<span class="token punctuation">'</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="WritingBoard-js"><a href="#WritingBoard-js" class="headerlink" title="WritingBoard.js"></a><font color="#FF5E2A" id="link">WritingBoard.js</font></h4><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import &#123; computed, onMounted, onUnmounted, PropType, ref, watch &#125; from &#39;vue&#39;const props &#x3D; defineProps(&#123;  &#x2F;&#x2F; 笔的颜色  color: &#123;    type: String,    default: &#39;#ffcc00&#39;,  &#125;,  &#x2F;&#x2F; 画笔、橡皮擦、涂鸦笔  model: &#123;    type: String as PropType&lt;&#39;pen&#39; | &#39;eraser&#39; | &#39;mark&#39;&gt;,    default: &#39;pen&#39;,  &#125;,  &#x2F;&#x2F; 画布背景色  boardBgModel: &#123;    type: String as PropType&lt;&#39;white&#39; | &#39;black&#39; | &#39;staff&#39;&gt;,    default: &#39;white&#39;  &#125;,  &#x2F;&#x2F; 画笔粗细  penSize: &#123;    type: Number,    default: 6,  &#125;,  &#x2F;&#x2F; 涂鸦笔粗细  markSize: &#123;    type: Number,    default: 24,  &#125;,  &#x2F;&#x2F; 橡皮擦大小  rubberSize: &#123;    type: Number,    default: 80,  &#125;,  &#x2F;&#x2F; 自定义样式  customStyle: &#123;    type: Object  &#125;&#125;)const emit &#x3D; defineEmits&lt;&#123;  (event: &#39;end&#39;): void&#125;&gt;()let ctx: CanvasRenderingContext2D | null &#x3D; nullconst writingBoardRef &#x3D; ref&lt;HTMLElement&gt;()const canvasRef &#x3D; ref&lt;HTMLCanvasElement&gt;()let lastPos &#x3D; &#123;  x: 0,  y: 0,&#125;let isMouseDown &#x3D; falselet lastTime &#x3D; 0let lastLineWidth &#x3D; -1&#x2F;&#x2F; 鼠标位置坐标：用于画笔或橡皮位置跟随const mouse &#x3D; ref(&#123;  x: 0,  y: 0,&#125;)&#x2F;&#x2F; 鼠标是否处在画布范围内：处在范围内才会显示画笔或橡皮const mouseInCanvas &#x3D; ref(false)&#x2F;&#x2F; 监听更新canvas尺寸const canvasWidth &#x3D; ref(0)const canvasHeight &#x3D; ref(0)const widthScale &#x3D; computed(() &#x3D;&gt; canvasRef.value ? canvasWidth.value &#x2F; canvasRef.value.width : 1)const heightScale &#x3D; computed(() &#x3D;&gt; canvasRef.value ? canvasHeight.value &#x2F; canvasRef.value.height : 1)const updateCanvasSize &#x3D; () &#x3D;&gt; &#123;  if (!writingBoardRef.value) return  canvasWidth.value &#x3D; writingBoardRef.value.clientWidth &gt; props.customStyle?.width.split(&#39;px&#39;)[0] ? props.customStyle?.width.split(&#39;px&#39;)[0] : writingBoardRef.value.clientWidth  canvasHeight.value &#x3D; writingBoardRef.value.clientHeight &gt; props.customStyle?.height.split(&#39;px&#39;)[0] ? props.customStyle?.height.split(&#39;px&#39;)[0] : writingBoardRef.value.clientHeight&#125;const resizeObserver &#x3D; new ResizeObserver(updateCanvasSize)onMounted(() &#x3D;&gt; &#123;  if (writingBoardRef.value) resizeObserver.observe(writingBoardRef.value)&#125;)onUnmounted(() &#x3D;&gt; &#123;  if (writingBoardRef.value) resizeObserver.unobserve(writingBoardRef.value)&#125;)&#x2F;&#x2F; 初始化画布const initCanvas &#x3D; () &#x3D;&gt; &#123;  if (!canvasRef.value || !writingBoardRef.value) return  ctx &#x3D; canvasRef.value.getContext(&#39;2d&#39;)  if (!ctx) return  canvasRef.value.width &#x3D; writingBoardRef.value.clientWidth  canvasRef.value.height &#x3D; writingBoardRef.value.clientHeight  ctx.lineCap &#x3D; &#39;round&#39;  ctx.lineJoin &#x3D; &#39;round&#39;&#125;onMounted(initCanvas)&#x2F;&#x2F; 切换画笔模式时，更新 canvas ctx 配置const updateCtx &#x3D; () &#x3D;&gt; &#123;  if (!ctx) return  if (props.model &#x3D;&#x3D;&#x3D; &#39;mark&#39;) &#123;    ctx.globalCompositeOperation &#x3D; &#39;xor&#39;    ctx.globalAlpha &#x3D; 0.5  &#125;  else if (props.model &#x3D;&#x3D;&#x3D; &#39;pen&#39;) &#123;    ctx.globalCompositeOperation &#x3D; &#39;source-over&#39;    ctx.globalAlpha &#x3D; 1  &#125;&#125;watch(() &#x3D;&gt; props.model, updateCtx)&#x2F;&#x2F; 绘制画笔墨迹方法const draw &#x3D; (posX: number, posY: number, lineWidth: number) &#x3D;&gt; &#123;  if (!ctx) return  const lastPosX &#x3D; lastPos.x  const lastPosY &#x3D; lastPos.y  ctx.lineWidth &#x3D; lineWidth  ctx.strokeStyle &#x3D; props.color  ctx.beginPath()  ctx.moveTo(lastPosX, lastPosY)  ctx.lineTo(posX, posY)  ctx.stroke()  ctx.closePath()&#125;&#x2F;&#x2F; 擦除墨迹方法const erase &#x3D; (posX: number, posY: number) &#x3D;&gt; &#123;  if (!ctx || !canvasRef.value) return  const lastPosX &#x3D; lastPos.x  const lastPosY &#x3D; lastPos.y  const radius &#x3D; props.rubberSize &#x2F; 2  const sinRadius &#x3D; radius * Math.sin(Math.atan((posY - lastPosY) &#x2F; (posX - lastPosX)))  const cosRadius &#x3D; radius * Math.cos(Math.atan((posY - lastPosY) &#x2F; (posX - lastPosX)))  const rectPoint1: [number, number] &#x3D; [lastPosX + sinRadius, lastPosY - cosRadius]  const rectPoint2: [number, number] &#x3D; [lastPosX - sinRadius, lastPosY + cosRadius]  const rectPoint3: [number, number] &#x3D; [posX + sinRadius, posY - cosRadius]  const rectPoint4: [number, number] &#x3D; [posX - sinRadius, posY + cosRadius]  ctx.save()  ctx.beginPath()  ctx.arc(posX, posY, radius, 0, Math.PI * 2)  ctx.clip()  ctx.clearRect(0, 0, canvasRef.value.width, canvasRef.value.height)  ctx.restore()  ctx.save()  ctx.beginPath()  ctx.moveTo(...rectPoint1)  ctx.lineTo(...rectPoint3)  ctx.lineTo(...rectPoint4)  ctx.lineTo(...rectPoint2)  ctx.closePath()  ctx.clip()  ctx.clearRect(0, 0, canvasRef.value.width, canvasRef.value.height)  ctx.restore()&#125;&#x2F;&#x2F; 计算鼠标两次移动之间的距离const getDistance &#x3D; (posX: number, posY: number) &#x3D;&gt; &#123;  const lastPosX &#x3D; lastPos.x  const lastPosY &#x3D; lastPos.y  return Math.sqrt((posX - lastPosX) * (posX - lastPosX) + (posY - lastPosY) * (posY - lastPosY))&#125;&#x2F;&#x2F; 根据鼠标两次移动之间的距离s和时间t计算绘制速度，速度越快，墨迹越细const getLineWidth &#x3D; (s: number, t: number) &#x3D;&gt; &#123;  const maxV &#x3D; 10  const minV &#x3D; 0.1  const maxWidth &#x3D; props.penSize  const minWidth &#x3D; 3  const v &#x3D; s &#x2F; t  let lineWidth  if (v &lt;&#x3D; minV) lineWidth &#x3D; maxWidth  else if (v &gt;&#x3D; maxV) lineWidth &#x3D; minWidth  else lineWidth &#x3D; maxWidth - v &#x2F; maxV * maxWidth  if (lastLineWidth &#x3D;&#x3D;&#x3D; -1) return lineWidth  return lineWidth * 1 &#x2F; 3 + lastLineWidth * 2 &#x2F; 3&#125;&#x2F;&#x2F; 路径操作const handleMove &#x3D; (x: number, y: number) &#x3D;&gt; &#123;  const time &#x3D; new Date().getTime()  if (props.model &#x3D;&#x3D;&#x3D; &#39;pen&#39;) &#123;    const s &#x3D; getDistance(x, y)    const t &#x3D; time - lastTime    const lineWidth &#x3D; getLineWidth(s, t)    draw(x, y, lineWidth)    lastLineWidth &#x3D; lineWidth  &#125;  else if (props.model &#x3D;&#x3D;&#x3D; &#39;mark&#39;) draw(x, y, props.markSize)  else erase(x, y)  lastPos &#x3D; &#123; x, y &#125;  lastTime &#x3D; new Date().getTime()&#125;&#x2F;&#x2F; 获取鼠标在canvas中的相对位置const getMouseOffsetPosition &#x3D; (e: MouseEvent | TouchEvent) &#x3D;&gt; &#123;  if (!canvasRef.value) return [0, 0]  const event &#x3D; e instanceof MouseEvent ? e : e.changedTouches[0]  const canvasRect &#x3D; canvasRef.value.getBoundingClientRect()  const x &#x3D; event.pageX - canvasRect.x  const y &#x3D; event.pageY - canvasRect.y  return [x, y]&#125;&#x2F;&#x2F; 处理鼠标（触摸）事件&#x2F;&#x2F; 准备开始绘制&#x2F;擦除墨迹（落笔）const handleMousedown &#x3D; (e: MouseEvent | TouchEvent) &#x3D;&gt; &#123;  const [mouseX, mouseY] &#x3D; getMouseOffsetPosition(e)  const x &#x3D; mouseX &#x2F; widthScale.value  const y &#x3D; mouseY &#x2F; heightScale.value  isMouseDown &#x3D; true  lastPos &#x3D; &#123; x, y &#125;  lastTime &#x3D; new Date().getTime()  if (!(e instanceof MouseEvent)) &#123;    mouse.value &#x3D; &#123; x: mouseX, y: mouseY &#125;    mouseInCanvas.value &#x3D; true  &#125;&#125;&#x2F;&#x2F; 开始绘制&#x2F;擦除墨迹（移动）const handleMousemove &#x3D; (e: MouseEvent | TouchEvent) &#x3D;&gt; &#123;  const [mouseX, mouseY] &#x3D; getMouseOffsetPosition(e)  const x &#x3D; mouseX &#x2F; widthScale.value  const y &#x3D; mouseY &#x2F; heightScale.value  mouse.value &#x3D; &#123; x: mouseX, y: mouseY &#125;  if (isMouseDown) handleMove(x, y)&#125;&#x2F;&#x2F; 结束绘制&#x2F;擦除墨迹（停笔）const handleMouseup &#x3D; () &#x3D;&gt; &#123;  if (!isMouseDown) return  isMouseDown &#x3D; false  emit(&#39;end&#39;)&#125;&#x2F;&#x2F; 清空画布const clearCanvas &#x3D; () &#x3D;&gt; &#123;  if (!ctx || !canvasRef.value) return  ctx.clearRect(0, 0, canvasRef.value.width, canvasRef.value.height)  emit(&#39;end&#39;)&#125;&#x2F;&#x2F; 获取 DataURLconst getImageDataURL &#x3D; () &#x3D;&gt; &#123;  return canvasRef.value?.toDataURL()&#125;&#x2F;&#x2F; 设置 DataURL（绘制图片到 canvas）const setImageDataURL &#x3D; (imageDataURL: string) &#x3D;&gt; &#123;  if (!ctx || !canvasRef.value) return    ctx.clearRect(0, 0, canvasRef.value.width, canvasRef.value.height)  if (imageDataURL) &#123;    ctx.globalCompositeOperation &#x3D; &#39;source-over&#39;    ctx.globalAlpha &#x3D; 1    const img &#x3D; new Image()    img.src &#x3D; imageDataURL    img.onload &#x3D; () &#x3D;&gt; &#123;      ctx!.drawImage(img, 0, 0)      updateCtx()    &#125;  &#125;&#125;defineExpose(&#123;  clearCanvas,  getImageDataURL,  setImageDataURL,&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="WritingBoard-css"><a href="#WritingBoard-css" class="headerlink" title="WritingBoard.css"></a><font color="#FF5E2A">WritingBoard.css</font></h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.writing-board</span> <span class="token punctuation">&#123;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 8<span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token atrule"><span class="token rule">@include</span> <span class="token function">absolute-0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">&#125;</span><span class="token selector">.blackboard</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #0f392b<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.whiteboard</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.staffboard</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>@/assets/imgs/staff.jpg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.canvas</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.eraser, .pen</span> <span class="token punctuation">&#123;</span>  <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 9<span class="token selector">;  .icon</span> <span class="token punctuation">&#123;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">drop-shadow</span><span class="token punctuation">(</span>2px 2px 2px #555<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.eraser</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> grey 0 0 10px 2px inset<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>$<span class="token property">color</span><span class="token punctuation">:</span> #555<span class="token punctuation">,</span> $<span class="token property">alpha</span><span class="token punctuation">:</span> .75<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">drop-shadow</span><span class="token punctuation">(</span>grey 0 0 2px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="WritingBoard-vue"><a href="#WritingBoard-vue" class="headerlink" title="WritingBoard.vue"></a><font color="#FF5E2A">WritingBoard.vue</font></h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./canavs.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./canavs.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./canvas.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2、使用组件（最基础的画笔功能实现）"><a href="#2、使用组件（最基础的画笔功能实现）" class="headerlink" title="2、使用组件（最基础的画笔功能实现）"></a>2、使用组件（最基础的画笔功能实现）</h3><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&lt;WritingBoard   :penSize&#x3D;&quot;penSize&quot;  :markSize&#x3D;&quot;markSize&quot;  :boardBgModel&#x3D;&quot;boardBgModel&quot;  :color&#x3D;&quot;color&quot;  :model&#x3D;&quot;model&quot;  @end&#x3D;&quot;hanldeWritingEnd&quot;&#x2F;&gt;import WritingBoard from &#39;@&#x2F;components&#x2F;WritingBoard.vue&#39;import &#123; ref &#125; from &#39;vue&#39;const penSize &#x3D; ref&lt;number&gt;(6)const markSize &#x3D; ref&lt;number&gt;(24)const colors: Array&lt;string&gt; &#x3D; [&#39;#FF1C1C&#39;, &#39;#FF8C00&#39;, &#39;#FFBD00&#39;, &#39;#F63B88&#39;, &#39;#640FBD&#39;, &#39;#4683FF&#39;, &#39;#4E9B30&#39;, &#39;#00C79C&#39;, &#39;#2F2F2F&#39;, &#39;#818181&#39;, &#39;#C1C2C2&#39;, &#39;#FFFFFF&#39;]const color &#x3D; ref&lt;string&gt;(&#39;#e2534d&#39;)const boardBgModel &#x3D; ref(&#39;white&#39; as &#39;white&#39; | &#39;black&#39; | &#39;staff&#39;)const model &#x3D; ref(&#39;pen&#39; as &#39;pen&#39; | &#39;eraser&#39; | &#39;mark&#39;)const hanldeWritingEnd &#x3D; () &#x3D;&gt; &#123; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、添加撤回功能、清除功能、笔迹数据保存（以上使用模版添加逻辑）"><a href="#3、添加撤回功能、清除功能、笔迹数据保存（以上使用模版添加逻辑）" class="headerlink" title="3、添加撤回功能、清除功能、笔迹数据保存（以上使用模版添加逻辑）"></a>3、添加撤回功能、清除功能、笔迹数据保存（以上使用模版添加逻辑）</h3><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&lt;WritingBoard   :penSize&#x3D;&quot;penSize&quot;  :markSize&#x3D;&quot;markSize&quot;  :boardBgModel&#x3D;&quot;boardBgModel&quot;  :color&#x3D;&quot;color&quot;  :model&#x3D;&quot;model&quot;  ref&#x3D;&quot;writingBoardRef&quot;  @end&#x3D;&quot;hanldeWritingEnd&quot;&#x2F;&gt;import WritingBoard from &#39;@&#x2F;components&#x2F;WritingBoard.vue&#39;import &#123; ref, watch &#125; from &#39;vue&#39;const writingBoardRef &#x3D; ref&lt;typeof WritingBoard&gt;()const writingData &#x3D; ref([] as Array&lt;string&gt;) &#x2F;&#x2F; 将每次笔迹保存，base64图片格式const writingIndex &#x3D; ref(0 as number) &#x2F;&#x2F; 用来记录画笔次数、上一步画笔次数 -1 | 下一步画笔次数 + 1const boardBgModel &#x3D; ref(&#39;white&#39; as &#39;white&#39; | &#39;black&#39; | &#39;staff&#39;)&#x2F;&#x2F; 清除画布上的墨迹const clearCanvas &#x3D; () &#x3D;&gt; &#123;  writingBoardRef.value!.clearCanvas()&#125;&#x2F;&#x2F; 笔迹数据保存const hanldeWritingEnd &#x3D; () &#x3D;&gt; &#123;  const dataURL &#x3D; writingBoardRef.value!.getImageDataURL()  writingData.value.push(dataURL)  writingIndex.value +&#x3D; 1&#125;&#x2F;&#x2F; 撤回上一步const withDrawnUp &#x3D; () &#x3D;&gt; &#123;  if (writingIndex.value &#x3D;&#x3D;&#x3D; 0) return &#x2F;&#x2F; 已经是第一步了  writingIndex.value -&#x3D; 1  writingBoardRef.value!.setImageDataURL(writingData.value[writingIndex.value])&#125;&#x2F;&#x2F; 撤回下一步const withDrawnDown &#x3D; () &#x3D;&gt; &#123;  if (writingIndex.value &#x3D;&#x3D;&#x3D; writingData.value.length) return &#x2F;&#x2F; 已经是最后一步了  writingIndex.value +&#x3D; 1  writingBoardRef.value!.setImageDataURL(writingData.value[writingIndex.value])&#125;&#x2F;&#x2F; 数据回显（白色黑板 | 黑色黑板 | 自定义板）三个黑板数据不通用隔离 ~ 省麻烦这里展示一种watch(() &#x3D;&gt; boardBgModel.value, (type: typeof boardBgModel.value) &#x3D;&gt; &#123;  swtich (type) &#123;    case &#39;white&#39; | &#39;black&#39; | &#39;staff&#39;:      writingBoardRef.value!.setImageDataURL(writingData.value[writingData.value.length - 1])      break    default      writingBoardRef.value!.setImageDataURL(writingData.value[writingData.value.length - 1])  &#125;&#125;, &#123; immediate: true &#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">注：</font><br><font color="red">1.画笔数据其实是一张图片、base64 转换在线 url 再进行提交</font><br><font color="red">2.提交数据是最后一步结果</font><br><font color="red">3.获取远程笔迹数据注意调用 setImageDataURL 给画布数据</font></p><h3 id="4、添加画布放大功能（以上使用模版添加逻辑）难点来了"><a href="#4、添加画布放大功能（以上使用模版添加逻辑）难点来了" class="headerlink" title="4、添加画布放大功能（以上使用模版添加逻辑）难点来了"></a>4、添加画布放大功能（以上使用模版添加逻辑）难点来了</h3><p><font color="red">遇到的问题：</font><br><font color="red">1.画布放大导致画笔各类工具错位</font><br><font color="#FF5E2A">原因1：放大时有外部元素干扰，例如画布组件被一层div包裹着，这时候定位就会脱离外层div，导致工具错位</font><br><font color="#FF5E2A">解决办法：将外层div等比例放大</font><br><font color="#FF5E2A">原因2：new ResizeObserver这个API导致，或者是他监听的事件触发导致</font><br><font color="#FF5E2A">解决办法：将外层div等比例放大、具体看下面代码解决<a href="#reason_two">点击查看</a></font></p><p><font color="red">2.放大无法选择区域、默认是画笔各类工具状态</font><br><font color="#FF5E2A">解决：将画布拖拽移动分离：右下角提供一个小窗口，里面有一个元素在固定小窗口内移动，元素移动画布跟随着移动</font></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>writing-board-wrap<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">  <span class="token punctuation">&#123;</span></span><span class="token attr-value">    ...centerStyle<span class="token punctuation">,</span></span><span class="token attr-value">    ...sildeStyle</span><span class="token attr-value">  <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 为了不混淆功能实现，无关的传参我这边忽略 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WritingBoard</span>    <span class="token attr-name">:custom</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">Style</span></span><span class="token punctuation">="</span><span class="token attr-value">sildeStyle</span><span class="token punctuation">"</span></span>    <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span> <span class="token property">left</span><span class="token punctuation">:</span> canvasLeft + <span class="token string">'px'</span><span class="token punctuation">,</span> <span class="token property">top</span><span class="token punctuation">:</span> canvasTop + <span class="token string">'px'</span> <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>  <span class="token comment">&lt;!-- 引用了ant的气泡弹框组件 | windicss原子类 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">_pos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>absolute<span class="token punctuation">"</span></span> <span class="token attr-name">_bottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">_right</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120px<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~ items-center<span class="token punctuation">"</span></span> <span class="token attr-name">_w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150px<span class="token punctuation">"</span></span> <span class="token attr-name">_h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60px<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box-shadow<span class="token punctuation">"</span></span> <span class="token attr-name">_bg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span> <span class="token attr-name">_border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rounded-t-[10px]<span class="token punctuation">"</span></span> <span class="token attr-name">_z</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>9<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Popover</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover<span class="token punctuation">"</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#content</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> thumbnailWidth + <span class="token string">'px'</span><span class="token punctuation">,</span> <span class="token property">height</span><span class="token punctuation">:</span> thumbnailHeight + <span class="token string">'px'</span> <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">_pos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>relative<span class="token punctuation">"</span></span> <span class="token attr-name">@mousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleMouseMove<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dragging = false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- 画板的笔迹映射到小窗口背景 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>thumbnail<span class="token punctuation">"</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>thumbnail<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> thumbnailWidth + <span class="token string">'px'</span><span class="token punctuation">,</span> <span class="token property">height</span><span class="token punctuation">:</span> thumbnailHeight + <span class="token string">'px'</span> <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">:draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">_pos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>absolute<span class="token punctuation">"</span></span> <span class="token attr-name">_z</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>9<span class="token punctuation">"</span></span> <span class="token attr-name">_border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2px solid [red]<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span> ...thumbnailStyle<span class="token punctuation">,</span> <span class="token property">left</span><span class="token punctuation">:</span> posX + <span class="token string">'px'</span><span class="token punctuation">,</span> <span class="token property">top</span><span class="token punctuation">:</span> posY + <span class="token string">'px'</span> <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">_cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span> <span class="token attr-name">@mousedown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleMouseDown<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseleave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dragging = false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>w-basis-2/3<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~ items-center justify-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>w-basis-1/2<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~ items-center justify-center col<span class="token punctuation">"</span></span> <span class="token attr-name">_cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scaleSizeChange(<span class="token punctuation">'</span>+<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iconpark-icon</span> <span class="token attr-name">_m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b-8px<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vector<span class="token punctuation">"</span></span> <span class="token attr-name">_text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iconpark-icon</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>放大<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>w-basis-1/2<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~ items-center justify-center col<span class="token punctuation">"</span></span> <span class="token attr-name">_cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scaleSizeChange(<span class="token punctuation">'</span>-<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iconpark-icon</span> <span class="token attr-name">_m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b-8px<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vector-3<span class="token punctuation">"</span></span> <span class="token attr-name">_text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iconpark-icon</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>缩小<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Popover</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import WritingBoard from &#39;@&#x2F;components&#x2F;WritingBoard.vue&#39;import &#123; ref, watch, computed, onMounted, nextTick &#125; from &#39;vue&#39;&#x2F;&#x2F; 小窗口宽高const thumbnailWidth &#x3D; ref(200 as number)  const thumbnailHeight &#x3D; ref(130 as number)&#x2F;&#x2F; 是否可拖动、鼠标按下true、松开fasle、实现鼠标长按的效果const dragging &#x3D; ref(false as boolean)&#x2F;&#x2F; 画布位置 left&#x2F;top 定位const canvasLeft &#x3D; ref(0 as number)const canvasTop &#x3D; ref(0 as number)&#x2F;&#x2F; 小窗口内展示的可移动元素 left\top 定位const posX &#x3D; ref(0 as number)const posY &#x3D; ref(0 as number)&#x2F;&#x2F; 记录鼠标按下时 距离浏览器X、Y轴 的距离const dragStartX &#x3D; ref(0 as number)const dragStartY &#x3D; ref(0 as number)&#x2F;&#x2F; 画布笔迹、这里映射到小窗口内展示const thumbnail &#x3D; ref()&#x2F;&#x2F; 放大倍数const scaleSize &#x3D; ref(1 as number)const scaleSizeChange &#x3D; (type: &#39;+&#39; | &#39;-&#39;) &#x3D;&gt; &#123;  if (type &#x3D;&#x3D;&#x3D; &#39;+&#39;) scaleSize.value +&#x3D; 0.2  else &#123;     if (scaleSize.value &#x3D;&#x3D;&#x3D; 1) return    scaleSize.value -&#x3D; 0.2  &#125;  &#x2F;&#x2F; 居中展示  &#x2F;&#x2F; posX.value &#x3D; thumbnailWidth.value &#x2F; 2 - thumbnailWidth.value &#x2F; scaleSize.value &#x2F; 2  &#x2F;&#x2F; posY.value &#x3D; thumbnailHeight.value &#x2F; 2 - thumbnailHeight.value &#x2F; scaleSize.value &#x2F; 2  &#x2F;&#x2F; canvasLeft.value &#x3D; - (posX.value &#x2F; thumbnailWidth.value) * props.slideWidth * scaleSize.value  &#x2F;&#x2F;  canvasTop.value &#x3D; - (posY.value &#x2F; thumbnailHeight.value) * props.slideHeight * scaleSize.value  &#x2F;&#x2F; 靠左展示  posX.value &#x3D; 0  posY.value &#x3D; 0  canvasLeft.value &#x3D; 0  canvasTop.value &#x3D; 0&#125;&#x2F;&#x2F; 移动元素的宽高等比例缩放，鼠标样式const thumbnailStyle &#x3D; computed( () &#x3D;&gt; &#123;  return &#123;    width: thumbnailWidth.value &#x2F; scaleSize.value + &#39;px&#39;,    height: thumbnailHeight.value &#x2F; scaleSize.value + &#39;px&#39;,    cursor: dragging.value ? &#39;grabbing&#39; : &#39;grab&#39;  &#125; &#125;)&#x2F;&#x2F; 鼠标按下 const handleMouseDown &#x3D; (event: MouseEvent) &#x3D;&gt; &#123;  dragging.value &#x3D; true  dragStartX.value &#x3D; event.clientX  dragStartY.value &#x3D; event.clientY&#125;&#x2F;&#x2F; 鼠标移动const handleMouseMove &#x3D; (event: MouseEvent) &#x3D;&gt; &#123;  if (dragging.value) &#123;    &#x2F;&#x2F; 实时获取距离浏览器 X、Y轴 的距离 - 记录的距离 &#x3D; 移动的距离（对于浏览器窗口来说）    const deltaX &#x3D; event.clientX - dragStartX.value    const deltaY &#x3D; event.clientY - dragStartY.value    &#x2F;&#x2F; 小窗口内元素的 left、top 距离    posX.value +&#x3D; deltaX    posY.value +&#x3D; deltaY    &#x2F;&#x2F; 移动元素在左边、上边即将超出小窗口了、不让他移动、保持在小窗口内    if (posX.value &lt;&#x3D; 0) posX.value &#x3D; 0    if (posY.value &lt;&#x3D; 0) posY.value &#x3D; 0    &#x2F;*       移动元素在右边、下边即将超出小窗口了、不让他移动、保持在小窗口内      公式：thumbnailWidth.value(是小窗口的宽度) - thumbnailWidth.value &#x2F; scaleSize.value(移动元素的宽度) &#x3D; 移动元素在小窗口内可移动的距离      公式：高度同理    *&#x2F;    if (posX.value &gt;&#x3D; thumbnailWidth.value - thumbnailWidth.value &#x2F; scaleSize.value ) posX.value &#x3D; thumbnailWidth.value - thumbnailWidth.value &#x2F; scaleSize.value    if (posY.value &gt;&#x3D; thumbnailHeight.value - thumbnailHeight.value &#x2F; scaleSize.value ) posY.value &#x3D; thumbnailHeight.value - thumbnailHeight.value &#x2F; scaleSize.value        &#x2F;&#x2F; 最后再记录鼠标位置    dragStartX.value &#x3D; event.clientX    dragStartY.value &#x3D; event.clientY    &#x2F;*       画布的位置 &#x3D; 移动元素在小窗口内移动距离 &#x2F; 小窗口宽度 * 画布的宽度 * 放大倍数       posX.value &#x2F; thumbnailWidth.value 表示 移动元素 在 小窗口内 的百分比距离 ， 这个百分比 * 画布宽度 * 乘以放大倍数 ，就是画布的定位left距离      top距离同理    *&#x2F;     canvasLeft.value &#x3D; - (posX.value &#x2F; thumbnailWidth.value) * props.slideWidth * scaleSize.value    canvasTop.value &#x3D; - (posY.value &#x2F; thumbnailHeight.value) * props.slideHeight * scaleSize.value  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red" id="reason_two">解决原因2 导致画布移动错位、工具错位</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const centerStyle &#x3D; ref(&#123;&#125;) onMounted(() &#x3D;&gt; &#123;  nextTick(() &#x3D;&gt; &#123;    centerStyle.value &#x3D; &#123; &#x2F;&#x2F; 定位到水平垂直居中位置，因为黑板会因为浏览器宽度不够的时候上下会有黑边、类似电影的效果、所以需要居中      left: window?.innerWidth &#x2F; 2 - props.slideWidth * scaleSize.value &#x2F; 2 + &#39;px&#39;,      top: window?.innerHeight &#x2F; 2 - props.slideHeight * scaleSize.value &#x2F; 2 + &#39;px&#39;,    &#125;  &#125;)&#125;)const sildeStyle &#x3D; computed(() &#x3D;&gt; &#123;  return &#123; &#x2F;&#x2F; 等比例放大宽高    width: props.slideWidth * scaleSize.value + &#39;px&#39;,    height: props.slideHeight * scaleSize.value + &#39;px&#39;,  &#125;&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="#link">回到canvas画布最初封装的组件里面, 点击跳转</a></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;*细心的朋友已经发现，组件封装的时候已经有这个方法,这么做的目的就是定位的时候writingBoardRef.value.clientWidth会把left距离一起计算进去width：其实是2080px，left：1000pxwritingBoardRef.value.clientWidth很奇怪变成了 width + left &#x3D; 3080px所以需要在外面计算放大的宽高赋值，这样就完美解决*&#x2F;const updateCanvasSize &#x3D; () &#x3D;&gt; &#123;  if (!writingBoardRef.value) return  canvasWidth.value &#x3D; writingBoardRef.value.clientWidth &gt; props.customStyle?.width.split(&#39;px&#39;)[0] ? props.customStyle?.width.split(&#39;px&#39;)[0] : writingBoardRef.value.clientWidth  canvasHeight.value &#x3D; writingBoardRef.value.clientHeight &gt; props.customStyle?.height.split(&#39;px&#39;)[0] ? props.customStyle?.height.split(&#39;px&#39;)[0] : writingBoardRef.value.clientHeight&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聚焦放大镜</title>
      <link href="/hexo/2023/06/08/gong-neng-mo-kuai-ju-jiao-fang-da-jing/"/>
      <url>/hexo/2023/06/08/gong-neng-mo-kuai-ju-jiao-fang-da-jing/</url>
      
        <content type="html"><![CDATA[<p>实现一个窗口拖拽移动并且能自由拉伸宽高的元素区域，区域内的元素根据比例放大</p><a id="more"></a><h3 id="1-实现效果"><a href="#1-实现效果" class="headerlink" title="1.实现效果"></a>1.实现效果</h3><p><img src="http://linmingqi.top/img/%E8%81%9A%E7%84%A6%E6%94%BE%E5%A4%A7%E5%8A%A8%E7%94%BB.gif" alt="聚焦效果动画"></p><h3 id="2-弄清本质"><a href="#2-弄清本质" class="headerlink" title="2.弄清本质"></a>2.弄清本质</h3><blockquote><p>技术点</p></blockquote><p><font color="red">1.放大元素节点通过 querySelector 选择到节点 cloneNode克隆</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const baseView &#x3D; document.querySelector(&#96;#base-view&#96;) as HTMLDivElementconst screenSlide &#x3D; baseView.querySelector(&#39;.current&#39;) as HTMLDivElementconst nodeViewRef &#x3D; screenSlide.cloneNode(true) as HTMLDivElement<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color="red">2.useElementSize, useMouseInElement</font>  <a href="http://www.vueusejs.com/core/useElementSize/">详情查看vueuse官网</a><br>useElementSize：实时获取元素的宽高<br>useMouseInElement：实时获取鼠标是否在元素内</p><blockquote><p>关键点</p></blockquote><p><font color="red">1.拖拽移动公式</font></p><ul><li>放大节点元素定位在放大窗口，默认是left：0；top：0</li><li>放大窗口定位在浏览器窗口，默认是left：0；top：0</li><li>两者移动过程，一个是（放大窗口）向右下移动的过程（相对浏览器窗口）；一个是（放大节点）向左上移动的过程（相对放大窗口）</li></ul><p><font color="red">2.例如：放大窗口 left： 200px ， 放大节点 left： -200px</font><br><font color="red">3.以上代入移动公式：</font></p><ul><li>放大节点left: left = -（ 放大倍数 * 浏览器满屏幕宽度 ）+ 放大窗口宽度 / 2 / 放大倍数</li><li>放大节点top：同理</li></ul><p><font color="red">4.有时候你的放大区域并需要覆盖到整个浏览器窗口，只需要一小区域，这时候 浏览器各项的值 替换成 一小区域内的 值</font></p><h3 id="3-最基础的html实现代码-直接复制打开"><a href="#3-最基础的html实现代码-直接复制打开" class="headerlink" title="3.最基础的html实现代码(直接复制打开)"></a>3.最基础的html实现代码(直接复制打开)</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>DEMO | 图片放大器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">      <span class="token selector">body,      html</span> <span class="token punctuation">&#123;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>202<span class="token punctuation">,</span> 201<span class="token punctuation">,</span> 201<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 650px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 5px solid <span class="token function">rgb</span><span class="token punctuation">(</span>244<span class="token punctuation">,</span> 254<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">#lens</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid grey<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 0 10px 2px grey<span class="token punctuation">;</span>        <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">drop-shadow</span><span class="token punctuation">(</span>0 0 2px grey<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">#zoom img</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 650px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">#lens > *</span> <span class="token punctuation">&#123;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>        <span class="token selector">#zoom img,        .container</span> <span class="token punctuation">&#123;</span>          <span class="token property">width</span><span class="token punctuation">:</span> 520px<span class="token punctuation">;</span>          <span class="token property">height</span><span class="token punctuation">:</span> 330px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.page-footer</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>        <span class="token property">bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.page-footer a</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.touxiang</span> <span class="token punctuation">&#123;</span>        <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://dev2.midiplusedu.com/storage/public:MjAyMy8wNS8xNi9yY04xWWRqRU9zb1c5c1kyZmV4TDg1Rk82NkFsdkZ3cjF5RExqbUJXejRRM2FmQTdZbzhMMFdrdXZjV0s0bHFvLnBuZw==<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">const</span> lensSize <span class="token operator">=</span> <span class="token punctuation">&#123;</span> w<span class="token operator">:</span><span class="token number">290</span><span class="token punctuation">,</span> h<span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">magnify</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> zoom</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> copy <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> lens <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>lens<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"lens"</span><span class="token punctuation">)</span>lens<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> lensSize<span class="token punctuation">.</span>w <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>lens<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> lensSize<span class="token punctuation">.</span>h <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>lens<span class="token punctuation">)</span><span class="token punctuation">;</span>el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zoom <span class="token operator">=</span> zoom<span class="token punctuation">;</span>lens<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>copy<span class="token punctuation">)</span><span class="token punctuation">;</span>copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>offsetWidth <span class="token operator">*</span> copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>heigth <span class="token operator">=</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>offsetHeight <span class="token operator">*</span> copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">"absolute"</span><span class="token punctuation">;</span>el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousedown"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ev<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>              <span class="token keyword">const</span> pos <span class="token operator">=</span> <span class="token function">getCursorPos</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>pageX<span class="token punctuation">,</span> ev<span class="token punctuation">.</span>pageY<span class="token punctuation">,</span> el<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">,</span> el<span class="token punctuation">.</span>offsetTop<span class="token punctuation">)</span>              lens<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>lensSize<span class="token punctuation">.</span>w <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> pos<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>              lens<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>lensSize<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> pos<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>              copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>x <span class="token operator">-</span> el<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>lensSize<span class="token punctuation">.</span>w <span class="token operator">/</span> copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>              copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>y <span class="token operator">-</span> el<span class="token punctuation">.</span>offsetTop<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>lensSize<span class="token punctuation">.</span>h <span class="token operator">/</span> copy<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zoom<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseup'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          document<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">null</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">getCursorPos</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// console.log(event,  window.event,'------')</span><span class="token comment">// var x = (window.Event) ? e.pageX : event.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft :</span><span class="token comment">// document.body.scrollLeft);</span><span class="token comment">// var y = (window.Event) ? e.pageY : event.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop :</span><span class="token comment">// document.body.scrollTop);</span><span class="token keyword">return</span> <span class="token punctuation">&#123;</span>x<span class="token operator">:</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">,</span>y<span class="token operator">:</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">magnify</span><span class="token punctuation">(</span><span class="token string">"zoom"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>      </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-Vue3具体实现代码"><a href="#4-Vue3具体实现代码" class="headerlink" title="4.Vue3具体实现代码"></a>4.Vue3具体实现代码</h3><p><font color="#08c">vue3 + ts + windicss + vueuse 实现组件封装</font></p><h4 id="template"><a href="#template" class="headerlink" title="template"></a>template</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 浏览器窗口盖一层蒙版层，层级最高 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-draw<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">drawStyle</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 放大移动区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-lens<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lenRef<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">lenStyle</span><span class="token punctuation">"</span></span> <span class="token attr-name">@mousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleMouseMove<span class="token punctuation">"</span></span> <span class="token attr-name">@mousedown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dragging = true<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dragging = false, noMove = false, zoneSticks = false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- 需要放大的元素，需要获取节点v-html回显 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">_pos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>absolute<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>w-pointer-events-none<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">zommStyle</span><span class="token punctuation">"</span></span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodeRef?.outerHTML<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 操作按钮区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">_pos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>absolute<span class="token punctuation">"</span></span> <span class="token attr-name">_display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">areaStyle</span><span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items-center justify-center<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-area<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>~<span class="token punctuation">"</span></span> <span class="token attr-name">_border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rounded-l-lg rounded-r-lg<span class="token punctuation">"</span></span> <span class="token attr-name">_cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area-button<span class="token punctuation">"</span></span> <span class="token attr-name">_w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">_cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span> <span class="token attr-name">_bg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span> <span class="token attr-name">_border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none rounded-l-lg<span class="token punctuation">"</span></span>  <span class="token attr-name">_h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40px<span class="token punctuation">"</span></span>  <span class="token attr-name">_display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items-center justify-center<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoomInMove(<span class="token punctuation">'</span>+<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iconpark-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vector<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iconpark-icon</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area-button<span class="token punctuation">"</span></span> <span class="token attr-name">_w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">_cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span> <span class="token attr-name">_bg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span> <span class="token attr-name">_border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">_h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40px<span class="token punctuation">"</span></span> <span class="token attr-name">_display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items-center justify-center<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoomInMove(<span class="token punctuation">'</span>-<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iconpark-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vector-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iconpark-icon</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area-button<span class="token punctuation">"</span></span> <span class="token attr-name">_w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">_cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span> <span class="token attr-name">_bg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span> <span class="token attr-name">_border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">_h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40px<span class="token punctuation">"</span></span> <span class="token attr-name">_display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items-center justify-center<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoomMask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iconpark-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Opportunity-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iconpark-icon</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area-button<span class="token punctuation">"</span></span> <span class="token attr-name">_w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">_cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span> <span class="token attr-name">_bg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span> <span class="token attr-name">_border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none rounded-r-lg<span class="token punctuation">"</span></span> <span class="token attr-name">_h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40px<span class="token punctuation">"</span></span> <span class="token attr-name">_display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex<span class="token punctuation">"</span></span> <span class="token attr-name">_flex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items-center justify-center<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emit(<span class="token punctuation">'</span>close<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iconpark-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle-close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iconpark-icon</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 拉伸操作区域的角落方形区域，类似截图工具 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">_z</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">_pos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>absolute<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(stick, index) in sticks<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">&#123;</span> ...zoneStyle[stick]<span class="token punctuation">,</span> <span class="token property">width</span><span class="token punctuation">:</span> zoneSize + <span class="token string">'px'</span><span class="token punctuation">,</span> <span class="token property">height</span><span class="token punctuation">:</span> zoneSize + <span class="token string">'px'</span> <span class="token punctuation">&#125;</span></span><span class="token punctuation">"</span></span>       <span class="token attr-name">@mouseup.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoneSticks = false<span class="token punctuation">"</span></span>       <span class="token attr-name">@mousedown.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoneSticks = true<span class="token punctuation">"</span></span>       <span class="token attr-name">@mousemove.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleZoneMove($event, stick)<span class="token punctuation">"</span></span>      <span class="token attr-name">@mouseleave.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoneSticks = false<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="srcript"><a href="#srcript" class="headerlink" title="srcript"></a>srcript</h4><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import &#123; ref, computed, onMounted, watch, nextTick &#125; from &#39;vue&#39;import &#123; useElementSize, useMouseInElement &#125; from &#39;@vueuse&#x2F;core&#39;const emit &#x3D; defineEmits&lt;&#123;  (event: &#39;close&#39;): void&#125;&gt;()const props &#x3D; defineProps(&#123;  node: &#123;    &#x2F;*    **需要放大的克隆节点,利用cloneNode克隆元素    **nextTick(() &#x3D;&gt; &#123;        const baseView &#x3D; document.querySelector(&#96;#base-view&#96;) as HTMLDivElement        const screenSlide &#x3D; baseView.querySelector(&#39;.current&#39;) as HTMLDivElement        nodeViewRef.value &#x3D; screenSlide.cloneNode(true) as HTMLDivElement      &#125;)    *&#x2F;    required: true,  &#125;,  scale: &#123;    required: true,    type: Number  &#125;&#125;)const nodeRef &#x3D; ref() &#x2F;&#x2F;放大节点const lenRef &#x3D; ref() &#x2F;&#x2F;放大窗口节点const element &#x3D; useElementSize(lenRef) &#x2F;&#x2F;获取放大窗口的实时宽高const isOutside &#x3D; useMouseInElement(lenRef) &#x2F;&#x2F;获取鼠标是否在放大窗口的区域内const width &#x3D; ref&lt;number&gt;(450) &#x2F;&#x2F;放大区域原始宽度const height &#x3D; ref&lt;number&gt;(300) &#x2F;&#x2F;放大区域原始高度const left &#x3D; ref&lt;number&gt;(0) &#x2F;&#x2F;放大区域原始leftconst top &#x3D; ref&lt;number&gt;(0) &#x2F;&#x2F;放大区域原始topconst zoomWidth &#x3D; ref&lt;number&gt;(450) &#x2F;&#x2F;放大节点宽度const zoomHeight &#x3D; ref&lt;number&gt;(300) &#x2F;&#x2F;放大节点高度const zoomLeft &#x3D; ref&lt;number&gt;(0) &#x2F;&#x2F;放大节点定位const zoomTop &#x3D; ref&lt;number&gt;(0) &#x2F;&#x2F;放大节点定位const zoomSize &#x3D; ref&lt;number&gt;(1) &#x2F;&#x2F;放大倍数const max &#x3D; 2.5 &#x2F;&#x2F;最大放大倍数const min &#x3D; 1 &#x2F;&#x2F;最小倍数&#x2F;&#x2F; const sticks &#x3D; [&#39;tl&#39;, &#39;tm&#39;, &#39;tr&#39;, &#39;mr&#39;, &#39;br&#39;, &#39;bm&#39;, &#39;bl&#39;, &#39;ml&#39;] &#x2F;* **拉伸区域，表示 b底 r右 l左 t顶 m中, 这里只展示左边中间、底下中间跟右下角**右中：拉伸宽度、定位不变**底中：拉伸高度、定位不变**右下角：同事拉伸宽高度、定位不变**左中：拉伸宽度、目前定位（需要记录元素最右边的边边到窗口的距离）减去扩大的宽度*&#x2F; const sticks &#x3D; [&#39;br&#39;, &#39;mr&#39;, &#39;bm&#39;]const zoneSize &#x3D; 35 &#x2F;&#x2F; 拉伸区域宽高，最好大点，不然鼠标移动过快压根移不动const zoneSticks &#x3D; ref&lt;boolean&gt;(false) &#x2F;&#x2F;表示拉伸区域已被长按触发&#x2F;&#x2F; 放大窗口是否能拖拽移动const dragging &#x3D; ref(false as boolean)&#x2F;&#x2F; 鼠标的位置const movePostion &#x3D; ref(&#123;  x: 0,  y: 0&#125;)watch(() &#x3D;&gt; props.node, () &#x3D;&gt; &#123;  &#x2F;&#x2F; 获取节点赋值  nodeRef.value &#x3D; props.node&#125;)&#x2F;&#x2F; 表示已经进入放大窗口元素内，可以拖拽移动了，顺便把鼠标样式改成手掌，计算属性lenStyle已经实现watch(() &#x3D;&gt; isOutside, (value) &#x3D;&gt; &#123;  dragging.value &#x3D; value ? true : false&#125;)const maskBackground &#x3D; ref&lt;string&gt;(&#39;rgba(0,0,0,0)&#39;) &#x2F;&#x2F;背景模糊变暗&#x2F;&#x2F; 开关灯样式控制const drawStyle &#x3D; computed(() &#x3D;&gt; &#123;  return &#123;    background: &#96;$&#123;maskBackground.value&#125;&#96;  &#125;&#125;)&#x2F;* **可拉伸的区域元素在放大窗口各个角落**占据角落1&#x2F;2的位置，与放大窗口边框重叠，层级肯定在上面，类似截图工具之类的边边方形*&#x2F;const zoneStyle &#x3D; computed(() &#x3D;&gt; &#123;  return &#123;    tl: &#123;      left: left.value - zoneSize &#x2F; 2 + &#39;px&#39;,      top: top.value - zoneSize &#x2F; 2 + &#39;px&#39;,      cursor: &#39;nw-resize&#39;    &#125;,     tm: &#123;      left: left.value + width.value &#x2F; 2 + &#39;px&#39;,      top: top.value - zoneSize &#x2F; 2 + &#39;px&#39;,      cursor: &#39;n-resize&#39;    &#125;,     tr: &#123;      left: left.value + width.value - zoneSize &#x2F; 2 + &#39;px&#39;,      top: top.value - zoneSize &#x2F; 2 + &#39;px&#39;,      cursor: &#39;ne-resize&#39;    &#125;,     mr: &#123;      left: left.value + width.value - zoneSize &#x2F; 2 + &#39;px&#39;,      top: top.value + height.value - zoneSize &#x2F; 2 + &#39;px&#39;,      cursor: &#39;nw-resize&#39;,    &#125;,     br: &#123;      left: left.value + width.value - zoneSize &#x2F; 2 + &#39;px&#39;,      top: top.value + height.value &#x2F; 2 - zoneSize &#x2F; 2 + &#39;px&#39;,      cursor: &#39;e-resize&#39;    &#125;,     bm: &#123;      left: left.value + width.value &#x2F; 2 - zoneSize &#x2F; 2 + &#39;px&#39;,      top: top.value + height.value - zoneSize &#x2F; 2 + &#39;px&#39;,      cursor: &#39;n-resize&#39;    &#125;,     bl: &#123;      left: left.value - zoneSize &#x2F; 2 + &#39;px&#39;,      top: top.value + height.value &#x2F; 2 - zoneSize &#x2F; 2 + &#39;px&#39;,      cursor: &#39;e-resize&#39;    &#125;,     ml: &#123;      left: left.value - zoneSize &#x2F; 2 + &#39;px&#39;,      top: top.value + height.value - zoneSize &#x2F; 2 + &#39;px&#39;,      cursor: &#39;ne-resize&#39;    &#125;  &#125;&#125;)&#x2F;***放大窗口样式*&#x2F;const lenStyle &#x3D; computed(() &#x3D;&gt; &#123;  return &#123;    width: &#96;$&#123;width.value&#125;px&#96;,    height: &#96;$&#123;height.value&#125;px&#96;,    left: &#96;$&#123;left.value&#125;px&#96;,    top: &#96;$&#123;top.value&#125;px&#96;,    cursor: dragging.value ? &#39;grabbing&#39; : &#39;grab&#39;, &#x2F;&#x2F; 在元素内：长按拖拽的时候鼠标样式是拳头、松开是手掌    resize: noMove.value ? &#39;auto&#39; : &#39;none&#39;, &#x2F;&#x2F; resize是个强大的css属性，实现拉伸，但是直接使用会跟拖拽事件重叠，所以只能抛弃，这里忽略    &#x2F;&#x2F; border: noMove.value ? &#39;2px dashed #ff5e2a&#39; : &#39;none&#39;,    border: &#39;2px dashed #ff5e2a&#39;  &#125;&#125;)&#x2F;***操作按钮样式*&#x2F;const areaStyle &#x3D; computed(() &#x3D;&gt; &#123;  return &#123;    width: &#96;$&#123;width.value&#125;px&#96;,    left: &#96;$&#123;left.value&#125;px&#96;,    top: &#96;$&#123;top.value + height.value&#125;px&#96; &#x2F;&#x2F;因为操作按钮是一直跟着放大窗口底下的，所以要 + 放大窗口的高度    &#x2F;&#x2F; top: &#96;$&#123;top.value + height.value + zoneSize &#x2F; 2 + 5&#125;px&#96;  &#125;&#125;)&#x2F;***放大的节点样式*&#x2F;const zommStyle &#x3D; computed(() &#x3D;&gt; &#123;  return &#123;    width: &#96;$&#123;zoomWidth.value&#125;px&#96;,    height: &#96;$&#123;zoomHeight.value&#125;px&#96;,    left: &#96;$&#123;zoomLeft.value&#125;px&#96;,    top: &#96;$&#123;zoomTop.value&#125;px&#96;,    zoom: &#96;$&#123;zoomSize.value&#125;&#96;,    &#x2F;&#x2F; 这里很炒蛋，因为我外层的元素已经被transform：scale放大过了，克隆到的元素是1：1的，我们也需要手动给他放大    transform: &#96;scale($&#123; zoomSize.value &#x3D;&#x3D;&#x3D; 1 ? 1 : props.scale&#125;)&#96;,  &#125;&#125;)const getCursorPos &#x3D; (e: MouseEvent) &#x3D;&gt; &#123;  &#x2F;&#x2F; 获取鼠标在视图的位置~记录最后一次  movePostion.value.x &#x3D; e.pageX  movePostion.value.y &#x3D; e.pageY  return &#123;    x: e.pageX,    y: e.pageY  &#125;&#125;&#x2F;&#x2F; 拉伸放大窗口，放大窗口实时变化宽度高度const handleZoneMove &#x3D; (ev: MouseEvent, type: string) &#x3D;&gt; &#123;  if (!zoneSticks.value) return  switch (type) &#123;    &#x2F;&#x2F; 左上角    case &#39;tl&#39;:            break    &#x2F;&#x2F;   中上角    case &#39;tm&#39;:      break    &#x2F;&#x2F; 右上角    case &#39;tr&#39;:             break    &#x2F;&#x2F; 中间右边    case &#39;mr&#39;:      width.value &#x3D; ev.pageX - left.value       height.value &#x3D; ev.pageY - top.value      break    &#x2F;&#x2F; 右下角    case &#39;br&#39;:       width.value &#x3D; ev.pageX - left.value       break    &#x2F;&#x2F; 中下角    case &#39;bm&#39;:      height.value &#x3D; ev.pageY - top.value      break    &#x2F;&#x2F; 左下角    case &#39;bl&#39;:       width.value +&#x3D; ev.pageX - left.value      left.value &#x3D; ev.pageX      break    &#x2F;&#x2F;   中间左边    case &#39;ml&#39;:          break    default:  &#125;&#125;&#x2F;&#x2F; 控制放大、缩小const zoomInMove &#x3D; (type: string) &#x3D;&gt; &#123;  if (type &#x3D;&#x3D;&#x3D; &#39;+&#39;) &#123;    if (zoomSize.value &gt;&#x3D; max) return    zoomSize.value &#x3D; zoomSize.value &#x3D;&#x3D;&#x3D; 1 ? 1.6 : zoomSize.value + 0.3  &#125;   else &#123;    if (zoomSize.value &lt;&#x3D; min) return    zoomSize.value -&#x3D; 0.3  &#125;    zoomSizeUpdate(movePostion.value)&#125;&#x2F;&#x2F; 是否开关灯、除放大区域外背景模糊变暗const zoomMask &#x3D; () &#x3D;&gt; &#123;  if (maskBackground.value &#x3D;&#x3D;&#x3D; &#39;rgba(0, 0, 0, 0.9)&#39;) maskBackground.value &#x3D; &#39;rgba(0, 0, 0, 0)&#39;  else maskBackground.value &#x3D; &#39;rgba(0, 0, 0, 0.9)&#39;&#125;&#x2F;&#x2F; 鼠标移动const handleMouseMove &#x3D; (ev: MouseEvent) &#x3D;&gt; &#123;  if (noMove.value) return  if (!dragging.value) return  const pos &#x3D; getCursorPos(ev)  &#x2F;*  **保持移动鼠标时永远在移动区域内最中心处  *&#x2F;  left.value &#x3D; -(width.value &#x2F; 2) + pos.x  top.value &#x3D; -(height.value &#x2F; 2) + pos.y  &#x2F;&#x2F; left.value &#x3D; pos.x  &#x2F;&#x2F; top.value &#x3D; pos.y  zoomSizeUpdate(pos)&#125;&#x2F;&#x2F; 更新放大位置，放大窗口做拖拽移动操作、拉伸宽高操作const zoomSizeUpdate &#x3D; (pos: &#123; x: number, y: number &#125;) &#x3D;&gt; &#123;  &#x2F;&#x2F;元素是占满整个屏幕的，所以这里直接获取宽高*放大倍数，实现之后的宽高  zoomWidth.value &#x3D; document.body.clientWidth * zoomSize.value  zoomHeight.value &#x3D; document.body.clientHeight * zoomSize.value  switch (zoomSize.value) &#123;    &#x2F;&#x2F; case 1:    &#x2F;&#x2F;   zoomLeft.value &#x3D; -(pos.x) + (width.value &#x2F; 2 &#x2F; zoomSize.value) - document.body.clientWidth    &#x2F;&#x2F;   zoomTop.value &#x3D; -(pos.y) + (height.value &#x2F; 2 &#x2F; zoomSize.value) - document.body.clientHeight    &#x2F;&#x2F;   break    &#x2F;&#x2F; case 1.5:    &#x2F;&#x2F;   zoomLeft.value &#x3D; -(pos.x) + (width.value &#x2F; 2 &#x2F; zoomSize.value) - document.body.clientWidth &#x2F; 3.7    &#x2F;&#x2F;   zoomTop.value &#x3D; -(pos.y) + (height.value &#x2F; 2 &#x2F; zoomSize.value) - (document.body.clientHeight - height.value * 2.5)    &#x2F;&#x2F;   break    &#x2F;&#x2F; case 2:    &#x2F;&#x2F;   zoomLeft.value &#x3D; -(pos.x) + (width.value &#x2F; 2 &#x2F; zoomSize.value) - document.body.clientWidth &#x2F; 2    &#x2F;&#x2F;   zoomTop.value &#x3D; -(pos.y) + (height.value &#x2F; 2 &#x2F; zoomSize.value) - (document.body.clientHeight - height.value * 2)    &#x2F;&#x2F;   break    &#x2F;&#x2F; case 2.5:    &#x2F;&#x2F;   zoomLeft.value &#x3D; -(pos.x) + (width.value &#x2F; 2 &#x2F; zoomSize.value) - document.body.clientWidth &#x2F; 1.3    &#x2F;&#x2F;   zoomTop.value &#x3D; -(pos.y) + (height.value &#x2F; 2 &#x2F; zoomSize.value) - (document.body.clientHeight - height.value * 1.2)    &#x2F;&#x2F;   break    &#x2F;&#x2F; case 3:    &#x2F;&#x2F;   zoomLeft.value &#x3D; -(pos.x) + (width.value &#x2F; 2 &#x2F; zoomSize.value) - document.body.clientWidth    &#x2F;&#x2F;   zoomTop.value &#x3D; -(pos.y) + (height.value &#x2F; 2 &#x2F; zoomSize.value) - (document.body.clientHeight - height.value * 0.2)    &#x2F;&#x2F;   break    default:      &#x2F;*      **放大节点，在放大窗口默认是left：0，top：0位置，所以放大窗口往右拖拽的时候，放大节点对于放大窗口是做left：-的运动      **例如：放大窗口相对窗口 向右移动200px， 放大节点相对放大窗口 向左移动200px，是做相反的运动      **注意：这里还需要加上放大窗口本身 1&#x2F;2 的宽度 才能对准位置，为什么是 1&#x2F;2?      *&#x2F;      zoomLeft.value &#x3D; -(zoomSize.value * pos.x) + (width.value &#x2F; 2 &#x2F; zoomSize.value)      zoomTop.value &#x3D; -(zoomSize.value * pos.y) + (height.value &#x2F; 2 &#x2F; zoomSize.value)  &#125;&#125;onMounted(() &#x3D;&gt; &#123;  &#x2F;&#x2F; 页面刷新需要调整位置  nextTick(() &#x3D;&gt; &#123;    zoomSizeUpdate(&#123; x: width.value &#x2F; 2, y: height.value &#x2F; 2 &#125;)  &#125;)&#125;)    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="style"><a href="#style" class="headerlink" title="style"></a>style</h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 视图窗口蒙版层 */</span><span class="token selector">.zoom-draw</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 放大区域 */</span><span class="token selector">.zoom-lens</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 450px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>  <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">drop-shadow</span><span class="token punctuation">(</span>grey 0 0 2px<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> grey 0 0 10px 2px inset<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token comment">/*超出放大窗口之外隐藏*/</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 9<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 214px<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 282px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 按钮区域 */</span><span class="token selector">.zoom-area</span> <span class="token punctuation">&#123;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 2px 12px 0 <span class="token function">rgb</span><span class="token punctuation">(</span>56 56 56 / 20%<span class="token punctuation">)</span><span class="token selector">;  .area-button:focus</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #ff5e2a<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ebebeb<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-利用vue-drag-resize插件实现"><a href="#5-利用vue-drag-resize插件实现" class="headerlink" title="5.利用vue-drag-resize插件实现"></a>5.利用vue-drag-resize插件实现</h3><p>vue-drag-resize插件已经实现自由拉伸、拖拽移动了，直接套用省去很多麻烦</p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS常问</title>
      <link href="/hexo/2023/06/07/gao-xin-html5-xin-zeng-yuan-su/"/>
      <url>/hexo/2023/06/07/gao-xin-html5-xin-zeng-yuan-su/</url>
      
        <content type="html"><![CDATA[<p>经常有的一些 CSS 效果实现，包括问的呀，写的呀，问来问去都是这些基本</p><a id="more"></a><h2 id="HTML5-新增的语义标签"><a href="#HTML5-新增的语义标签" class="headerlink" title="HTML5 新增的语义标签"></a>HTML5 新增的语义标签</h2><table><thead><tr><th align="center">新增标签</th><th align="left">标签语义</th></tr></thead><tbody><tr><td align="center">header</td><td align="left">定义一个页面的页眉</td></tr><tr><td align="center">nav</td><td align="left">定义导航栏链接的部分</td></tr><tr><td align="center">aside</td><td align="left">定义页面主区域内容之外的内容，比如侧边栏</td></tr><tr><td align="center">section</td><td align="left">定义文档中的节（section、区段），section 内应包含一组内容(&lt;span&gt;、&lt;p&gt;等)及其标题(&lt;h1&gt;-&lt;h6&gt;)</td></tr><tr><td align="center">article</td><td align="left">定义独立的文章内容，&lt;article&gt;内应包含一组内容(&lt;span&gt;、&lt;p&gt;等)及其标题(&lt;h1&gt;-&lt;h6&gt;)</td></tr><tr><td align="center">figure</td><td align="left">定义独立的流内容（图像、图表、照片、代码等等），元素的内容应该与主内容相关，但如果被删除，则不应对文档流产生影响</td></tr><tr><td align="center">figcaption</td><td align="left">定义 &lt;figure&gt; 元素的标题，&lt;figcaption&gt;应该被置于 &lt;figure&gt; 元素的第一个或最后一个子元素的位置。</td></tr><tr><td align="center">footer</td><td align="left">定义一个页面的页脚</td></tr></tbody></table><h2 id="H5-C3-面试题"><a href="#H5-C3-面试题" class="headerlink" title="H5/C3 面试题"></a>H5/C3 面试题</h2><p><font size="4" color="#4DD7EB"> 如何关闭 IOS 键盘首字母自动大写</font></p><ul><li>&lt; input type = “text” <font color="red"> autocapitalize = “off”</font>/ &gt;</li><li>The autocapitalize 全局属性 是一个枚举属性，它控制用户输入/编辑文本输入时文本输入是否自动大写，以及如何自动大写。属性必须取下列值之一：<ul><li>off or none: 没有应用自动大写（所有字母都默认为小写字母）。</li><li>on or sentences: 每个句子的第一个字母默认为大写字母；所有其他字母都默认为小写字母。</li><li>words: 每个单词的第一个字母默认为大写字母；所有其他字母都默认为小写字母。</li><li>characters: 所有的字母都默认为大写。</li></ul></li></ul><p><font size="4" color="#4DD7EB"> 怎么让 Chrome 支持小于 12px 的文字？</font></p><ul><li>浏览器最小就是 12px 字体，只能通过<font color="#4DD7EB"> webkit-transform:scale(0.8)</font> 来控制</li><li>会影响元素导致布局错乱</li></ul><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高薪之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue2、vue3</title>
      <link href="/hexo/2023/06/07/gao-xin-vue2-he-vue3/"/>
      <url>/hexo/2023/06/07/gao-xin-vue2-he-vue3/</url>
      
        <content type="html"><![CDATA[<p>Vue2的知识点，Vue3的特性，两者之间的差别</p><a id="more"></a><p><font size="6" color="black"> Vue面试题</font></p><p><font size="5" color="#4DD7EB"> ref与reactive的区别</font></p><ul><li>ref用来定义: 基本类型数据。</li><li>ref通过 Object.defineProperty() 的 get 与 set 来实现响应式（数据劫持）。</li><li>ref定义的数据：操作数据需要.value，读取数据时模板中直接读取不需要.value。</li><li>reactive用来定义: 对象或数组类型数据。</li><li>reactive通过使用: Proxy 来实现响应式（数据劫持）, 并通过 Reflect 操作源代码内部的数据。</li><li>reactive定义的数据：操作数据与读取数据：均不需要 .value。</li></ul><p>ref可以定义对象或数组的，它只是内部自动调用了 reactive 来转换。</p><p>proxy只能监听引用对象，比如数组，对象。基本数据类型无法监听 ; 所以要监听基本数据类型，就得使用ref，ref实际就是把你<br>的基本数据类型放在一个对象里，然后再.value</p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高薪之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔试题</title>
      <link href="/hexo/2023/06/07/gao-xin-bi-shi-ti/"/>
      <url>/hexo/2023/06/07/gao-xin-bi-shi-ti/</url>
      
        <content type="html"><![CDATA[<p>一些很恶心的笔试题,高薪的栏门怪！</p><a id="more"></a><p><font size="4" color="#007ACC"> 宏任务、微任务</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 打印顺序1,2,4,3</span><span class="token comment">// js执行顺序: 同步任务，异步任务~微任务proimse，异步任务~宏任务setTimeout</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font size="4" color="#007ACC"> js 数据类型： </font>string、number、undefined、null、boolean、arr、object <font size="4" color="#007ACC"> js 强制类型转换 number</font></p><ul><li>parseInt(value)——把把二进制、八进制、十六进制或其他任何进制的字符串转换成整数，不是返回 NaN；</li><li>parseFloat(value)——字符串必须以十进制形式表示浮点数，不是返回 NaN</li><li>Boolean(value)——把给定的值转换成 Boolean 型；</li><li>Number(value)——把给定的值转换成数字（可以是整数或浮点数）；</li><li>String(value)——把给定的值转换成字符串</li></ul><p><font size="4" color="#007ACC"> js 节点知识点</font></p><ul><li>.createElement()创建元素节点、 .createTextNode(‘文本’)创建一个文本节点、 .appendChild(a)将 a 节点添加进指定节点</li><li>.parentNode 获取父节点的引用</li><li>.insertBefore(newNode, OldChildElement); 在已有的子节点前插入新的节点</li><li>.removeChild()删除一个指定节点、 .remove()删除全部</li><li>.childNodes 获取所有子节点</li><li>.firstElementChild 和 .firstChild 获取第一个子节点</li><li>.lastElementChild 和 .lastChild 获取最后一个子节点</li></ul><p><font size="4" color="#007ACC">执行打印</font> </p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>  a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//执行顺序：undefined、1</span><span class="token comment">//理由：a=2改的是fn1函数里面的argument参数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font size="4" color="#007ACC"> 字母转大小写:</font> 大写.toUpperCase(); 小写.toLowerCase();<br><font size="4" color="#007ACC"> 返回指定位置字符串:</font> charAt()<br><font size="4" color="#007ACC"> 创建一个子节点</font> createElement<br><font size="4" color="#007ACC"> 创建一个子节点</font> createElement<br><font size="4" color="#007ACC"> 创建一个子节点</font> createElement<br><font size="4" color="#007ACC"> 创建一个子节点</font> createElement</p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高薪之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>问答题</title>
      <link href="/hexo/2023/06/07/gao-xin-wen-da-ti/"/>
      <url>/hexo/2023/06/07/gao-xin-wen-da-ti/</url>
      
        <content type="html"><![CDATA[<p>最接近的一次机会,要好好把握住呀</p><a id="more"></a><h4 id="1-Http的请求方式有哪些"><a href="#1-Http的请求方式有哪些" class="headerlink" title="1.Http的请求方式有哪些?"></a>1.Http的请求方式有哪些?</h4><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>get</td><td>查</td></tr><tr><td>head</td><td>get相同，返回http报头，不反悔具体内容</td></tr><tr><td>post</td><td>增</td></tr><tr><td>put</td><td>主要用来传输文件（改）</td></tr><tr><td>delete</td><td>删</td></tr><tr><td>options</td><td>请求的指定资源都支持什么http方法</td></tr></tbody></table><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token number">1.</span><span class="token constant">GET</span>在浏览器回退时是无害的，而<span class="token constant">POST</span>会再次提交请求。<span class="token number">2.</span><span class="token constant">GET</span>比<span class="token constant">POST</span>更不安全，因为参数直接暴露在<span class="token constant">URL</span>上（<span class="token constant">POST</span>放在Request body中），所以不能用来传递敏感信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="2-Http请求中Content-Type和cache-control的作用是"><a href="#2-Http请求中Content-Type和cache-control的作用是" class="headerlink" title="2.Http请求中Content-Type和cache-control的作用是?"></a>2.Http请求中Content-Type和cache-control的作用是?</h4><p>Cache-Control 可缓存性 no-cache可以在本地进行缓存，每次请求都要向服务器验证，服务器允许，才能本地缓存</p><p>​    第一部分General是概要，包含请求地址，请求方式，<a href="https://so.csdn.net/so/search?q=%E7%8A%B6%E6%80%81%E7%A0%81&spm=1001.2101.3001.7020">状态码</a>，服务器地址以及Referrer 策略。<br>​    第二部分是应答头部，是服务器返回的。<br>​    第三部分是请求头部，是客户端发送的。</p><p>Content-Type，内容类型，一般是指网页中存在的Content-Type，用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token number">1.</span>application<span class="token operator">/</span>x<span class="token operator">-</span>www<span class="token operator">-</span>form<span class="token operator">-</span>urlencoded 浏览器原生表单<span class="token number">2.</span>multipart<span class="token operator">/</span>form<span class="token operator">-</span>data 常见post数据提交<span class="token number">3.</span>application<span class="token operator">/</span>json 默认的<span class="token number">4.</span>text<span class="token operator">/</span>xml<span class="token number">5.</span>multipart<span class="token operator">/</span>form<span class="token operator">-</span>data 表单提交<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-WEB应用从服务器主动推送Data到客户端有那些方式-哪些是你用过的"><a href="#3-WEB应用从服务器主动推送Data到客户端有那些方式-哪些是你用过的" class="headerlink" title="3.WEB应用从服务器主动推送Data到客户端有那些方式?哪些是你用过的?"></a>3.WEB应用从服务器主动推送Data到客户端有那些方式?哪些是你用过的?</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js">ajax和WebSocket 握手链接没用过<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="4-请简单说明UTF-7-UTF-8-UNICODE-BASE64-GB2312的作用和区别"><a href="#4-请简单说明UTF-7-UTF-8-UNICODE-BASE64-GB2312的作用和区别" class="headerlink" title="4.请简单说明UTF-7,UTF-8,UNICODE,BASE64,GB2312的作用和区别?"></a>4.请简单说明UTF-7,UTF-8,UNICODE,BASE64,GB2312的作用和区别?</h4><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>GB2312</td><td>GBK编码，是在GB2312-80标准基础上的内码扩展规范</td></tr><tr><td>base64编码</td><td>最原始二进制数据流</td></tr><tr><td>UTF-8编码</td><td>针对不同语言的字符集</td></tr><tr><td>UTF-7编码</td><td>修改的Base64</td></tr><tr><td>Unicode</td><td>将“码位”转换为字节序列的规则，也就是UTF-8编码</td></tr></tbody></table><pre class="line-numbers language-none"><code class="language-none">utf-8--------decode(解码)-----&gt;&gt;Unicode类型&lt;&lt;-------decode(解码)-----gbkutf-8&lt;&lt;--------encode(编码)-----&gt;&gt;Unicode类型&lt;&lt;-------encode(编码)-----&gt;&gt;gbkutf-8 -&gt; base64(编码) -&gt; ASCIIASCII -&gt; base64(解码) -&gt; utf-8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-请写出你熟悉的排序算法"><a href="#5-请写出你熟悉的排序算法" class="headerlink" title="5.请写出你熟悉的排序算法?"></a>5.请写出你熟悉的排序算法?</h4><p>排序大小</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">points<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//从小到大，反过来就是b-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>数组反转</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>冒泡排序：就是0，1对比；1，2对比；2，3对比，（下标跟下标+1对比）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 编写方法，实现冒泡</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//外层循环，控制趟数，每一次找到一个最大值</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 内层循环,控制比较的次数，并且判断两个数的大小</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 白话解释：如果前面的数大，放到后面(当然是从小到大的冒泡排序)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[2, 4, 5, 12, 31, 32, 45, 52, 78, 89]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择排序：就是0，1对比；0，2对比；0，3对比，单下标对比多下标</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/*     选择排序和插入排序特别像，千万不要搞错了    首先理解双重循环的机制，外层的循环慢于里层的循环，里层循环完才会执行外层    第一层循环跟里层循环所有+1下标对比，符合就替换位置，这时候替换位置并不会阻碍循环，参于对比的第一个元素已经变了，nums[i]已经不是原来的元素了    例如：原本nums[0]=9，经过对比替换nums[0]=1了，之后对比的都是跟1对比，而不是9*/</span><span class="token keyword">function</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// nums[i] > nums[j]作为一个条件判断，符合两个元素替换位置，这就说明替换之后的元素只会是越来越大的</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 两个元素替换位置</span>                <span class="token punctuation">;</span><span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>插入排序</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/*     选择排序和插入排序特别像，千万不要搞错了    首先理解while，满足条件进入循环    这里let很关键*/</span><span class="token keyword">function</span> <span class="token function">insertSort</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> temp <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>            i<span class="token operator">--</span>        <span class="token punctuation">&#125;</span>        nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-请用js去除字符串s-”-aa-bb-cc”的空格"><a href="#6-请用js去除字符串s-”-aa-bb-cc”的空格" class="headerlink" title="6.请用js去除字符串s=” aa bb cc”的空格?"></a>6.请用js去除字符串s=” aa bb cc”的空格?</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token string">'123 4642 65235 65765 567 5 65 6 50'</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> newStr <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">' '</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            newStr <span class="token operator">+=</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> newStr<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token string">' aa bb cc  '</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高薪之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优雅！实在是太优雅了</title>
      <link href="/hexo/2023/06/07/shou-lu-yan-ling-zhu/"/>
      <url>/hexo/2023/06/07/shou-lu-yan-ling-zhu/</url>
      
        <content type="html"><![CDATA[<p>扎心，震撼，感动，不舍，热血，上头</p><a id="more"></a><p><font size="5">敏感词汇无法收录</font></p><p><font size="5">你怎么开不起玩笑呢，这么小气</font></p><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> 收录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目（搭建结构）</title>
      <link href="/hexo/2023/06/07/xiang-mu-wen-jian-jie-gou/"/>
      <url>/hexo/2023/06/07/xiang-mu-wen-jian-jie-gou/</url>
      
        <content type="html"><![CDATA[<p>项目搭建必备：对应各个文件夹的用途</p><a id="more"></a><h4 id="vs-code文件"><a href="#vs-code文件" class="headerlink" title="vs.code文件"></a><font color="#08c">vs.code文件</font></h4><p>安装项目所用到的插件，自动提示安装依赖插件</p><h4 id="browserslistrc文件"><a href="#browserslistrc文件" class="headerlink" title=".browserslistrc文件"></a><font color="#08c">.browserslistrc文件</font></h4><p>配置能够分享目标浏览器和nodejs版本在不同的前端工具。主要是为了表示当前项目的浏览器兼容情况。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">“not ie <span class="token operator">&lt;=</span><span class="token number">8</span>” <span class="token operator">:</span>表示<span class="token constant">IE</span>浏览器版本大于<span class="token number">8</span>（实则用npx browserslist 跑出来不包含<span class="token constant">IE9</span> ）“safari <span class="token operator">>=</span><span class="token number">7</span>”<span class="token operator">:</span>表示safari浏览器版本大于等于<span class="token number">7</span><span class="token operator">></span> <span class="token number">1</span><span class="token operator">%</span> <span class="token comment">//" >1%" :代表着全球超过1%人使用的浏览器</span>last <span class="token number">2</span> versions <span class="token comment">// “last 2 versions” : 表示所有浏览器兼容到最后两个版本</span>not dead <span class="token comment">//24个月没有官方支持或更新的浏览器。目前它是IE 11，IE_Mob 11，黑莓10，黑莓7，三星4，OperaMobile 12.1和百度的所有版本。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="jsconfig-json文件"><a href="#jsconfig-json文件" class="headerlink" title="jsconfig.json文件"></a><font color="#08c">jsconfig.json文件</font></h4><p>配置路径跳转，自动补全提示</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token string">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"."</span><span class="token punctuation">,</span>    <span class="token string">"paths"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 解决项目中使用@作为路径别名，导致vscode无法跳转文件的问题</span>      <span class="token string">"@/*"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/*"</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 解决prettier对于装饰器语法的警告</span>    <span class="token string">"experimentalDecorators"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 解决.jsx文件无法快速跳转的问题</span>    <span class="token string">"jsx"</span><span class="token operator">:</span> <span class="token string">"preserve"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//提高 IDE 性能</span>  <span class="token string">"exclude"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"node_modules"</span><span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">,</span> <span class="token string">"build"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="config文件夹"><a href="#config文件夹" class="headerlink" title="config文件夹"></a><font color="#08c">config文件夹</font></h4><p>前后端代理，vue历史模式指向index.html资源，从而实现单页面应用效果（微前端）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">server <span class="token punctuation">&#123;</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  localhost<span class="token punctuation">;</span>    # gzip config    gzip on<span class="token punctuation">;</span>    gzip_min_length <span class="token number">1</span>k<span class="token punctuation">;</span>    gzip_comp_level <span class="token number">9</span><span class="token punctuation">;</span>    gzip_types text<span class="token operator">/</span>plain application<span class="token operator">/</span>javascript application<span class="token operator">/</span>x<span class="token operator">-</span>javascript text<span class="token operator">/</span>css application<span class="token operator">/</span>xml text<span class="token operator">/</span>javascript application<span class="token operator">/</span>x<span class="token operator">-</span>httpd<span class="token operator">-</span>php image<span class="token operator">/</span>jpeg image<span class="token operator">/</span>gif image<span class="token operator">/</span>png<span class="token punctuation">;</span>    gzip_vary on<span class="token punctuation">;</span>    gzip_disable <span class="token string">"MSIE [1-6]\."</span><span class="token punctuation">;</span>    #charset koi8<span class="token operator">-</span>r<span class="token punctuation">;</span>    #access_log  <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>host<span class="token punctuation">.</span>access<span class="token punctuation">.</span>log  main<span class="token punctuation">;</span>    location <span class="token operator">/</span> <span class="token punctuation">&#123;</span>        root   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>html<span class="token punctuation">;</span>        index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>        # 允许使用 Post 方法请求 <span class="token constant">HTML</span> 页面，适配 <span class="token constant">SB</span> 工商银行        error_page <span class="token number">405</span> <span class="token operator">=</span><span class="token number">200</span> $request_uri<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    location <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>sys<span class="token operator">/</span>p<span class="token operator">/</span> <span class="token punctuation">&#123;</span>        root   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>html<span class="token operator">/</span><span class="token punctuation">;</span>        index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>        try_files $uri $uri<span class="token operator">/</span> <span class="token operator">/</span>sys<span class="token operator">/</span>p<span class="token operator">/</span>index<span class="token punctuation">.</span>html<span class="token punctuation">;</span>        # 允许使用 Post 方法请求 <span class="token constant">HTML</span> 页面        error_page <span class="token number">405</span> <span class="token operator">=</span><span class="token number">200</span> $request_uri<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>    location <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>sys<span class="token operator">/</span>c<span class="token operator">/</span> <span class="token punctuation">&#123;</span>        root   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>html<span class="token operator">/</span><span class="token punctuation">;</span>        index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>        try_files $uri $uri<span class="token operator">/</span> <span class="token operator">/</span>sys<span class="token operator">/</span>c<span class="token operator">/</span>index<span class="token punctuation">.</span>html<span class="token punctuation">;</span>        # 允许使用 Post 方法请求 <span class="token constant">HTML</span> 页面        error_page <span class="token number">405</span> <span class="token operator">=</span><span class="token number">200</span> $request_uri<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    #error_page  <span class="token number">404</span>              <span class="token operator">/</span><span class="token number">404.</span>html<span class="token punctuation">;</span>    # redirect server error pages to the <span class="token keyword">static</span> page <span class="token operator">/</span><span class="token number">50</span>x<span class="token punctuation">.</span>html    #    error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  <span class="token operator">/</span><span class="token number">50</span>x<span class="token punctuation">.</span>html<span class="token punctuation">;</span>    location <span class="token operator">=</span> <span class="token operator">/</span><span class="token number">50</span>x<span class="token punctuation">.</span>html <span class="token punctuation">&#123;</span>        root   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>html<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    # proxy the <span class="token constant">PHP</span> scripts to Apache listening on <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">80</span>    #    #location <span class="token operator">~</span> \<span class="token punctuation">.</span>php$ <span class="token punctuation">&#123;</span>    #    proxy_pass   http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">;</span>    #<span class="token punctuation">&#125;</span>    # pass the <span class="token constant">PHP</span> scripts to FastCGI server listening on <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9000</span>    #    #location <span class="token operator">~</span> \<span class="token punctuation">.</span>php$ <span class="token punctuation">&#123;</span>    #    root           html<span class="token punctuation">;</span>    #    fastcgi_pass   <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9000</span><span class="token punctuation">;</span>    #    fastcgi_index  index<span class="token punctuation">.</span>php<span class="token punctuation">;</span>    #    fastcgi_param  <span class="token constant">SCRIPT_FILENAME</span>  <span class="token operator">/</span>scripts$fastcgi_script_name<span class="token punctuation">;</span>    #    include        fastcgi_params<span class="token punctuation">;</span>    #<span class="token punctuation">&#125;</span>    # deny access to <span class="token punctuation">.</span>htaccess files<span class="token punctuation">,</span> <span class="token keyword">if</span> Apache's document root    # concurs <span class="token keyword">with</span> nginx's one    #    #location <span class="token operator">~</span> <span class="token operator">/</span>\<span class="token punctuation">.</span>ht <span class="token punctuation">&#123;</span>    #    deny  all<span class="token punctuation">;</span>    #<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="vue-config-ts"><a href="#vue-config-ts" class="headerlink" title="vue.config.ts"></a><font color="#08c">vue.config.ts</font></h4><p>项目配置文件</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;* eslint-disable @typescript-eslint&#x2F;no-var-requires *&#x2F;const StyleLintPlugin &#x3D; require(&#39;stylelint-webpack-plugin&#39;)const packageJSON &#x3D; require(&#39;.&#x2F;package.json&#39;)const projectName &#x3D; packageJSON.nameconst webpack &#x3D; require(&#39;webpack&#39;)module.exports &#x3D; &#123;  &#x2F;&#x2F; 打包输出访问路径  publicPath: &#96;&#x2F;assets&#x2F;$&#123;projectName&#125;&#96;,  &#x2F;&#x2F; 打包输出文件夹  outputDir: &#96;assets&#x2F;$&#123;projectName&#125;&#96;,  productionSourceMap: false,  pages: &#123;    index: &#123;      entry: &#39;src&#x2F;main.ts&#39;,      template: &#39;public&#x2F;mpptx.html&#39;,      filename: &#39;mpptx.html&#39;    &#125;  &#125;,  pluginOptions: &#123;    windicss: &#123;&#125;  &#125;,  css: &#123;    loaderOptions: &#123;      sass: &#123;        prependData: &#96;          @import &#39;~@&#x2F;assets&#x2F;styles&#x2F;variable.scss&#39;;          @import &#39;~@&#x2F;assets&#x2F;styles&#x2F;mixin.scss&#39;;        &#96;,      &#125;,      less: &#123;        lessOptions: &#123;          modifyVars: &#123;            &#39;primary-color&#39;: &#39;#d14424&#39;,            &#39;text-color&#39;: &#39;#41464b&#39;,            &#39;font-size-base&#39;: &#39;13px&#39;,            &#39;border-radius-base&#39;: &#39;2px&#39;,          &#125;,          javascriptEnabled: true,        &#125;,      &#125;,    &#125;,  &#125;,  configureWebpack: &#123;    plugins: [      new StyleLintPlugin(&#123;        files: [&#39;src&#x2F;**&#x2F;*.&#123;vue,html,css,scss,sass,less&#125;&#39;],        failOnError: false,        cache: false,        fix: true,      &#125;),      &#x2F;&#x2F; jquery使用      new webpack.ProvidePlugin(&#123;        $: &#39;jquery&#39;,        jQuery: &#39;jquery&#39;,        &#39;windows.jQuery&#39;: &#39;jquery&#39;,      &#125;)    ],  &#125;,&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="windi-config-ts"><a href="#windi-config-ts" class="headerlink" title="windi.config.ts"></a><font color="#08c">windi.config.ts</font></h5><p>配置 windicss 原子类样式库使用</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import &#123; defineConfig &#125; from &#39;windicss&#x2F;helpers&#39;import plugin from &#39;windicss&#x2F;plugin&#39;import &#123; windPreset &#125; from &#39;can-can-need-bug&#39;const mpptxPlugin &#x3D; plugin((&#123; addComponents, addUtilities &#125;) &#x3D;&gt; &#123;  addUtilities(&#123;    &#39;.click&#39;: &#123;      cursor: &#39;pointer&#39;,      transition: &#39;filter 300ms&#39;,      &#39;&amp;:active&#39;: &#123;        filter: &#39;brightness(1.1)&#39;      &#125;    &#125;  &#125;)  addComponents(&#123;    &#39;.btn, .btn-info, .btn-primary&#39;: &#123;      paddingLeft: &#39;16px&#39;,      paddingRight: &#39;16px&#39;,      paddingTop: &#39;7px&#39;,      paddingBottom: &#39;7px&#39;,      transition: &#39;all 100ms&#39;,       backgroundColor: &#39;#fff&#39;,      borderRadius: &#39;6px&#39;,      borderWidth: &#39;1px&#39;,      borderStyle: &#39;solid&#39;,      borderColor: &#39;#DEDEDE&#39;,      cursor: &#39;pointer&#39;,      userSelect: &#39;none&#39;,      textAlign: &#39;center&#39;,      fontSize: &#39;16px&#39;,      &#x2F;&#x2F; &#39;&amp;.btn-primary:hover&#39;: &#123;      &#x2F;&#x2F;   filter: &#39;brightness(1.1)&#39;      &#x2F;&#x2F; &#125;,      &#39;&amp;:active&#39;: &#123;        filter: &#39;brightness(0.9)&#39;      &#125;    &#125;,    &#39;.btn-info&#39;: &#123;      color: &#39;#535353&#39;,      borderColor: &#39;#DEDEDE&#39;    &#125;,    &#39;.btn-primary&#39;: &#123;      color: &#39;#fff&#39;,      backgroundColor: &#39;#FF5E2A&#39;    &#125;,    &#39;.btn-disabled&#39;: &#123;      opacity: &#39;0.5&#39;,      pointerEvents: &#39;none&#39;    &#125;  &#125;)&#125;)windPreset.plugins!.push(mpptxPlugin)export default windPreset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="husky文件夹"><a href="#husky文件夹" class="headerlink" title=".husky文件夹"></a><font color="#08c">.husky文件夹</font></h4><p>git提交规范设置，目前已知可配置eslint提交规范校验</p><h4 id="dist"><a href="#dist" class="headerlink" title="dist"></a><font color="#08c">dist</font></h4><p>项目打包出来的dist静态资源文件夹，放到服务器即可</p><h4 id="env"><a href="#env" class="headerlink" title=".env"></a><font color="#08c">.env</font></h4><p>全局变量</p>]]></content>
      
      
      
        <tags>
            
            <tag> 项目搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你不知道的css几个小细节</title>
      <link href="/hexo/2023/06/07/shou-lu-css-du-dian/"/>
      <url>/hexo/2023/06/07/shou-lu-css-du-dian/</url>
      
        <content type="html"><![CDATA[<p>帮你踩css的一些毒坑，为你的烦恼解忧</p><a id="more"></a><h2 id="痛点"><a href="#痛点" class="headerlink" title="痛点"></a>痛点</h2><h4 id="1-多个img标签拼接处留有白缝"><a href="#1-多个img标签拼接处留有白缝" class="headerlink" title="1.多个img标签拼接处留有白缝"></a>1.多个img标签拼接处留有白缝</h4><pre class="line-numbers language-none"><code class="language-none">display: block;line-height: 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>完美解决你的痛点</p><h4 id="2-组件样式更改"><a href="#2-组件样式更改" class="headerlink" title="2.组件样式更改"></a>2.组件样式更改</h4><pre class="line-numbers language-none"><code class="language-none">&#x2F;deep&#x2F; .class：deep(.class)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>有时候deep写法不太一样</p><h4 id="3-网页无法复制字体"><a href="#3-网页无法复制字体" class="headerlink" title="3.网页无法复制字体"></a>3.网页无法复制字体</h4><pre class="line-numbers language-none"><code class="language-none">user-select: text;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对组件库表格组件无法复制真的一大痛点，一条属性直接简单粗暴</p><h4 id="4-滚动条问题"><a href="#4-滚动条问题" class="headerlink" title="4.滚动条问题"></a>4.滚动条问题</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//滚动条置顶</span>window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//阻止默认事件的触发</span><span class="token keyword">const</span> <span class="token function-variable function">mo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//禁止页面滑动</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">"hidden"</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"touchmove"</span><span class="token punctuation">,</span> mo<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//出现滚动条，解除限制</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"touchmove"</span><span class="token punctuation">,</span> mo<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>vue项目可以通过watch监听实现页面是否可以滚动</p><p>示例：这里可以设置路由跳转时滚动条置顶</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">// firefox</span>  document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> <span class="token number">0</span>  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-style标签的scoped属性"><a href="#5-style标签的scoped属性" class="headerlink" title="5.style标签的scoped属性"></a>5.style标签的scoped属性</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js">body<span class="token punctuation">,</span>html<span class="token punctuation">&#123;</span>  <span class="token comment">// 设置样式的时候不能加scoped</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> 收录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端必备工具网站</title>
      <link href="/hexo/2023/06/07/shou-lu-shi-yong-de-wang-zhan/"/>
      <url>/hexo/2023/06/07/shou-lu-shi-yong-de-wang-zhan/</url>
      
        <content type="html"><![CDATA[<p>提升开发体验，便利开发利器，顺便收入一些实用文章</p><a id="more"></a><h2 id="网站工具类"><a href="#网站工具类" class="headerlink" title="网站工具类"></a>网站工具类</h2><p><a href="https://tinypng.com/">图片压缩</a></p><p><a href="https://sunpma.com/other/rgb/">颜色转换工具</a></p><p><a href="https://cli.im/mob">链接生成二维码</a></p><p><a href="https://www.sojson.com/">JSON解析</a></p><p><a href="https://www.iconfont.cn/search/index?searchType=icon&q=">阿里矢量图标库</a></p><p><a href="https://color.dumogu.top/">渐变色</a></p><p><a href="https://zh.snipaste.com/download.html">贴图</a></p><p><font color="#08c">TranslucentTB 任务栏透明 这个直接在 window 商城里面下载就行了</font></p><p><a href="https://www.gaitubao.com/">在线修改图片尺寸大小</a></p><h2 id="官方文档类"><a href="#官方文档类" class="headerlink" title="官方文档类"></a>官方文档类</h2><p><a href="https://hexo.io/zh-cn/docs/themes">hexo主题</a></p><p><a href="http://www.cssmoban.com/">前端模板之家</a></p><p><a href="https://markdown.com.cn/basic-syntax/headings.html">markdown官网</a></p><p><a href="https://lbs.amap.com/api/webservice/guide/tools/info">高德api官网</a></p><p><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html">微信开发文档</a></p><p><a href="https://opendocs.alipay.com/open/02ivbs">支付宝H5支付</a></p><p><a href="https://sc.chinaz.com/tag_jiaoben/dazhuanpan.html">jquery功能模板</a></p><p><a href="https://shimo.im/recent">石墨在线文档</a></p><h2 id="文章宝藏类"><a href="#文章宝藏类" class="headerlink" title="文章宝藏类"></a>文章宝藏类</h2><p><a href="https://juejin.cn/post/6994606112775340039">Echarts-实现一个下钻伪 3d 地图</a></p><p><a href="https://blog.csdn.net/manjianchao/article/details/53668280?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163791213816780271918431%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=163791213816780271918431&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-53668280.pc_search_result_control_group&utm_term=markdown%E8%AF%AD%E6%B3%95%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2&spm=1018.2226.3001.4187">markdown 语法字体样式</a></p><p><a href="https://juejin.cn/post/6907107557211537415">upload上传器判断图片像素大小</a></p><p><a href="https://juejin.cn/post/6968630178163458084">axios封装以及取消请求</a></p><p>随机图片api：<a href="http://api.btstu.cn/sjbz/?lx=dongman">电脑动漫图片</a> | <a href="http://api.btstu.cn/sjbz/?lx=meizi">电脑美女图片</a> | <a href="http://api.btstu.cn/sjbz/?lx=suiji">电脑随机动漫妹子</a> | <a href="http://api.btstu.cn/sjbz/?lx=m_dongman">手机动漫图片</a> | <a href="http://api.btstu.cn/sjbz/?lx=m_meizi">手机美女图片</a> | <a href="http://api.btstu.cn/sjbz/?m_lx=suiji">手机随机动漫妹子</a></p><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> 收录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人类的精华是一代代的头发凝聚而成</title>
      <link href="/hexo/2023/06/07/shou-lu-kai-fa-keng-dian/"/>
      <url>/hexo/2023/06/07/shou-lu-kai-fa-keng-dian/</url>
      
        <content type="html"><![CDATA[<p>站在巨人的肩膀上眺望天空并不可耻，可耻的是白嫖先人的智慧、却对其嗤之以鼻</p><a id="more"></a><h2 id="子组件v-show失效（vue3）"><a href="#子组件v-show失效（vue3）" class="headerlink" title="子组件v-show失效（vue3）"></a>子组件v-show失效（vue3）</h2><ul><li><p>问题： v-show控制子组件显示隐藏失效</p></li><li><p>思考：目前理解不了</p></li><li><p>解决：子组件里面有模态框，确保template标签下只有一个子标签（同vue2写法）</p></li><li><p>案例：子组件里面有dialog组件，放在template同级下出现了这种情况</p></li></ul><h2 id="图标引入失效（element组件库）"><a href="#图标引入失效（element组件库）" class="headerlink" title="图标引入失效（element组件库）"></a>图标引入失效（element组件库）</h2><ul><li><p>问题：图标无效</p></li><li><p>思考：无</p></li><li><p>解决： </p><ul><li><font color="red">npm install @element-plus/icons     （官网下载的包不行，换一个就ok）</font></li><li><font color="red">import {  ArrowLeftBold  } from ‘@element-plus/icons’</font></li></ul></li></ul><ul><li>案例：图标一直不展示</li></ul><h2 id="upload上传器（element组件库）"><a href="#upload上传器（element组件库）" class="headerlink" title="upload上传器（element组件库）"></a>upload上传器（element组件库）</h2><ul><li><p>问题：自定义上传文件（二进制文件上传校验）</p></li><li><p>思考：before-upload上传文件前的钩子函数，参数为上传的文件。 若返回 false 或者返回 Promise 且被 reject，则终止上传。</p></li><li><p>解决：借助before-upload钩子函数，我们可以return一个Promise.reject（），借此在promise里面做校验处理</p></li><li><p>案例：无</p></li></ul><h2 id="vue框架keep-alive缓存问题（踩坑）"><a href="#vue框架keep-alive缓存问题（踩坑）" class="headerlink" title="vue框架keep-alive缓存问题（踩坑）"></a>vue框架keep-alive缓存问题（踩坑）</h2><ul><li><p>组件必须写name值并且不能重复，要不然缓存不会生效</p></li><li><p>vue3中使用了keep-alive缓存的页面，不要把注释写在和根节点同级的位置，不然很可能很有几率的报一些莫名其妙的错误</p></li><li><p>用keep-alive尽量使用include和exclude来动态缓存组件，这样更好控制也更明确。不要一股脑全塞进去，不然有的页面要缓存有点页面不需要缓存，在我们跳转到一个不需要缓存的页面，肯定会把我们之前缓存的组件全部干掉，导致所有页面都不缓存</p></li></ul><h2 id="video、audio标签使用会出现的问题"><a href="#video、audio标签使用会出现的问题" class="headerlink" title="video、audio标签使用会出现的问题"></a>video、audio标签使用会出现的问题</h2><ul><li><p>无总时长：src地址是后台服务器读取音频文件后，回写的数据流并且响应头不包含Content-Length。</p></li><li><p>拖动条不能拖动问题：后端需要继续增加响应头 Content-Range, Accept-Ranges</p></li></ul><p>后台代码示例</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span><span class="token string">"max-age=31536000, must-revalidate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">".mp4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"video/mpeg4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">".mp3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"audio/mpeg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Accept-Ranges:"</span><span class="token punctuation">,</span> <span class="token string">"bytes"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>包裹video、audio标签的外层div无法自适应高度</li></ul><p><font color="red">原因是video数据还没加载完，只有初始宽度，没有初始高度（默认0）、通过style设置高度好像也不会生效</font></p><p><font color="blue">页面假如有多个加载的时候会导致最外层的div已经渲染结束 获取到的高度是 0 ，这时候页面展示会出现样式错乱，资源加载快就没有这个问题（实现代码如下）</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const onloadDomMessage &#x3D; () &#x3D;&gt; &#123;  let viewHeight &#x3D; document.getElementById(&#39;app&#39;).clientHeight  &#x2F;&#x2F; viewHeight 动态设置元素高度&#125;const videos &#x3D; document.getElementsByTagName(&#39;video&#39;) &#x2F;&#x2F; 获取页面所有的video进行遍历，执行获取页面高度for (let i &#x3D; 0; i &lt; videos.length; i++) &#123;  let video &#x3D; videos[i]  video.addEventListener(&#39;loadedmetadata&#39;, onloadDomMessage())&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">object-fit语法、听说也能实现，目前没验证过</font></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.video</span><span class="token punctuation">&#123;</span>  <span class="token property">object-fit</span><span class="token punctuation">:</span> fill | contain | cover | none | scale-down<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="vue后台管理项目左菜单栏伸缩-影响右侧内容宽度（可变宽不能缩小）"><a href="#vue后台管理项目左菜单栏伸缩-影响右侧内容宽度（可变宽不能缩小）" class="headerlink" title="vue后台管理项目左菜单栏伸缩-影响右侧内容宽度（可变宽不能缩小）"></a>vue后台管理项目左菜单栏伸缩-影响右侧内容宽度（可变宽不能缩小）</h2><blockquote><p>右侧容器css属性 overflow-x: hidden 解决</p></blockquote><h2 id="元素粘性定位顶部-滚动条滚动到一定高度粘性定位元素失效"><a href="#元素粘性定位顶部-滚动条滚动到一定高度粘性定位元素失效" class="headerlink" title="元素粘性定位顶部 滚动条滚动到一定高度粘性定位元素失效"></a>元素粘性定位顶部 滚动条滚动到一定高度粘性定位元素失效</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.header</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>最外层的app设置了高度 height：100vh 或者 设置了一定高度， 子元素高度 比 app高度 大，这时候滚动超出 100vh 之后 就把 相当于 app 向上滚动了，导致元素粘性定位失效。<br><font color="red">解决：app或外层去除高度，子元素自适应撑开。</font></p></blockquote><h2 id="el-table后端返回10条数据、但是表格莫名其妙只展示了8条数据"><a href="#el-table后端返回10条数据、但是表格莫名其妙只展示了8条数据" class="headerlink" title="el-table后端返回10条数据、但是表格莫名其妙只展示了8条数据"></a>el-table后端返回10条数据、但是表格莫名其妙只展示了8条数据</h2><p><font color="red">prop必传字段是空的，有时候接口字段是对象嵌套藏的很深，找半天，傻逼element不会报错没有任何提示，直接给数据隐藏了</font><br><font color="red">prop一定不能为空！！！</font></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>编号<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="el-tree组件一堆坑点"><a href="#el-tree组件一堆坑点" class="headerlink" title="el-tree组件一堆坑点"></a>el-tree组件一堆坑点</h2><p><font color="red">勾选相关的api</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;&#x2F;默认勾选的节点的 key 的数组:default-checked-keys&#x3D;&quot;[SP1000, SP2000]&quot;&#x2F;&#x2F;默认展开的节点的 key 的数组:default-expanded-keys&#x3D;&quot;[SP1000, SP2000]&quot;&#x2F;&#x2F;是否在点击节点的时候选中节点，默认值为 false，即只有在点击复选框时才会选中节点。:check-on-click-node&#x3D;&quot;true&quot;&#x2F;&#x2F;展示数据:data&#x3D;&quot;treeData&quot;&#x2F;&#x2F; label对应树形展示文本，children子节点，对应treeData对象属性:props&#x3D;&quot;&#123; label: &#39;display_name&#39;, children: &#39;child_permission&#39; &#125;&quot; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const spRouter &#x3D; this.$refs.spRouter&#x2F;&#x2F; getCheckedKeys获取勾选项，getHalfCheckedKeys获取已经被勾选了的子节点的父节点const spRouterKeys &#x3D; [...spRouter.getCheckedKeys(), ...spRouter.getHalfCheckedKeys()]&#x2F;&#x2F; 设置某个节点是否被选中，常常配合同时勾选另一项使用spRouter.setChecked(SP1000, true)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>勾选节点：父节点作为被勾选项，回显的时候会导致子节点下的所有项被勾选（非常隐蔽，找不出问题）</li></ul><p><font color="blue">解决方案一：check-strictly设置为true，父子节点脱离关系</font></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tree</span> <span class="token attr-name">:check-strictly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color="blue">解决方案二：怼死后端，只传勾选最小级别的节点给后端，后端自己处理关系，组装好数据结构返回</font></p><p><font color="blue">解决方案三：数据处理，只保留最小级的节点（最小级节点需要有共性，约定好就ok）</font></p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const spRouterKeys &#x3D; res.data  .filter(item &#x3D;&gt; &#123;    if (item.item_type &#x3D;&#x3D; 99) &#123;      return item    &#125;  &#125;)  .map(item &#x3D;&gt; item.name)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> 收录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派的搭建</title>
      <link href="/hexo/2023/06/07/shou-lu-shu-mei-pai-jian-zhan/"/>
      <url>/hexo/2023/06/07/shou-lu-shu-mei-pai-jian-zhan/</url>
      
        <content type="html"><![CDATA[<p>树莓派搭建web服务</p><a id="more"></a><h1 id="树莓派搭建web服务"><a href="#树莓派搭建web服务" class="headerlink" title="树莓派搭建web服务"></a>树莓派搭建web服务</h1><h2 id="安装操作系统"><a href="#安装操作系统" class="headerlink" title="安装操作系统"></a>安装操作系统</h2><h3 id="下载树莓派镜像烧录器"><a href="#下载树莓派镜像烧录器" class="headerlink" title="下载树莓派镜像烧录器"></a>下载树莓派镜像烧录器</h3><p><a href="https://downloads.raspberrypi.org/imager/imager_latest.exe">下载地址</a></p><h3 id="准备读卡器和-tf-卡"><a href="#准备读卡器和-tf-卡" class="headerlink" title="准备读卡器和 tf 卡"></a>准备读卡器和 tf 卡</h3><p>买树莓派的时候套餐一般包含这个东西，如果没有也可以用闲置的 U盘 替代。如果都没有的话，可以去买闪迪的 32g tf卡，淘宝或京东上面会送一个 usb2.0 的读卡器，如果要单独买读卡器的话，可以买川宇牌子的读卡器，usb 最好是3.0的，读卡器记得要看支不支持 Linux 系统。 </p><p>最好还是用 tf卡，因为如果硬件出现故障的话，使用读卡器+ tf卡只会烧毁读卡器，而 U盘 就会整个损坏。而且使用 U盘 作为系统盘并不稳定，经常跑着跑着就出现读写错误</p><h3 id="烧录系统"><a href="#烧录系统" class="headerlink" title="烧录系统"></a>烧录系统</h3><p>将 读卡器 + tf卡 插进你的电脑</p><p>选择你的 tf卡(U盘)，注意对准型号，不要弄错了，不然会被格式化数据就没了</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205182703.png" alt="image-20220205182700880"></p><p>打开刚才下载好的树莓派镜像烧录器，点击选择系统，点击第二个 Raspberry Pi OS(other)，选择 Paspberry Pi OS Lite(64-bit)系统，在这里我是要当服务器的，所以选择了无桌面版的的操作系统，Paspberry Pi OS 是在 Debian 基础上修改的操作系统</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205182512.png" alt="image-20220205182502965"></p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205183428.png" alt="image-20220205183426020"></p><p>点击设置</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205183748.png" alt="image-20220205183745528"></p><p>开启 SSH 服务，记住账号密码，等下要用</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205183652.png" alt="image-20220205183634408"></p><p>配置 wifi，如果有以太网接口，可以不做配置。最好还是用以太网接口联网比较好，因为一旦设备重新连接 wifi，那么路由给设备分配的<strong>内网 IP</strong> 地址就会重新分配，不方便我们操作下一步的 ssh远程登录。需要在路由器上设置绑定 mac 的 IP 地址。而且以太网接口的网速肯定是比 wifi 快 n 倍的，所以有条件的话还是插网线优先</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205183954.png" alt="image-20220205183952255"></p><p>点击保存后，点击烧录慢慢等待即可，烧录完成，就可以拔掉 tf读卡器，插进你的树莓派安装系统了</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205184517.png" alt="image-20220205184513489"></p><h2 id="搭建-web-服务"><a href="#搭建-web-服务" class="headerlink" title="搭建 web 服务"></a>搭建 web 服务</h2><h3 id="外接设备-键盘、显示器"><a href="#外接设备-键盘、显示器" class="headerlink" title="外接设备(键盘、显示器)"></a>外接设备(键盘、显示器)</h3><p>如果你有闲置的键盘和显示器，可以跳过下一步 SSH 的远程登陆直接操作命令行，当然最好还是用跳过这里直接用 SSH 登录操作最好，毕竟我们以后都是用 SSH 远程操作服务器的。</p><h3 id="SSH-远程登录"><a href="#SSH-远程登录" class="headerlink" title="SSH 远程登录"></a>SSH 远程登录</h3><p>先将读卡器插进树莓派，再开机(这里可能要等待一会)。第一次启动使用 DHCP 获取IP地址, 你可以从路由器管理页面，如 192.168.1.1。每个路由器的管理页面都不尽相同，请看你家的路由器的背面查看路由管理面板的 IP 地址查看树莓派 IP 地址，树莓派的设备名默认是 <strong>raspberrypi</strong>，打开路由管理页面查看名为 raspberrypi 的设备，记住他的 <strong>ip</strong> 地址。因为大家的路由器都不一样，管理页面自然不一样，我这里就简略带过…如果你没有路由器管理账号密码，可以考虑重置路由，或者按照这个<a href="https://zhidao.baidu.com/question/179916193.html">方法</a>来找到树莓派的内网IP地址。亦或者使用手机 下载 <strong>fing</strong> App 软件，获取内网下的所有设备信息找到 树莓派</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205185843.png" alt="image-20220205185840359"></p><p>下载并打开 putty 远程登录工具</p><p><a href="https://gsf-fl.softonic.com/a2f/168/8ad1e902d4b19d4003eecdb8ed992adbc7/putty-0.76-installer.msi?Expires=1644094562&Signature=d341d05d32385e71a26b55bd30c4d0bd0dd9db6d&url=https://putty.en.softonic.com&Filename=putty-0.76-installer.msi">下载链接</a></p><p>粘贴刚才的树莓派设备的 ip 地址，点击 Open 后弹出一个小窗口，点击 accept，如果是弹出连接超时的提示，那么你的 ip 地址应该是错误的。另外连接成功后在路由管理页面设置 mac 和 ip 地址绑定，否则树莓派重新连接 wifi，ip 地址就可能不是之前的 ip 地址了。</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205190241.png" alt="image-20220205190239146"></p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205190754.png" alt="image-20220205190751445"></p><p>这里画红圈的地方就是刚才 <a href="#%E7%83%A7%E5%BD%95%E7%B3%BB%E7%BB%9F"></a> 时候设置的 ssh 账号密码，要注意的是，在填写密码的时候，黑窗口是没有反应的，直接输入回车就好了，登录以后看到一下图片那就代表成功了。</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220205191141.png" alt="image-20220205191139275"></p><h3 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h3><p>安装宝塔面板需要 root 权限</p><p>在小黑窗口，输入以下命令设置 root 密码，回车后会他会让你重复输入两次 root 的密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo passwd root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>激活 root 账号</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo passwd -unlock root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>切换 root 账号，输入刚才的密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">su root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入安装宝塔的命令，回车后等待一小会，它会提示你要不要安装宝塔面板，输入 y 回车然后慢慢等待即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install-ubuntu_6.0.sh &amp;&amp; bash install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220206232913.png" alt="image-20220206232607646"></p><p>耗时 15 分钟终于下载安装完了，复制上面的内网面板地址，在浏览器打开后输入上面的账号密码。</p><p>如果你报了这样的错误：</p><p><img src="https://www.bt.cn/bbs/data/attachment/forum/202201/16/195449efiz56qp9yzc06c5.png"></p><p>这是因为网络差的原因导致某些 Python 的依赖没有成功下载，输入以下命令重装 Python 环境：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rm -rf &#x2F;www&#x2F;server&#x2F;panel&#x2F;pyenvcurl -sSO http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install_panel.sh &amp;&amp; bash install_panel.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220206232847.png" alt="image-20220206232845426"></p><p>成功登录后，可以直接用宝塔内的终端进行操作，也就是不需要再用 putty 了</p><h3 id="部署-web-站点"><a href="#部署-web-站点" class="headerlink" title="部署 web 站点"></a>部署 web 站点</h3><p>首次安装宝塔会提示你装 web服务的套件，你装哪一个都可以。</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220206233023.png" alt="image-20220206233020982"></p><p>点击 网站》PHP项目》添加站点》域名输入 127.0.0.1:5408》提交。其中 127.0.0.1:5408 中的 5408 是端口号，可以自定义端口号，不要占用其他端口号即可。</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220207012903.png" alt="image-20220207012854439"></p><p>成功创建完站点后，复制宝塔面板左上角的 IP 地址，也就是你的树莓派的局域网 IP 地址，粘贴到你的浏览器的地址输入栏，再加上我们刚才设置的端口号5408，如下图</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220207013213.png" alt="image-20220207013211833"></p><p>如果出现下图，代表你成功部署站点了！</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220207013445.png" alt="image-20220207013443617"></p><p>如果需要更改网页内容，到 文件》根目录&gt;www&gt;wwwroot&gt;127.0.0.1&gt;index.html，这个文件在我们刚刚部署站点的时候，宝塔就已经为我们创建好了，双击 index.html 修改内容，剩下的就不用我多说了，相信能看到这里的帅逼们都知道应该怎么做</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220207013810.png" alt="image-20220207013808838"></p><h2 id="FRP内网穿透"><a href="#FRP内网穿透" class="headerlink" title="FRP内网穿透"></a>FRP内网穿透</h2><p>我们已经成功部署好站点了，但是此时只能够是我们内网访问，外放还是访问不到的。如果你的宽带有公网 IP 的话，一般只需要 DDOS 动态解析 IP 地址就好了，这是最优也是最简单的方案。但是普通用户通常是没有公网 IP 地址的，所以在这里不过多描述。</p><p>这里我用 <a href="https://www.natfrp.com/">SAKURA FRP</a> 来穿透内网，当然你也可以用花生壳、网云穿之类的其他软件也是可以的。</p><h3 id="准备域名"><a href="#准备域名" class="headerlink" title="准备域名"></a>准备域名</h3><p>首先你要有两个域名，一个穿透宝塔面板，一个穿透你的部署的 web 站点。只有一个域名的话可以使用 VPN 来穿透所有端口号。这里我刚好有几个域名，就不费事了</p><p>如果没有 <strong>已备案</strong> 的 <strong>域名</strong> 就不要往下看了，去找其他的有赠送免费域名的穿透软件的文档吧（花生壳、网云穿等好像都有赠送免费域名）。</p><h3 id="创建穿透隧道"><a href="#创建穿透隧道" class="headerlink" title="创建穿透隧道"></a>创建穿透隧道</h3><p>首先到 <a href="https://www.natfrp.com/">官网</a> 注册账号</p><p>实名认证、验证备案，这里实名认证是要收钱的，好像是1块钱还是忘了。</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220208005254.png" alt="image-20220208005251585"></p><p>创建隧道列表</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220208005119.png" alt="image-20220208005115853"></p><p>勾选可建站，本地端口号是你的服务的端口号。宝塔面板的端口号是 8888，所以这里穿透内网让外网也可以访问你的宝塔面板。上面我们部署的项目的端口号是 5408，那么我们要穿透这个服务就填端口号 5408</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220208005815.png" alt="image-20220208005814139"></p><p>创建完毕后在终端输入以下命令安装 frp 软件并检验 md5 值</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cd &#x2F;usr&#x2F;local&#x2F;binwget -O frpc https:&#x2F;&#x2F;getfrp.sh&#x2F;d&#x2F;frpc_linux_arm64chmod 755 frpcls -ls frpcmd5sum frpcfrpc -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220208004211.png" alt="image-20220208004209675"></p><p>黄色框是穿透软件的版本号</p><p>出现上图划红线的 MD5 值代表安装成功，如果不一致则代表安装错误。当然你安装的版本应该比我高，可以自行到 <a href="https://www.natfrp.com/tunnel/download">官网</a> 对比 md5 确认安装成功</p><h3 id="编辑-frpc-配置文件"><a href="#编辑-frpc-配置文件" class="headerlink" title="编辑 frpc 配置文件"></a>编辑 frpc 配置文件</h3><p>打开宝塔面板，进入文件，输入 <code>/etc/systemd/system</code></p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220208011948.png" alt="image-20220208011946615"></p><p>创建文件 <code>frpc@.service</code></p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220208012336.png" alt="image-20220208012335229"></p><p>点击 <strong>编辑</strong>，然后复制并粘贴下面提供的服务文件内容，请注意 <strong>不要</strong> 多复制或少复制任何东西，确保粘贴后的内容和图中一模一样</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[Unit]Description&#x3D;SakuraFrp ServiceAfter&#x3D;network.target[Service]Type&#x3D;idleUser&#x3D;nobodyRestart&#x3D;on-failureRestartSec&#x3D;60sExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;frpc -f %i[Install]WantedBy&#x3D;multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>回到终端，执行下面的命令重载 Systemd，这样服务就配置完成了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl daemon-reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="启动穿透隧道"><a href="#启动穿透隧道" class="headerlink" title="启动穿透隧道"></a>启动穿透隧道</h3><p>启动隧道需要你的 访问密匙 和 隧道 ID</p><p>点击访问密匙后，就能看到你的密匙</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220208010515.png" alt="image-20220208010513486"></p><p>隧道ID：</p><p><img src="https://gitee.com/wu-hao-chao/upload/raw/master/img/20220208010634.png" alt="image-20220208010632829"></p><p>启动/停止隧道非常简单，使用下面的命令即可，<code>start</code> 是启动，<code>stop</code> 是停止</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start frpc@wb3q7trzx4tq6gaceydjb51daphxxxxx:xxxxxxxsystemctl stop frpc@wb3q7trzx4tq6gaceydjb51daphxxxxx:xxxxxxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置开机自动穿透：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl enable frpc@wb3q7trzx4tq6gaceydjb51daphxxxxx:xxxxxxxsystemctl enable frpc@wb3q7trzx4tq6gaceydjb51daphxxxxx:xxxxxxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> 收录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序（一些小细节）</title>
      <link href="/hexo/2023/06/07/xiao-cheng-xu-yi-xie-xiao-xi-jie/"/>
      <url>/hexo/2023/06/07/xiao-cheng-xu-yi-xie-xiao-xi-jie/</url>
      
        <content type="html"><![CDATA[<p>小程序开发遇到的一些顽固切无法理解的问题</p><a id="more"></a><h3 id="小程序如何打开正式版的控制台"><a href="#小程序如何打开正式版的控制台" class="headerlink" title="小程序如何打开正式版的控制台"></a>小程序如何打开正式版的控制台</h3><ul><li>先体验版打开调试、然后重新进入正式版</li></ul><h3 id="微信开发者工具打开项目无网络"><a href="#微信开发者工具打开项目无网络" class="headerlink" title="微信开发者工具打开项目无网络"></a>微信开发者工具打开项目无网络</h3><p><img src="http://linmingqi.top/img/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E6%97%A0%E7%BD%91%E7%BB%9C.png"></p><ul><li>改为offline再改为wifi或者其他的，即可</li></ul><h3 id="taro-小程序端-mini-css-extract-plugin-插件-conflicting-order-报错"><a href="#taro-小程序端-mini-css-extract-plugin-插件-conflicting-order-报错" class="headerlink" title="taro 小程序端 mini-css-extract-plugin 插件 conflicting order 报错"></a>taro 小程序端 mini-css-extract-plugin 插件 conflicting order 报错</h3><ul><li>原因：同组件引用的 css 重名问题，mini-css-extract-plugin 需要按引用顺序去生成 css 文件，如果多个文件引入顺序不一就会警告。</li><li>解决方法：taro 无法使用 css scope 作用域，需使用 css module 或 css 命名使用 bem 规范来规避重名问题，组件如使用公共样式，需与其他组件导入顺序保持一致。</li></ul><h3 id="支付宝小程序无法使用-try-catch-finally"><a href="#支付宝小程序无法使用-try-catch-finally" class="headerlink" title="支付宝小程序无法使用 try catch finally"></a>支付宝小程序无法使用 try catch finally</h3><ul><li>打开支付宝小程序基础库 2.0 编译</li></ul><h3 id="百度小程序-swan-login-无法获取-code"><a href="#百度小程序-swan-login-无法获取-code" class="headerlink" title="百度小程序 swan.login 无法获取 code"></a>百度小程序 swan.login 无法获取 code</h3><ul><li>百度小程序除了开发者登录，还需登录百度 app 方可调用内置 api</li></ul><h3 id="支付宝小程序基础库-2-0-生产环境打包失败"><a href="#支付宝小程序基础库-2-0-生产环境打包失败" class="headerlink" title="支付宝小程序基础库 2.0 生产环境打包失败"></a>支付宝小程序基础库 2.0 生产环境打包失败</h3><ul><li>pnpm run build:alipay 支付宝小程序中预览直接报错；但是 pnpm run dev:alipay 是正常的。 原因是编译后会生成了一个 common.acss 文件，这个文件在 app.acss 中引用, build 之后 所有的 app.acss 只有一行，@import “./common.acss”; 在这行末尾，这时就会报错。最新版支付宝小程序会有此问题，老版没有。</li><li>打开/dist/app.acss, 在最后的 @import “./common.acss”; 前加一个换行，问题解决。</li></ul><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> taro </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序（小程序A内嵌的H5跳转小程序B）</title>
      <link href="/hexo/2023/06/07/xiao-cheng-xu-xiao-cheng-xu-a-nei-qian-h5-xiao-cheng-xu-b/"/>
      <url>/hexo/2023/06/07/xiao-cheng-xu-xiao-cheng-xu-a-nei-qian-h5-xiao-cheng-xu-b/</url>
      
        <content type="html"><![CDATA[<p>实现微信小程序原生支付。步骤流程拆解：小程序 A =&gt; webview 内嵌 h5 =&gt; 从 h5 跳回到小程序 A 的中转页面 =&gt; 在小程序 A 中转页面使用 wx.navigateToMiniProgram 方法跳转到小程序 B （这时会有提示弹框打开某某小程序、是否同意）=&gt; 小程序 B 实现交互后使用 wx.navigateBackMiniProgram 方法返回小程序 A =&gt; 流程交互完毕</p><a id="more"></a><font size="3" color="red"> 难点：</font><br><font size="3" color="red"> 1.内嵌H5无法直接跳离打开第三方小程序的能力，只能小程序跳小程序（ wx.navigateToMiniProgram ）注：wx.navigateToMiniProgram 方法必须通过用户点击触发</font><br><font size="3" color="red"> 2.传参问题，必须JSON.stringify化</font><br><font size="3" color="red"> 3.小程序跳转小程序时，参数extraData需要用wx.getEnterOptionsSync()方法接收或者app.js的onLaunch接收（在页面的onLoad是接收不到的），path传递直接onload(option)接收</font><br><font size="3" color="red"> 4.小程序跳转小程序时，第二次跳转的时候，会有一个冷启动合热启动的概念，第一次小程序 A 打开 B （冷启动） 之后，B 会在后台进程挂着，下次 A 再次进入 B 时就是 （热启动）了，区别在哪呢，就是冷启动会触发 app.js 中的 onLaunch 和 wx.getLaunchOptionsSync() ，热启动不会触发了，要想获取第二次的数据只能通过 wx.getEnterOptionsSync() 获取</font><br><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/navigate/wx.navigateToMiniProgram.html">小程序详细文档（wx.navigateToMiniProgram 方法）</a> <a href="https://developers.weixin.qq.com/miniprogram/dev/api/base/app/life-cycle/wx.getEnterOptionsSync.html">（wx.getEnterOptionsSync 方法）冷启动合热启动的区别</a></p><p><font size="5" color="black">实际案例（小程序A内嵌H5创建订单跳转到小程序B支付） </font></p><h4 id="1-web-view-H5创建订单"><a href="#1-web-view-H5创建订单" class="headerlink" title="1.web-view H5创建订单"></a><strong>1.web-view H5创建订单</strong></h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 用户交互点击创建订单</span><span class="token keyword">async</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">//创建订单所需参数</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> path<span class="token punctuation">,</span> appId<span class="token punctuation">,</span> redirectUrl<span class="token punctuation">,</span> extra <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>      <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>miniPath<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//与A小程序的参数，对应</span>    <span class="token keyword">let</span> env <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>host<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> query <span class="token operator">=</span> extra <span class="token operator">?</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>extra<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> env_version <span class="token operator">=</span> env <span class="token operator">===</span> <span class="token string">"api"</span> <span class="token operator">?</span> <span class="token string">"release"</span> <span class="token operator">:</span> <span class="token string">"trial"</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> orderId <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span>platform<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取接口订单号</span>    <span class="token keyword">let</span> miniProgram <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 跳转的参数</span>      path<span class="token operator">:</span> <span class="token string">"/pages/index/index"</span><span class="token punctuation">,</span>      appId<span class="token operator">:</span> <span class="token string">"wx6726e87e4e314e04"</span><span class="token punctuation">,</span>      extraData<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        orderId<span class="token punctuation">,</span>        env<span class="token punctuation">,</span>        env_version<span class="token punctuation">,</span>        redirectUrl<span class="token punctuation">,</span>        extra<span class="token operator">:</span> query<span class="token punctuation">,</span>        appId      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      envVersion<span class="token operator">:</span> env_version    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// getParams把对象'&amp;'拼接成字符串</span>    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span>miniProgram<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>path<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span>miniProgram<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>    <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token string">"异常了，创建订单失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-小程序B-接收参数完成支付调回小程序A"><a href="#2-小程序B-接收参数完成支付调回小程序A" class="headerlink" title="2.小程序B 接收参数完成支付调回小程序A"></a><strong>2.小程序B 接收参数完成支付调回小程序A</strong></h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// onload接收参数</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> scene <span class="token punctuation">&#125;</span> <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getLaunchOptionsSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> referrerInfo <span class="token punctuation">&#125;</span> <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getEnterOptionsSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> extraData <span class="token punctuation">&#125;</span> <span class="token operator">=</span> referrerInfo  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'extraData'</span><span class="token punctuation">,</span> referrerInfo<span class="token punctuation">,</span> extraData<span class="token punctuation">,</span> scene<span class="token punctuation">)</span>  <span class="token comment">// 1037 小程序打开小程序的场景值</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>scene <span class="token operator">==</span> <span class="token number">1037</span> <span class="token operator">&amp;&amp;</span> extraData<span class="token operator">?.</span>orderId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      orderId<span class="token operator">:</span> extraData<span class="token punctuation">.</span>orderId<span class="token punctuation">,</span>      extra<span class="token operator">:</span> extraData<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCashierPay_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取登录信息，支付前置条件</span><span class="token keyword">async</span> <span class="token function">getCashierPay_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  wx<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 发送 res.code 到后台换取 sessionKey, sessionKey, unionId</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        loginData<span class="token operator">:</span> res      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>       <span class="token comment">// getOpenidAndSession_key把code给后台接口获取微信用户信息，会保存在app.js的公共数据globalData</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOpenidAndSession_key</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">return</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCashierPay_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 订单号反查微信收银台参数</span><span class="token keyword">async</span> <span class="token function">getCashierPay_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> openid <span class="token punctuation">&#125;</span> <span class="token operator">=</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>userInfo     <span class="token comment">// 后台接口订单号反查拉起微信收银台必须参数</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> code<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">getCashierPay</span><span class="token punctuation">(</span>openid<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span>     <span class="token comment">// 创建微信支付收银台的返回的参数示例</span>    <span class="token comment">// &#123;</span>    <span class="token comment">//   "code": 200,</span>    <span class="token comment">//   "msg": "SUCCESS",</span>    <span class="token comment">//   "data": &#123;</span>    <span class="token comment">//     "wxWebPayLastMoney": "0.95",</span>    <span class="token comment">//     "orderSign": "1000000125738087",</span>    <span class="token comment">//     "aliOrderData": null,</span>    <span class="token comment">//     "wxPayReqOutputI": &#123;</span>    <span class="token comment">//       "timeStamp": "1663726624",</span>    <span class="token comment">//       "murl": null,</span>    <span class="token comment">//       "packageValue": "prepay_id=wx211017040962747a197a415359bf050000",</span>    <span class="token comment">//       "appId": "wx6726e87e4e314e04",</span>    <span class="token comment">//       "sign": "L74v9v0QWF9PM8U9UUbNVB9JKTYFn60Eranlr5fP+0DVnP7XcPpvcnUyfdMQfU0AZmOJWUfQyTD/s61fPA/AxDuWyRdJSttiepPCIVoAWcf7tHoHE51o/hdKLeBI82KbDlYIn6dn18D+Ib/bSyw2GMeZdn2OrpdaJnkGIHVT0U4xPxYCEvargiX2NtAJ44dUkPY8uXIugAYXg6rU+R2Al9UgwgmaROI2P1XEAkcxo/ZgvOkFJS5DQ9rw14eNinuPlJlEMvXP0W4TsT3n10QpEtm2AM5A6gkgnxo4+G4K2k3ziJ3e7o9EOCJtiArtGOF5HnWBjrqj1lqdzC4J2qft0A==",</span>    <span class="token comment">//       "signType": "RSA",</span>    <span class="token comment">//       "partnerId": null,</span>    <span class="token comment">//       "prepayId": "wx211017040962747a197a415359bf050000",</span>    <span class="token comment">//       "nonceStr": "8e19f724c938495ba5df7d523da4c3c4"</span>    <span class="token comment">//     &#125;,</span>    <span class="token comment">//     "stationId": 21019</span>    <span class="token comment">//   &#125;</span>    <span class="token comment">// &#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        payData<span class="token operator">:</span> data<span class="token punctuation">.</span>wxPayReqOutputI<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>       <span class="token comment">// 微信支付</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wxpay_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      wx<span class="token punctuation">.</span><span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        showCancel<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        title<span class="token operator">:</span> <span class="token string">"订单查询错误"</span><span class="token punctuation">,</span>        content<span class="token operator">:</span> msg <span class="token operator">?</span> msg <span class="token operator">:</span> <span class="token string">"系统异常，解码错误"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 拉起微信收银台支付</span><span class="token keyword">async</span> <span class="token function">wxpay_2</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>   <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> timeStamp<span class="token punctuation">,</span> nonceStr<span class="token punctuation">,</span> packageValue<span class="token punctuation">,</span> sign<span class="token punctuation">,</span> signType <span class="token punctuation">&#125;</span> <span class="token operator">=</span> that<span class="token punctuation">.</span>data<span class="token punctuation">.</span>payData  <span class="token keyword">var</span> mSignType <span class="token operator">=</span> <span class="token string">"MD5"</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> redirectUrl<span class="token punctuation">,</span> appId<span class="token punctuation">,</span> extra <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>extra<span class="token punctuation">;</span>  extra<span class="token punctuation">.</span>orderId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>orderId  wx<span class="token punctuation">.</span><span class="token function">requestPayment</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    timeStamp<span class="token operator">:</span> timeStamp <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">,</span>    nonceStr<span class="token operator">:</span> nonceStr <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token keyword">package</span><span class="token operator">:</span> packageValue<span class="token punctuation">,</span>    signType<span class="token operator">:</span> mSignType<span class="token punctuation">,</span>    paySign<span class="token operator">:</span> sign <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'支付成功'</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>      <span class="token comment">// 返回对应的小程序，其实这里应该使用的是wx.navigateBackMiniProgram，不然交互体验非常差、一次流程总共出现两次提示确认弹框、提示用户即将打开小程序是否同意</span>      extra<span class="token punctuation">.</span>orderStatus <span class="token operator">=</span> <span class="token number">1</span>      wx<span class="token punctuation">.</span><span class="token function">navigateToMiniProgram</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        appId<span class="token operator">:</span> appId<span class="token punctuation">,</span>        path<span class="token operator">:</span> redirectUrl<span class="token punctuation">,</span>    　  extraData<span class="token operator">:</span> extra<span class="token punctuation">,</span>    　  envVersion<span class="token operator">:</span> <span class="token string">'trial'</span><span class="token punctuation">,</span><span class="token comment">// 打开正式版</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">//   wx.navigateBackMiniProgram(&#123;</span>      <span class="token comment">// 　  extraData: extra,</span>      <span class="token comment">//     success(res) &#123;</span>      <span class="token comment">//       console.log(res) // 打开成功    </span>      <span class="token comment">// 　　 &#125;,</span>      <span class="token comment">//   &#125;)   </span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'支付失败'</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>      <span class="token comment">// 返回对应的小程序</span>      extra<span class="token punctuation">.</span>orderStatus <span class="token operator">=</span> <span class="token number">0</span>      wx<span class="token punctuation">.</span><span class="token function">navigateToMiniProgram</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        appId<span class="token operator">:</span> appId<span class="token punctuation">,</span>        path<span class="token operator">:</span> redirectUrl<span class="token punctuation">,</span>        extraData<span class="token operator">:</span> extra<span class="token punctuation">,</span>    　  envVersion<span class="token operator">:</span> <span class="token string">'trial'</span><span class="token punctuation">,</span><span class="token comment">// 打开正式版</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode工具</title>
      <link href="/hexo/2023/06/07/kai-fa-gong-ju-vscode-guan-wang-xia-zai-man/"/>
      <url>/hexo/2023/06/07/kai-fa-gong-ju-vscode-guan-wang-xia-zai-man/</url>
      
        <content type="html"><![CDATA[<p>vscode官网下载几kb网速，太慢了，解决下载速度慢的问题</p><a id="more"></a><p>1.<a href="https://code.visualstudio.com/Download">进官网正常点击下载</a></p><p>2.浏览器下载，鼠标右键，复制出下载链 (<a href="https://az764295.vo.msecnd.net/stable/6261075646f055b99068d3688932416f2346dd3b/VSCodeUserSetup-x64-1.73.1.exe">https://az764295.vo.msecnd.net/stable/6261075646f055b99068d3688932416f2346dd3b/VSCodeUserSetup-x64-1.73.1.exe</a>)</p><p>3.更换下载链域名.  把  <font color="red">az764295.vo.msecnd.net</font> 变更成  <font color="red">vscode.cdn.azure.cn</font></p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git食用指南</title>
      <link href="/hexo/2023/06/07/shou-lu-git/"/>
      <url>/hexo/2023/06/07/shou-lu-git/</url>
      
        <content type="html"><![CDATA[<p>工作必备的管理工具，好的项目git管理肯定十分严谨。</p><a id="more"></a><h2 id="git-常用命令"><a href="#git-常用命令" class="headerlink" title="git 常用命令"></a>git 常用命令</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">git add <span class="token comment">//'文件列表' 追踪文件</span>git init <span class="token comment">//初始化git仓库</span>git status <span class="token comment">//产看文件状态</span>git commit <span class="token operator">-</span>m <span class="token comment">//'提交信息'  向仓库提交代码</span>git log 查看提交记录git checkout 文件 <span class="token comment">//用暂存区的文件覆盖工作目录中的文件</span>git rm <span class="token operator">--</span>cached 文件 <span class="token comment">//将文件从暂存区中删除</span>git rest <span class="token operator">--</span>hard commitID <span class="token comment">//（ID就是git log查看）将git仓库指定的更新记录恢复出来，并且覆盖暂存区和工作目录</span>git branch <span class="token comment">//查看文件</span>git branch <span class="token comment">//'分支名称 '创建分支</span>git checkout <span class="token comment">//'分支名称' 切换分支（分支保存提交才能转其他分支才不会出错）</span>git merge <span class="token comment">//'来源分支' 合并分支</span>git merge <span class="token operator">--</span>abort <span class="token comment">//取消合并</span>git branch <span class="token operator">-</span>d <span class="token comment">//'分支名称' 删除分支（分支被杀出后才允许删除）-D强制删除</span>git stash <span class="token comment">//存储临时改动</span>git stash pop  <span class="token comment">//恢复改动</span>git push <span class="token comment">//'远程仓库地址' 分支名称</span>git push <span class="token operator">-</span>u <span class="token comment">//'远程仓库地址' 分支名称</span>　　<span class="token operator">-</span>u <span class="token comment">//记住推送地址及分支，下次推送只需要输入 git push 即可</span>git remote add <span class="token comment">//'远程仓库地址别名' 远程仓库地址</span>git push <span class="token comment">//远程仓库地址别名 </span><span class="token comment">//克隆操作（没有本地仓库的情况下使用）</span>git clone <span class="token comment">//'远程仓库地址'</span>cd <span class="token comment">//目录名称 切换</span>git pull <span class="token comment">//远程仓库地址 分支名称</span>ssh<span class="token operator">-</span>keygen <span class="token comment">//生成密钥</span><span class="token comment">//密钥存储目录：C:\Users\用户\.ssh</span><span class="token comment">//公钥名称：id_rsa.pub (添加到git仓库)</span><span class="token comment">//密钥名称：id_rsa（保留到本机上）</span>gir add <span class="token punctuation">.</span> <span class="token comment">//表示把文件内所有内容添加到暂存区</span><span class="token punctuation">.</span>gitignore<span class="token comment">//忽略清单文件夹</span>readme<span class="token punctuation">.</span>md<span class="token comment">//仓库说明</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="拉取别人分支"><a href="#拉取别人分支" class="headerlink" title="拉取别人分支"></a>拉取别人分支</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">git pull origin <span class="token string">'dev'</span> <span class="token comment">//有时候改到公共部分，我们的分支需要先拉取别人的东西</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="回退远程仓库的提交"><a href="#回退远程仓库的提交" class="headerlink" title="回退远程仓库的提交"></a>回退远程仓库的提交</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">git reset <span class="token operator">--</span>hard <span class="token operator">&lt;</span>version<span class="token operator">></span>版本号 <span class="token comment">//这种方法回退不会有历史记录，慎用</span>git reset <span class="token operator">--</span>hard <span class="token constant">HEAD</span><span class="token operator">~</span><span class="token number">2</span>    <span class="token comment">//回退前2次提交</span>git push origin dev<span class="token operator">-</span>lmq <span class="token operator">-</span>f  <span class="token comment">//（dev-lmq）是你的分支名，记得 -f 慎用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="改代码忘记切换分支咋办"><a href="#改代码忘记切换分支咋办" class="headerlink" title="改代码忘记切换分支咋办"></a>改代码忘记切换分支咋办</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">git stash  <span class="token comment">//保存代码到本地</span>git checkout dev  <span class="token comment">//切换到dev分支</span>git stash apply  <span class="token comment">//将刚才改动的代码拿出来</span>git stash pop  <span class="token comment">//命令也是一样的</span><span class="token comment">// 区别 pop 会删除栈里面数据 apply 会保留数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">git stash list  <span class="token comment">//这个可以查看本地栈中所有的保存代码</span>git stash apply stash@<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">&#125;</span>  <span class="token comment">//克隆某次本地保存的改动</span><span class="token comment">//举例：git stash apply 0或者git stash pop 0</span>git stash drop   <span class="token comment">//删除本地保存</span>git stash clear  <span class="token comment">//清空所有本地保存</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS妙招</title>
      <link href="/hexo/2023/06/07/shou-lu-css-xiao-guo-shi-xian/"/>
      <url>/hexo/2023/06/07/shou-lu-css-xiao-guo-shi-xian/</url>
      
        <content type="html"><![CDATA[<p>CSS骚操作，拒绝调教</p><a id="more"></a><p><font color="#08c">元素宽度自适应大小，超出父元素宽度隐藏，不够展示也隐藏</font></p><blockquote><p>CSS 单行隐藏溢出元素（正常使用 overflow:hideen 会出现一种尴尬的场面，元素展示了一半，需要利用弹性布局来完美实现）</p></blockquote><p><img src="http://linmingqi.top/img/%E6%8D%A2%E8%A1%8C%E6%95%88%E6%9E%9C%E5%89%8D.png"></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.tag</span> <span class="token punctuation">&#123;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://linmingqi.top/img/%E6%8D%A2%E8%A1%8C%E6%95%88%E6%9E%9C%E5%90%8E.png"></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.tag</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>  <span class="token property">max-height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#08c">flex布局（局部滚动）</font></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;!-- 除去页面默认属性 -->body,html</span><span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">&#125;</span><span class="token selector">&lt;!-- 页面容器 -->.big_div</span><span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">&lt;!-- 滚动div -->.small_div</span><span class="token punctuation">&#123;</span>    <span class="token property">flex</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    &lt;!-- 200px是容器里面其他元素的总高度，不需要头置顶尾置底的，不需要加 -->    <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100vh-200px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#08c">排除第一个标签元素</font></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>first-child<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color="#08c">排除最后一个标签元素</font></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color="#08c">高度自动撑开，保持跟父元素高度一致</font></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span><span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color="#08c">镂空效果</font></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.mask-box</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 1px 1px 1px 1500px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 1.2rem<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #ff7326<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 10.3rem<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 8.9rem<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 19.8rem<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 11.4rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#08c">进度条</font></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.schedule</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 29.1rem<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 2.3rem<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> 11rem<span class="token selector">;     span</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 29.1rem<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 2.3rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">div</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 2.3rem<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>90deg<span class="token punctuation">,</span> #fff4c6 0%<span class="token punctuation">,</span> #ffb424 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#08c">文本框图标</font></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">input</span><span class="token punctuation">&#123;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>//文本框去除效果    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>//背景图标    <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token punctuation">;</span>大小    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>不重复    <span class="token property">background-position</span><span class="token punctuation">:</span> <span class="token punctuation">;</span>定位到合适的位置    <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token punctuation">;</span>//输入字体开始位置，之前有个图标所以要在图标之后    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token punctuation">;</span>//输入字体，和文本框对比，美观一些<span class="token property">　　background-color</span><span class="token punctuation">:</span> <span class="token punctuation">;</span>//背景色和图片颜色同时显示，这里写要显示的背景色<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> 收录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2 + vant2.0登录功能模块</title>
      <link href="/hexo/2023/06/07/gong-neng-mo-kuai-vue2-vant2.0-deng-lu-dan-kuang/"/>
      <url>/hexo/2023/06/07/gong-neng-mo-kuai-vue2-vant2.0-deng-lu-dan-kuang/</url>
      
        <content type="html"><![CDATA[<p>vue2.0 + vant2.0(button按钮、Totast轻提示) 实现登录获取验证码, 验证码60s倒计时，手机合规校验，验证码校验</p><a id="more"></a><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ensd__login flex__center__center<span class="token punctuation">"</span></span>    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show = false<span class="token punctuation">"</span></span>    <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ensd__login__content flex__column-center__center<span class="token punctuation">"</span></span> <span class="token attr-name">@click.stop</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ensd__login__title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登 录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ensd__login__box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>          <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span>          <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[0-9]*<span class="token punctuation">"</span></span>          <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>11<span class="token punctuation">"</span></span>          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tell<span class="token punctuation">"</span></span>          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入手机号码<span class="token punctuation">"</span></span>          <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[            <span class="token punctuation">'</span>ensd__login__input<span class="token punctuation">'</span>,            focus === <span class="token punctuation">'</span>phone<span class="token punctuation">'</span> &amp;&amp; <span class="token punctuation">'</span>ensd__login__input2<span class="token punctuation">'</span>          ]<span class="token punctuation">"</span></span>          <span class="token attr-name">@focus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus = <span class="token punctuation">'</span>phone<span class="token punctuation">'</span><span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ensd__login__icon<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone = <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ensdIconsvg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ensd__login__box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>          <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>          <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[0-9]*<span class="token punctuation">"</span></span>          <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span>          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tell<span class="token punctuation">"</span></span>          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入验证码<span class="token punctuation">"</span></span>          <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[            <span class="token punctuation">'</span>ensd__login__input<span class="token punctuation">'</span>,            focus === <span class="token punctuation">'</span>code<span class="token punctuation">'</span> &amp;&amp; <span class="token punctuation">'</span>ensd__login__input2<span class="token punctuation">'</span>          ]<span class="token punctuation">"</span></span>          <span class="token attr-name">@focus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus = <span class="token punctuation">'</span>code<span class="token punctuation">'</span><span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>          <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[            <span class="token punctuation">'</span>ensd__login__code<span class="token punctuation">'</span>,            <span class="token punctuation">'</span>flex__center__center<span class="token punctuation">'</span>,            code_btn &amp;&amp; <span class="token punctuation">'</span>ensd__login__code2<span class="token punctuation">'</span>          ]<span class="token punctuation">"</span></span>          <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getPhoneCode<span class="token punctuation">"</span></span>        <span class="token punctuation">></span></span>          &#123;&#123; code_text &#125;&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ensd__login__line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span>        <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span>        <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[          <span class="token punctuation">'</span>ensd__login__btn<span class="token punctuation">'</span>,          <span class="token punctuation">'</span>flex__center__center<span class="token punctuation">'</span>,          login_btn &amp;&amp; <span class="token punctuation">'</span>ensd__login__btn2<span class="token punctuation">'</span>        ]<span class="token punctuation">"</span></span>        <span class="token attr-name">loading-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spinner<span class="token punctuation">"</span></span>        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span>        <span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span>      <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> ensdIconsvg <span class="token keyword">from</span> <span class="token string">"@/components/iconsvg"</span><span class="token punctuation">;</span><span class="token keyword">import</span> api <span class="token keyword">from</span> <span class="token string">"@/api"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Toast <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vant"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vant"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> osType <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/utils/index"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> localStorage <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/utils/localStorage"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    ensdIconsvg<span class="token punctuation">,</span>    <span class="token punctuation">[</span>Button<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token operator">:</span> Button  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">phone</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1][3,4,5,6,7,8,9][0-9]&#123;9&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token string">"手机号错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">code</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token string">"验证码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      show<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      phone<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>      code<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>      count<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>      timer<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>      flag<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      focus<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取验证码</span>    <span class="token keyword">async</span> <span class="token function">getPhoneCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>code_btn<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> code <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span>login<span class="token punctuation">.</span><span class="token function">getNoteForLogin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          phone<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>phone        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>              <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 登录按钮</span>    <span class="token keyword">async</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>login_btn<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">apiFn</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            phone<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>phone<span class="token punctuation">,</span>            smsCode<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          localStorage<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 外部调用open方法传入箭头函数，实现登录之后的操作，默认是刷新页面，可以在指定的路由路径做对应的相关操作（作为回调函数传入）</span>    <span class="token function">open</span><span class="token punctuation">(</span><span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取是否禁用</span>    <span class="token function">code_btn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1][3,4,5,6,7,8,9][0-9]&#123;9&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phone<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">&amp;&amp;</span>        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>loading        <span class="token operator">?</span> <span class="token boolean">true</span>        <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 获取按钮文本</span>    <span class="token function">code_text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">重新发送(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">获取验证码</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 登录是否禁用</span>    <span class="token function">login_btn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1][3,4,5,6,7,8,9][0-9]&#123;9&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phone<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>        <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">6</span>        <span class="token operator">?</span> <span class="token boolean">true</span>        <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 登录按钮文字</span>    <span class="token function">login_text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"登录"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">::-webkit-input-placeholder</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Regular<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #cccccc<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ensd__login</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.7<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 999<span class="token selector">;  &amp;__content</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 320px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 16px 0<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__title</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Medium<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #333333<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__box</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__icon</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__code</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 87px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 87px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 11px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Regular<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #cccccc<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">border-left</span><span class="token punctuation">:</span> 1px solid #dcdee0<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__code2</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #337aff<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__input</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 271px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #dcdee0<span class="token punctuation">;</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Regular<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #333333<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__input2</span> <span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px #ff681c solid<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__line</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 271px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0px 1px 0px 0px #f2f5f7<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__btn</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 271px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>90deg<span class="token punctuation">,</span> #ff8e56 0%<span class="token punctuation">,</span> #ff6034 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.3<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Medium<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;__btn2</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2 + vant2.0 弹窗确认实现异步loading 组件</title>
      <link href="/hexo/2023/06/07/gong-neng-mo-kuai-vue2-vant2.0-dan-chuang-que-ren-yi-bu-loading/"/>
      <url>/hexo/2023/06/07/gong-neng-mo-kuai-vue2-vant2.0-dan-chuang-que-ren-yi-bu-loading/</url>
      
        <content type="html"><![CDATA[<p>业务组件: 查询到用户有待支付订单，弹窗（取消订单、继续支付）两个异步事件，实现弹窗按钮loading效果</p><a id="more"></a><p>1、取消按钮：<br>按钮loading —— 接口请求成功 —— 取消loading关闭弹窗<br>按钮loading —— 接口请求失败（网络等各种原因） —— 取消loading<br>按钮loading —— 接口请求业务异常 —— 取消loading关闭弹窗 执行业务异常动作</p><p>2、继续按钮：<br>按钮loading —— 接口请求成功 —— 取消loading关闭弹窗拉起对应支付动作<br>按钮loading —— 接口请求失败（网络等各种原因） —— 取消loading<br>按钮loading —— 接口请求业务异常 —— 取消loading关闭弹窗 执行业务异常动作</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ensd-eplus__wait flex__column-center__center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-dialog</span>      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show<span class="token punctuation">"</span></span>      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>      <span class="token attr-name">:show-cancel-button</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>      <span class="token attr-name">:show-confirm-button</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex__column-center__center ensd-eplus__wait-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &#123;&#123; title &#125;&#125;      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex__column-center__center ensd-eplus__wait-money<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ￥&#123;&#123; money &#125;&#125;      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex__column-center__center ensd-eplus__wait-vip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &#123;&#123; sayText &#125;&#125;      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex__between<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span>          <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cancelClick<span class="token punctuation">"</span></span>          <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cancelLoading<span class="token punctuation">"</span></span>          <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex__column-center__center ensd-eplus__wait-btn ensd-eplus__wait-left<span class="token punctuation">"</span></span>          <span class="token punctuation">></span></span>取消订单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span>        <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span>          <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>confirmClick<span class="token punctuation">"</span></span>          <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>          <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>confirmLoaidng<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex__column-center__center ensd-eplus__wait-btn ensd-eplus__wait-right<span class="token punctuation">"</span></span>          <span class="token punctuation">></span></span>继续支付<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span>        <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-dialog</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Dialog<span class="token punctuation">,</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vant"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">[</span>Dialog<span class="token punctuation">.</span>Component<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token operator">:</span> Dialog<span class="token punctuation">.</span>Component<span class="token punctuation">,</span>    <span class="token punctuation">[</span>Button<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token operator">:</span> Button  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    waitPayFlag<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    title<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"您有一笔待支付订单待处理"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    money<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> <span class="token punctuation">[</span>String<span class="token punctuation">,</span> Number<span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"22.99"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    sayText<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"易plus会员 | 1个月"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    confirmEvent<span class="token operator">:</span> Function<span class="token punctuation">,</span>    cancelEvent<span class="token operator">:</span> Function  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      show<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      cancelLoading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      confirmLoaidng<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      disabled<span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    waitPayFlag<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token string">"====弹框展示==="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> val<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cancelLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>confirmLoaidng <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      immediate<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  model<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    prop<span class="token operator">:</span> <span class="token string">"waitPayFlag"</span><span class="token punctuation">,</span>    event<span class="token operator">:</span> <span class="token string">"change"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">changeWaitPayFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token keyword">async</span> <span class="token function">cancelClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cancelLoading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> flag <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cancelEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"waitPayBox组件取消事件promise成功接收:"</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         这里有三种情况：        1、接口异常失败、按钮loading、不关闭弹框        2、接口返回订单已经不是待支付、按钮loading、关闭弹框        3、接口请求成功、按钮loading、关闭弹框        注：后端code码不规范、无法做到第二种、所以全部默认 （接口不论成功失败、loading按钮、关闭弹框）        */</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>cancelLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>cancelLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cancelLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token keyword">async</span> <span class="token function">confirmClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>confirmLoaidng <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> flag <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">confirmEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"waitPayBox组件确认事件promise成功接收:"</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>confirmLoaidng <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>confirmLoaidng <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>confirmLoaidng <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.ensd-eplus__wait</span> <span class="token punctuation">&#123;</span>  <span class="token selector">&amp;-title</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Medium<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #333333<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;-money</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 36px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> MiSans-Medium<span class="token punctuation">,</span> MiSans<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #333333<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;-vip</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Regular<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #666666<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;-btn</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0px 0px 0px 8px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;-left</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Regular<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #666666<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">&amp;-right</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Regular<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ff681c<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校验正则、方法</title>
      <link href="/hexo/2023/06/07/quan-ju-xiao-yan-zheng-ze-fang-fa/"/>
      <url>/hexo/2023/06/07/quan-ju-xiao-yan-zheng-ze-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>input框常用，表单校验常用，列举一些实用复用性高的正则表达式和一些校验方法</p><a id="more"></a><h2 id="正则"><a href="#正则" class="headerlink" title="正则"></a><strong>正则</strong></h2><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">.test(&#39;变量&#39;)： const passwordFormat &#x3D; &#x2F;^[^\u4E00-\u9FA5\uF900-\uFA2D\u0020]&#123;8,16&#125;$&#x2F;; &#x2F;&#x2F;限制中文和空格及长度范围8-16 const regExpNumber &#x3D; new RegExp(&quot;^[0-9]*$&quot;); &#x2F;&#x2F;校验数字类型 const passwordZaZ0 &#x3D; new RegExp(&quot;(?&#x3D;.*[0-9])(?&#x3D;.*[a-zA-Z])(?&#x3D;.*[^a-zA-Z0-9]).&#123;6,18&#125;&quot;); &#x2F;&#x2F;数字+字母+特殊字符 const regExpNumber &#x3D; new RegExp(&quot;^[0-9]*$&quot;); &#x2F;&#x2F;校验数字类型 const isExternal &#x3D; &#x2F;^(https?:|mailto:|tel:)&#x2F;; &#x2F;&#x2F;判断是否是外链<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h2><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;&#x2F; 去空格两边空格export const trim &#x3D; (str) &#x3D;&gt; &#123;  &#x2F;&#x2F; 不等于字符串就返回原值  if (typeof str !&#x3D;&#x3D; &quot;string&quot;) return str;  return str.replace(&#x2F;^\s*|\s*$&#x2F;g, &quot;&quot;);&#125;;&#x2F;** * 密码校验 * @param &#123;Object&#125; rule 校验的默认值 * @param &#123;string&#125; value 校验的默认值 * @returns &#123;Promise&#125; *&#x2F;export const verifyPassword &#x3D; (rule, value) &#x3D;&gt; &#123;  if (!trim(value)) &#123;    return Promise.reject(&quot;请输入密码&quot;);  &#125; else if (!passwordFormat.test(value)) &#123;    return Promise.reject(TIPS.IS_PASSWORD);  &#125;  return Promise.resolve();&#125;;&#x2F;** * 校验名称在2-20字符 * @param &#123;boolean&#125; bool true：必填 false：非必填 * @returns &#123;Promise&#125; *&#x2F;export const verifyName &#x3D; (bool &#x3D; false, hint &#x3D; &quot;该值必填&quot;) &#x3D;&gt; &#123;  return (rule, value) &#x3D;&gt; &#123;    value &#x3D; trim(value);    if (!value &amp;&amp; bool) &#123;      return Promise.reject(hint);    &#125; else if (value &amp;&amp; (2 &gt; value.length || value.length &gt; 20)) &#123;      return Promise.reject(TIPS.IS_NAME);    &#125;    return Promise.resolve();  &#125;;&#125;;&#x2F;** * 备注长度 限制在 64个字符内 * @param &#123;Object&#125; rule 校验的默认值 * @param &#123;string&#125; value 校验的默认值 * @returns &#123;Promise&#125; *&#x2F;export const remarkLength &#x3D; (rule, value) &#x3D;&gt; &#123;  value &#x3D; trim(value);  if (value &amp;&amp; value.length &gt; 64) &#123;    return Promise.reject(TIPS.IS_REMARK);  &#125;  return Promise.resolve();&#125;;&#x2F;&#x2F; 校验英文export const verifyEN &#x3D; (rule, value) &#x3D;&gt; &#123;  const regExp &#x3D; &#x2F;^[A-Za-z][A-Za-z_0-9]+$&#x2F;;  if (!value) &#123;    return Promise.reject(TIPS.IS_EMPTY);  &#125;  if (!regExp.test(value)) &#123;    return Promise.reject(TIPS.IS_EN);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;&#x2F;&#x2F; 校验中文export const verifyCN &#x3D; (rule, value) &#x3D;&gt; &#123;  const regExp &#x3D; &#x2F;^[\u4E00-\u9FA5]+$&#x2F;;  if (!value) &#123;    return Promise.reject(TIPS.IS_EMPTY);  &#125;  if (!regExp.test(value)) &#123;    return Promise.reject(TIPS.IS_CN);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;&#x2F;** * 手机号验证 * @param &#123;Object&#125; rule 校验的默认值 * @param &#123;string&#125; value 校验的默认值 * @returns &#123;Promise&#125; *&#x2F;export const verifyPhone &#x3D; (rule, value) &#x3D;&gt; &#123;  let regFormat &#x3D; &#x2F;^1[3456789]\d&#123;9&#125;$&#x2F;; &#x2F;&#x2F;正确手机号  value &#x3D; trim(value);  if (!value) &#123;    return Promise.reject(&quot;请输入手机号码&quot;);  &#125;  if (!regFormat.test(value)) &#123;    return Promise.reject(&quot;请输入正确手机号&quot;);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;&#x2F;&#x2F;数字验证export const verifyNumber &#x3D; (rule, value) &#x3D;&gt; &#123;  if (!value) &#123;    return Promise.reject(TIPS.IS_EMPTY);  &#125;  if (!Number.isInteger(value)) &#123;    return Promise.reject(TIPS.IS_NUMB);  &#125; else &#123;    if (value &lt; 18) &#123;      return Promise.reject(&quot;必须大于18岁&quot;);    &#125; else if (value &gt; 55) &#123;      return Promise.reject(&quot;必须小于55岁&quot;);    &#125; else &#123;      return Promise.resolve();    &#125;  &#125;&#125;;&#x2F;&#x2F; 判断是否数字export const isNum &#x3D; (value) &#x3D;&gt; &#123;  let regFormat &#x3D; &#x2F;^\d+(\.\d+)?$&#x2F;;  if (value !&#x3D;&#x3D; &quot;&quot; &amp;&amp; !regFormat.test(String(value))) &#123;    return false;  &#125;  return true;&#125;;&#x2F;&#x2F; 数字校验export const verifyNum &#x3D; (bool &#x3D; false, hint &#x3D; TIPS.IS_NUMB) &#x3D;&gt; &#123;  return (rule, value) &#x3D;&gt; &#123;    &#x2F;&#x2F; 只能输入数字    if (!value &amp;&amp; value !&#x3D; 0 &amp;&amp; bool) &#123;      return Promise.reject(hint);    &#125; else if (!isNum(value)) &#123;      return Promise.reject(hint);    &#125;    return Promise.resolve();  &#125;;&#125;;&#x2F;&#x2F;邮箱export const verifyEmail &#x3D; (rule, value) &#x3D;&gt; &#123;  let mal &#x3D; &#x2F;^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]&#123;2,4&#125;)+$&#x2F;;  if (!value) &#123;    return Promise.reject(TIPS.IS_EMPTY);  &#125;  if (!mal.test(value)) &#123;    return Promise.reject(TIPS.IS_EMAIL);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;&#x2F;&#x2F;QQ号码验证export const verifyQQV &#x3D; (rule, value) &#x3D;&gt; &#123;  if (value &#x3D;&#x3D;&#x3D; &quot;&quot;) &#123;    return Promise.reject(&quot;输入QQ号&quot;);  &#125; else if (&#x2F;^[1-9][0-9]&#123;4,10&#125;$&#x2F;.test(value)) &#123;    return Promise.resolve();  &#125; else &#123;    return Promise.reject(&quot;输入正确的QQ号&quot;);  &#125;&#125;;&#x2F;&#x2F; 类似金钱,首位不为0,最多2位小数export const verifyCheckNumPot2 &#x3D; (rule, value) &#x3D;&gt; &#123;  const reg &#x3D; &#x2F;(^[1-9]([0-9]+)?(\.[0-9]&#123;1,2&#125;)?$)|(^(0)&#123;1&#125;$)|(^[0-9]\.[0-9]([0-9])?$)&#x2F;;  if (!value) &#123;    return Promise.reject(TIPS.IS_EMPTY);  &#125; else if (!reg.test(value)) &#123;    return Promise.reject(&quot;请填写数字,最多2位小数&quot;);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;&#x2F;&#x2F; 身份证export const verifyCheckIdNum &#x3D; (rule, value) &#x3D;&gt; &#123;  const reg &#x3D; &#x2F;(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)&#x2F;;  if (!value) &#123;    return Promise.reject(&quot;证件号码不能为空&quot;);  &#125; else if (!reg.test(value)) &#123;    return Promise.reject(&quot;证件号码不正确&quot;);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;&#x2F;&#x2F; 整数export const verifyCheckInterNum &#x3D; (rule, value) &#x3D;&gt; &#123;  const reg &#x3D; &#x2F;^[0-9]*[1-9][0-9]*$&#x2F;;  if (!value) &#123;    return Promise.reject(TIPS.IS_EMPTY);  &#125; else if (!reg.test(value)) &#123;    return Promise.reject(TIPS.IS_INTEGER);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;&#x2F;&#x2F; 只支持数字和小数点（小数点后最多1位，20字以内）export const regMoney &#x3D; &#x2F;^([1-9]\d&#123;0,9&#125;|0)(\.\d&#123;1&#125;)?$&#x2F;;export const verifyMoney &#x3D; (rule, value) &#x3D;&gt; &#123;  if (!regMoney.test(value)) &#123;    return Promise.reject(TIPS.IS_MONEY);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;&#x2F;&#x2F; 校验省市区export const verifyAddress &#x3D; (rule, value) &#x3D;&gt; &#123;  if (rule.field &#x3D;&#x3D; &quot;provinceId&quot; &amp;&amp; !value) &#123;    return Promise.reject(&quot;请选择省份&quot;);  &#125; else if (rule.field &#x3D;&#x3D; &quot;cityId&quot; &amp;&amp; !value) &#123;    return Promise.reject(&quot;请选择城市&quot;);  &#125; else if (rule.field &#x3D;&#x3D; &quot;areaId&quot; &amp;&amp; !value) &#123;    return Promise.reject(&quot;请选择区&quot;);  &#125; else &#123;    return Promise.resolve();  &#125;&#125;;export const trim &#x3D; (str) &#x3D;&gt; &#123;  &#x2F;&#x2F; 不等于字符串就返回原值  if (typeof str !&#x3D;&#x3D; &quot;string&quot;) return str;  return str.replace(&#x2F;^\s*|\s*$&#x2F;g, &quot;&quot;);&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->    ]]></content>
      
      
      <categories>
          
          <category> 函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 全局函数 </tag>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>URL获取参数</title>
      <link href="/hexo/2023/06/07/quan-ju-huo-qu-url-pin-can/"/>
      <url>/hexo/2023/06/07/quan-ju-huo-qu-url-pin-can/</url>
      
        <content type="html"><![CDATA[<p>url 拼接参数的时候，页面需要获取地址栏上的参数</p><a id="more"></a><h4 id="1-获取-url-后面-拼接的参数（会自动解码）"><a href="#1-获取-url-后面-拼接的参数（会自动解码）" class="headerlink" title="1.获取 url 后面?拼接的参数（会自动解码）"></a>1.获取 url 后面?拼接的参数（会自动解码）</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * 获取url上的指定属性的值 * @param &#123;String&#125; name 属性名称 * @param &#123;String&#125; url 指定或者当前页面地址 */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getUrlParam</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> url <span class="token operator">=</span> location<span class="token punctuation">.</span>href</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">'(^|&amp;)'</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'=([^&amp;#]*)(&amp;|#|$)'</span><span class="token punctuation">,</span> <span class="token string">'i'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span> <span class="token comment">// 获取地址"?"符后的字符串并正则匹配</span>  <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token string">''</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    context <span class="token operator">=</span> r<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  reg <span class="token operator">=</span> <span class="token keyword">null</span>  r <span class="token operator">=</span> <span class="token keyword">null</span>  <span class="token keyword">return</span> context <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token string">''</span> <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token string">'undefined'</span>    <span class="token operator">?</span> <span class="token string">''</span>    <span class="token operator">:</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// url地址：www.baidu.com?token=404</span><span class="token function">getUrlParam</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span> <span class="token comment">//输出404</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-对象拆分成字符串（用’-amp-’隔开）"><a href="#2-对象拆分成字符串（用’-amp-’隔开）" class="headerlink" title="2.对象拆分成字符串（用’&amp;’隔开）"></a>2.对象拆分成字符串（用’&amp;’隔开）</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//用&amp;拼接对象成字符串</span><span class="token keyword">function</span> <span class="token function">getParams</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> paramStr <span class="token operator">=</span> <span class="token string">''</span>  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>paramStr <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      paramStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>params<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      paramStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>paramStr<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>params<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>paramStr<span class="token punctuation">)</span>  <span class="token keyword">return</span> paramStr<span class="token punctuation">&#125;</span><span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token function">getParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token comment">//输出：a=1&amp;b=2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-获取url上的参数拆分为对象"><a href="#3-获取url上的参数拆分为对象" class="headerlink" title="3.获取url上的参数拆分为对象"></a>3.获取url上的参数拆分为对象</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getParams</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> temp1 <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> pram <span class="token operator">=</span> temp1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> keyValue <span class="token operator">=</span> pram<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keyValue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> item <span class="token operator">=</span> keyValue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span>      <span class="token keyword">var</span> key <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>      <span class="token keyword">var</span> value <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>      obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> obj<span class="token punctuation">&#125;</span><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">'qwe?www=111&amp;qqq=222'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getParams</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//&#123;www: "111", qqq: "222"&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 全局函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>execl文件流读取</title>
      <link href="/hexo/2023/06/07/er-jin-zhi-execl-wen-jian-liu-du-qu/"/>
      <url>/hexo/2023/06/07/er-jin-zhi-execl-wen-jian-liu-du-qu/</url>
      
        <content type="html"><![CDATA[<p>execl二进制文件流读取；本地execl读取数据</p><a id="more"></a><h2 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">npm install xlsxnpm run axios<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-先用axios获取xlsx二进制数据，再转成html"><a href="#2-先用axios获取xlsx二进制数据，再转成html" class="headerlink" title="2.先用axios获取xlsx二进制数据，再转成html"></a>2.先用axios获取xlsx二进制数据，再转成html</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> xlsxStyle <span class="token keyword">from</span> <span class="token string">'./xlsxStyle'</span><span class="token punctuation">;</span><span class="token comment">//  html 样式标，见下方</span><span class="token keyword">const</span> <span class="token function-variable function">xlsx2html</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> responseType<span class="token operator">:</span> <span class="token string">'arraybuffer'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> type<span class="token operator">:</span> <span class="token string">'array'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> html <span class="token operator">=</span> template<span class="token punctuation">;</span>  <span class="token keyword">let</span> nav <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> sheetName <span class="token keyword">in</span> workbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>sheetName<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> sheetHtml <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_html</span><span class="token punctuation">(</span>sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>      html <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div id="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sheetName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">">          &lt;div class="title"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sheetName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>          </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sheetHtml<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;table>[\s\S]*&lt;\/table></span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'&lt;table>'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;table id = "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sheetName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">        &lt;/div>      </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>      nav <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;a href="#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sheetName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sheetName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/a></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;nav id="nav"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>nav<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/nav></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>html<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">xlsx2html</span><span class="token punctuation">(</span><span class="token string">'http://6c8b8fa4d995353581176d6fe667a993.lanprp.sz.yontoys.com:898/api/v2/file/read?file_hash=a84aec324c9f4b6eb3b9c3e64c8d75c1&amp;token=f24970fc9f70c81e89810d2c78432dfe'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-xlsxStyle-自定义样式表"><a href="#3-xlsxStyle-自定义样式表" class="headerlink" title="3.xlsxStyle 自定义样式表"></a>3.xlsxStyle 自定义样式表</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;style type="text/css">  html,  body &#123;    margin: 0;    padding: 0;  &#125;  body &#123;    padding-bottom: 100px;  &#125;  #nav &#123;    position: fixed;    bottom: 0;    border-top: 1px solid #cbcbcb;    left: 0;    line-height: 50px;    background: #fff;    width: 100vw;    overflow-x: auto;  &#125;  a &#123;    text-decoration: none;    margin-left: 20px;  &#125;  .title &#123;    font-size: 30px;    font-weight: bold;    padding-left: 20px;    height: 50px;    line-height: 50px;  &#125;  table &#123;    width: 100vw;    height: 100vh;    overflow: auto;    border-collapse: collapse;    border-spacing: 0;  &#125;  td,  th &#123;    padding: 0;  &#125;  table &#123;    border-collapse: collapse;    border-spacing: 0;    empty-cells: show;    border: 1px solid #cbcbcb;  &#125;  table caption &#123;    color: #000;    font: italic 85%/1 arial, sans-serif;    padding: 1em 0;    text-align: center;  &#125;  table td,  table th &#123;    border-left: 1px solid #cbcbcb;    border-bottom: 1px solid #cbcbcb;    font-size: inherit;    margin: 0;    overflow: visible;    padding: 0.5em 1em;  &#125;  table thead &#123;    background-color: #e0e0e0;    color: #000;    text-align: left;    vertical-align: bottom;  &#125;  table td &#123;    background-color: transparent;  &#125;&lt;/style></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload上传器</title>
      <link href="/hexo/2023/06/07/er-jin-zhi-upload-shang-chuan-qi/"/>
      <url>/hexo/2023/06/07/er-jin-zhi-upload-shang-chuan-qi/</url>
      
        <content type="html"><![CDATA[<p>上传图片限制宽高、大小；上传execl解析数据</p><a id="more"></a><h2 id="图片自定义上传（限制宽高、大小）"><a href="#图片自定义上传（限制宽高、大小）" class="headerlink" title="图片自定义上传（限制宽高、大小）"></a>图片自定义上传（限制宽高、大小）</h2><p><font color="#08c" size="3">引用element组件</font></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 单个图片上传，重新上传覆盖已有 --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-upload</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploadImg<span class="token punctuation">"</span></span> <span class="token attr-name">:show-file-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-demo<span class="token punctuation">"</span></span> <span class="token attr-name">:list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">:http-request</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploadFile<span class="token punctuation">"</span></span> <span class="token attr-name">:before-upload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>beforeUpload<span class="token punctuation">"</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.jpg, .png, .gif<span class="token punctuation">"</span></span> <span class="token attr-name">list-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-icon</span> <span class="token attr-name">v-else</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar-uploader-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plus</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-icon</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#tip</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>el-upload__tip<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>宽度750，高度不限，大小不得超过1M<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-upload</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><font color="#08c" size="3">封装一个校验图片像素的方法</font><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * 判断图片大小 * @param &#123;二进制文件&#125; file 图片二进制流 * @param &#123;Number&#125; width 图片像素宽度 * @param &#123;Number&#125; height 图片像素高度 * @param &#123;Number&#125; size 图片内存大小 * @param &#123;Array&#125; pass 上传文件格式 * @param &#123;String&#125; msg 提示文案 */</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ElMessage <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'element-plus'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">imgSize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> size<span class="token punctuation">,</span> pass<span class="token punctuation">,</span> msg</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> extension <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> size1 <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span> <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitURL<span class="token punctuation">;</span>    <span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 图片比例校验</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>width<span class="token punctuation">,</span> img<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>pass<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>size1 <span class="token operator">></span> size<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>width <span class="token operator">==</span> width <span class="token operator">||</span> width <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>height <span class="token operator">==</span> height <span class="token operator">||</span> height <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span>ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'上传成功'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">reject</span><span class="token punctuation">(</span>ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">上传宽度</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>width <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">'不限'</span> <span class="token operator">:</span> height<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">、高度</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>height <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">'不限'</span> <span class="token operator">:</span> height<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">的图片</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token function">reject</span><span class="token punctuation">(</span>ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">文件不能超过</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>size<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>size <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">'M'</span> <span class="token operator">:</span> <span class="token string">'K'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">reject</span><span class="token punctuation">(</span>ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'文件格式不正确'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    img<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><font color="#08c" size="3">文件上传的方法使用</font><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 上传之前校验</span><span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">imgSize</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'jpg'</span><span class="token punctuation">,</span> <span class="token string">'png'</span><span class="token punctuation">,</span> <span class="token string">'gif'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'特殊提示'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 上传</span><span class="token keyword">const</span> <span class="token function-variable function">uploadFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> file <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    img<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 这里是接口post请求,'Content-Type': 'multipart/form-data',</span>    <span class="token function">upLoadImgApi</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 上传图片的接口（一般不支持判断图片像素，支持更省事）</span><span class="token keyword">const</span> <span class="token function-variable function">upLoadImgApi</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">img</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    api    <span class="token punctuation">.</span><span class="token function">postUpload</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">activity/file/service/uploadImg</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        consoel<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h2 id="execl本地上传解析数据"><a href="#execl本地上传解析数据" class="headerlink" title="execl本地上传解析数据"></a>execl本地上传解析数据</h2><p><font color="#08c" size="3">这里记得用on-change，不然报<font color="red" size="3">parameter 1 is not of type ‘Blob‘.“</font>错误</font><br><font color="#08c" size="3">注：upload上传组件我需要的是file二进制文件，被封装一层导致文件格式报错</font></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-upload</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-demo<span class="token punctuation">"</span></span> <span class="token attr-name">:on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploadExcel<span class="token punctuation">"</span></span> <span class="token attr-name">:show-file-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">:auto-upload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上传execl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-upload</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">XLSX</span> <span class="token keyword">from</span> <span class="token string">'xlsx'</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">readWorkbookFromLocalFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>    <span class="token keyword">const</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> <span class="token string">'binary'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">callback</span><span class="token punctuation">(</span>workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  reader<span class="token punctuation">.</span><span class="token function">readAsBinaryString</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>raw<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">readWorkbook</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">workbook</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'执行readWorkbook'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> sheetNames <span class="token operator">=</span> workbook<span class="token punctuation">.</span>SheetNames<span class="token punctuation">;</span> <span class="token comment">// 工作表名称集合</span>  <span class="token keyword">const</span> worksheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>sheetNames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 这里我们只读取第一张sheet</span>  <span class="token keyword">const</span> csv <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_csv</span><span class="token punctuation">(</span>worksheet<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> excelArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  csv<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> one <span class="token keyword">of</span> csv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> arr <span class="token operator">=</span> one<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 就是获取数据的加工</span>    <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">&#123;</span> stationId<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> stationName<span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    item<span class="token punctuation">.</span>stationId <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    item<span class="token punctuation">.</span>stationName <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    excelArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>excelArr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">uploadExcel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> f <span class="token operator">=</span> file<span class="token punctuation">;</span>  <span class="token keyword">const</span> extension <span class="token operator">=</span> f<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token string">'xlsx'</span><span class="token punctuation">,</span> <span class="token string">'xls'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'仅支持读取xlsx,xls格式！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">readWorkbookFromLocalFile</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">workbook</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">readWorkbook</span><span class="token punctuation">(</span>workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复制文本</title>
      <link href="/hexo/2023/06/07/quan-ju-fu-zhi-wen-ben/"/>
      <url>/hexo/2023/06/07/quan-ju-fu-zhi-wen-ben/</url>
      
        <content type="html"><![CDATA[<p>常用的功能：复制订单号</p><a id="more"></a><h4 id="js原生复制文本"><a href="#js原生复制文本" class="headerlink" title="js原生复制文本"></a>js原生复制文本</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * 点击获取值复制 * @param &#123;String&#125; text 需要复制的值 * @param &#123;String&#125; callBack 执行的回调 */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">copyText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> callBack</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//将input的值设置为需要复制的内容</span>  input<span class="token punctuation">.</span>value <span class="token operator">=</span> text<span class="token punctuation">;</span>  <span class="token comment">//添加input标签</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//选中input标签</span>  input<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//执行复制</span>  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">"copy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 回调函数</span>  callBack <span class="token operator">&amp;&amp;</span> <span class="token function">callBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//移除input标签</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 全局函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态加载script执行回调</title>
      <link href="/hexo/2023/06/07/quan-ju-dong-tai-jia-zai-script/"/>
      <url>/hexo/2023/06/07/quan-ju-dong-tai-jia-zai-script/</url>
      
        <content type="html"><![CDATA[<p>加载脚本的常用代码封装成函数，并执行完成的回调，成功的回调，失败的回调</p><a id="more"></a><h2 id="一-js-动态插入-srcipt-回调写法"><a href="#一-js-动态插入-srcipt-回调写法" class="headerlink" title="一.js 动态插入 srcipt 回调写法"></a><strong>一.js 动态插入 srcipt 回调写法</strong></h2><p><font color="#08c">我们可以动态的创建 ‘script’ 元素，然后通过更改它的 src 属性来加载脚本，但是怎么知道这个脚本文件加载完成了呢？因为有些函数需要在脚本加载完成才能调用。<font color="red">IE 浏览器中可以使用 ‘script’ 元素的 onreadystatechange 来监控加载状态的改变</font>，并通过判断它的 <font color="red">readyState 是 loaded 或 complete 来判断脚本是否加载完成</font>。而<font color="red">非 IE 浏览器可以使用 onload </font>来直接判断脚本是否加载完成。</font></p><p>封装的方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">JSscript</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> hm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span>  hm<span class="token punctuation">.</span>src <span class="token operator">=</span> url  callback<span class="token operator">?.</span>finally <span class="token operator">&amp;&amp;</span> callback<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  hm<span class="token punctuation">.</span>onload <span class="token operator">=</span> hm<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>readyState <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token string">'loaded'</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token string">'complete'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 这里需要执行函数，因为外层有匿名函数</span>      callback<span class="token operator">?.</span>success <span class="token operator">&amp;&amp;</span> callback<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      hm<span class="token punctuation">.</span>onload <span class="token operator">=</span> hm<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">null</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 这里赋值函数</span>  hm<span class="token punctuation">.</span>onerror <span class="token operator">=</span> callback<span class="token operator">?.</span>error <span class="token operator">&amp;&amp;</span> callback<span class="token punctuation">.</span>error  <span class="token comment">// 插入脚本</span>  <span class="token keyword">var</span> s <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  s<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>hm<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用示例1（百度地图js定位）（有回调）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">JSscript</span><span class="token punctuation">(</span><span class="token string">'https://api.map.baidu.com/getscript?v=2.0&amp;ak=uUZas4GaaI6QalSTn8giR2rX&amp;services='</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">finally</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'不管成功失败都会执行的回调'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'成功的回调'</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> geolocation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Geolocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span>      <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>latitude <span class="token operator">&amp;&amp;</span> result<span class="token punctuation">.</span>longitude<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'定位成功'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>latitude<span class="token punctuation">,</span> result<span class="token punctuation">.</span>longitude<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'定位失败'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        enableHighAccuracy<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'失败的回调'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用示例2（md5加密）（无回调）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">JSscript</span><span class="token punctuation">(</span><span class="token string">'https://api.map.baidu.com/getscript?v=2.0&amp;ak=uUZas4GaaI6QalSTn8giR2rX&amp;services='</span><span class="token punctuation">)</span><span class="token keyword">let</span> sign <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">hex_md5</span><span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> <span class="token number">1111</span> <span class="token operator">+</span> <span class="token number">1111</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// vue需要加window指向，或者.eslintrc.js设置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  root<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  env<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    node<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"plugin:vue/essential"</span><span class="token punctuation">,</span> <span class="token string">"eslint:recommended"</span><span class="token punctuation">,</span> <span class="token string">"@vue/prettier"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  parserOptions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    parser<span class="token operator">:</span> <span class="token string">"babel-eslint"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  rules<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"no-console"</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"production"</span> <span class="token operator">?</span> <span class="token string">"warn"</span> <span class="token operator">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>    <span class="token string">"no-debugger"</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"production"</span> <span class="token operator">?</span> <span class="token string">"warn"</span> <span class="token operator">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">"globals"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"error"</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二-js-动态插入-srcipt-promise写法"><a href="#二-js-动态插入-srcipt-promise写法" class="headerlink" title="二.js 动态插入 srcipt promise写法"></a><strong>二.js 动态插入 srcipt promise写法</strong></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * 加载js文件 * @param &#123;文件链接&#125; url * @returns */</span><span class="token keyword">export</span> <span class="token keyword">const</span> loadScript <span class="token operator">=</span> <span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    script<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>    script<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    script<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * 加载css文件 * @param &#123;文件链接&#125; url * @returns */</span><span class="token keyword">export</span> <span class="token keyword">const</span> loadCss <span class="token operator">=</span> <span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"link"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    link<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>    link<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"text/css"</span><span class="token punctuation">;</span>    link<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">"stylesheet"</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> head <span class="token operator">=</span> document<span class="token punctuation">.</span>head <span class="token operator">||</span> document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"head"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>    link<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    link<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * 加载css文件 * @param &#123;文件链接&#125; url * @returns */</span><span class="token keyword">export</span> <span class="token keyword">const</span> loadImg <span class="token operator">=</span> <span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    image<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>    image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    image<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> load <span class="token operator">=</span> <span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">"script"</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token string">"script"</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token function">loadScript</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">"stylesheet"</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token function">loadCss</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">"image"</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token function">loadImg</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span>      <span class="token keyword">return</span> <span class="token function">loadScript</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> load<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 示例</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'https//www.baidu.com'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 全局函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pdfjs-dist插件食用指南</title>
      <link href="/hexo/2023/06/07/er-jin-zhi-cha-jian-pdf-sheng-cheng-pdfjs-dist-cha-jian-shi-yong-zhi-nan/"/>
      <url>/hexo/2023/06/07/er-jin-zhi-cha-jian-pdf-sheng-cheng-pdfjs-dist-cha-jian-shi-yong-zhi-nan/</url>
      
        <content type="html"><![CDATA[<p>pdfjs-dist基础使用，以及 pdf 文件流，以图片墙形式展示</p><a id="more"></a><h3 id="一、安装依赖引入"><a href="#一、安装依赖引入" class="headerlink" title="一、安装依赖引入"></a>一、安装依赖引入</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install pdfjs-dist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import * as PDFJS from &#39;pdfjs-dist&#x2F;legacy&#x2F;build&#x2F;pdf.js&#39;import &#123; PDFDocumentProxy &#125; from &#39;pdfjs-dist&#x2F;types&#x2F;src&#x2F;display&#x2F;api&#39;PDFJS.GlobalWorkerOptions.workerSrc &#x3D; require(&#39;pdfjs-dist&#x2F;build&#x2F;pdf.worker.entry&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="二、pdf-在线URL文件解析"><a href="#二、pdf-在线URL文件解析" class="headerlink" title="二、pdf 在线URL文件解析"></a>二、pdf 在线URL文件解析</h3><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">const loadFile &#x3D; () &#x3D;&gt; &#123;  &#x2F;&#x2F; const loadingTask &#x3D; PDFJS.getDocument(&#39;https:&#x2F;&#x2F;file-test.midiplusedu.com&#x2F;2023&#x2F;06&#x2F;20&#x2F;4GmLczjSQtWcxduijTui9FAyl2j73trDRTm1IbvKDE7o3HdIXsBUmODAdh9ZkAdD.pdf&#39;)  const loadingTask &#x3D; PDFJS.getDocument(textBook.value)  loadingTask.promise.then((pdf) &#x3D;&gt; &#123;    total.value &#x3D; pdf.numPages    renderPage(pdf)  &#125;)&#125;const renderPage &#x3D; async (pdf: PDFDocumentProxy) &#x3D;&gt; &#123;  for (const i of [...new Array(pdf.numPages).keys()]) &#123;    const canvas &#x3D; document.createElement(&#39;canvas&#39;) as HTMLCanvasElement    canvas.id &#x3D; &#96;canvas_$&#123;i + 1&#125;&#96;    &#x2F;&#x2F; 页数默认加1       const page &#x3D; await pdf.getPage(i + 1)    &#x2F;&#x2F; 缩小倍数    const viewport &#x3D; page.getViewport(&#123; scale: 1 &#125;)    const scale &#x3D; window.innerHeight &#x2F; viewport.height     const context &#x3D; canvas.getContext(&#39;2d&#39;) as any    const scaleViewport &#x3D; page.getViewport(&#123; scale: scale &#125;)    canvas.height &#x3D; scaleViewport.height    canvas.width &#x3D; canvasWidth.value &#x3D; scaleViewport.width    const renderContext &#x3D; &#123;      canvasContext: context,      viewport: scaleViewport,    &#125;    page.render(renderContext)    canvasRef.value.appendChild(canvas)  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、示例、ant上传组件配合pdfjs-dist展示文件墙"><a href="#四、示例、ant上传组件配合pdfjs-dist展示文件墙" class="headerlink" title="四、示例、ant上传组件配合pdfjs-dist展示文件墙"></a>四、示例、ant上传组件配合pdfjs-dist展示文件墙</h3><blockquote><p>上传PDF，需要展示所有页，形成图片墙<br> 更换上传文件需要把文件墙清空<br> 回显的时候文件墙需要解析</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-upload</span>  <span class="token attr-name"><span class="token namespace">v-model:</span>file-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fileList<span class="token punctuation">"</span></span>  <span class="token attr-name">:show-upload-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showUploadList<span class="token punctuation">"</span></span>  <span class="token attr-name">:list-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fileType === <span class="token punctuation">'</span>file<span class="token punctuation">'</span> ? <span class="token punctuation">'</span>text<span class="token punctuation">'</span> : <span class="token punctuation">'</span>picture-card<span class="token punctuation">'</span><span class="token punctuation">"</span></span>  <span class="token attr-name">:customRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>downloadFilesCustomRequest<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- pdf图片方式 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fileType === <span class="token punctuation">'</span>pdf<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>loading-outlined</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loadingPDF<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>loading-outlined</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvasRef<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>thumbUrl<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvas<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-upload</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 自定义上传文件事件</span><span class="token keyword">const</span> <span class="token function-variable function">downloadFilesCustomRequest</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> file <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 检验文件格式</span>  <span class="token keyword">let</span> accept <span class="token operator">=</span> props<span class="token punctuation">.</span>accept  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>accept<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>suffix<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> uploadType <span class="token operator">=</span> accept<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'、'</span><span class="token punctuation">)</span>    message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">文件格式不正确，请选择</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>uploadType<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">格式文件！</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> props<span class="token punctuation">.</span>fileSize  <span class="token comment">// 判断文件大小</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">文件大小不能超过</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>props<span class="token punctuation">.</span>fileSize<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">MB!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  param<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>  param<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"fileName"</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  param<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"thumb"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 二进制文件请求接口，返回链接</span>  <span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>uploadApi <span class="token keyword">as</span> Function<span class="token punctuation">)</span> <span class="token operator">||</span> uploadFileApi<span class="token punctuation">;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> code<span class="token punctuation">,</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">api</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span> props<span class="token punctuation">.</span>parameter<span class="token operator">?.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"upload"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        state<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>        <span class="token operator">...</span>data<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"upload"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      state<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取标签节点，等同于vue2的this.$ref</span><span class="token keyword">const</span> canvasRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 文件读取很慢，需要一个loading控制加载状态</span><span class="token keyword">const</span> loadingPDF <span class="token operator">=</span> ref <span class="token operator">&lt;</span> boolean <span class="token operator">></span> <span class="token boolean">false</span><span class="token comment">// 读取pdf文件流</span><span class="token keyword">const</span> <span class="token function-variable function">pdf2html</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">url</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> canvas  <span class="token comment">// 上传文件不止是pdf，也可能是图片，需要校验 </span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'.pdf'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    loadingPDF<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token comment">// 删除所有的子节点，pdf一个文件一般有n页，需要展示n张图片，所以更换文件时需要把所有子节点全部删除</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> canvasRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> k<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      canvasRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>canvasRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> pdf <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">PDFJS</span><span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>promise    loadingPDF<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment">// 遍历渲染pdf文件</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>pdf<span class="token punctuation">.</span>numPages<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>      canvas<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'canvas'</span>      <span class="token comment">// 页数默认加1   </span>      <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> pdf<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>      <span class="token comment">// 缩小倍数</span>      <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token number">0.18</span>      <span class="token keyword">const</span> viewport <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> scale <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>      canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> viewport<span class="token punctuation">.</span>height      canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> viewport<span class="token punctuation">.</span>width      <span class="token keyword">const</span> renderContext <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        canvasContext<span class="token operator">:</span> context<span class="token punctuation">,</span>        viewport<span class="token operator">:</span> viewport<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>      page<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span>      canvasRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span>    canvas<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'canvas'</span>    canvas<span class="token punctuation">.</span>src <span class="token operator">=</span> url    canvas<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token string">'max-height: 128px;'</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> canvasRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> k<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      canvasRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>canvasRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    canvasRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-quill-text富文本踩坑</title>
      <link href="/hexo/2023/06/07/san-fang-ku-vue-quill-text-fu-wen-ben-zu-jian/"/>
      <url>/hexo/2023/06/07/san-fang-ku-vue-quill-text-fu-wen-ben-zu-jian/</url>
      
        <content type="html"><![CDATA[<p>实现功能点踩坑：1、基础使用；2、插入标签；3、复制黏贴格式化文本、禁止图片复制；4、本地资源上传重写upload组件文件上传</p><a id="more"></a><h4 id="Quill方法继承重写"><a href="#Quill方法继承重写" class="headerlink" title="Quill方法继承重写"></a>Quill方法继承重写</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 继承插入标签时埋入自定义属性、节点事件 </span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Quill <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-quill-editor'</span><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">'jquery'</span><span class="token keyword">let</span> BlockEmbed <span class="token operator">=</span> Quill<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">'blots/block/embed'</span><span class="token punctuation">)</span><span class="token keyword">let</span> openEditEvent <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setThis</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 把vue实例方法传递进来</span>  openEditEvent <span class="token operator">=</span> event<span class="token punctuation">&#125;</span><span class="token comment">// 继承img标签</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ImageBlot</span> <span class="token keyword">extends</span> <span class="token class-name">BlockEmbed</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    node<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">,</span> value<span class="token punctuation">.</span>style<span class="token punctuation">)</span>    node<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> value<span class="token punctuation">.</span>url<span class="token punctuation">)</span>    node<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> value<span class="token punctuation">.</span>data<span class="token punctuation">)</span>    node<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'type'</span><span class="token punctuation">,</span> value<span class="token punctuation">.</span>type<span class="token punctuation">)</span>    <span class="token keyword">return</span> node  <span class="token punctuation">&#125;</span>  <span class="token keyword">static</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      style<span class="token operator">:</span> node<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      url<span class="token operator">:</span> node<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      data<span class="token operator">:</span> node<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      type<span class="token operator">:</span> node<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'type'</span><span class="token punctuation">)</span>      <span class="token comment">// class: node.getAttribute('class')</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ImageBlot<span class="token punctuation">.</span>blotName <span class="token operator">=</span> <span class="token string">'image'</span>ImageBlot<span class="token punctuation">.</span>tagName <span class="token operator">=</span> <span class="token string">'img'</span><span class="token comment">// 继承span标签</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">FillIn</span> <span class="token keyword">extends</span> <span class="token class-name">BlockEmbed</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> node <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">$</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      padding<span class="token operator">:</span> <span class="token string">'0 0.5em'</span><span class="token punctuation">,</span>      <span class="token string">'text-decoration'</span><span class="token operator">:</span> <span class="token string">'underline'</span><span class="token punctuation">,</span>      color<span class="token operator">:</span> <span class="token string">'#FF5E2A'</span><span class="token punctuation">,</span>      display<span class="token operator">:</span> <span class="token string">'inline'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token function">$</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>content <span class="token operator">||</span> <span class="token string">'点击修改填空答案'</span><span class="token punctuation">)</span>    <span class="token function">$</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token function">openEditEvent</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> node  <span class="token punctuation">&#125;</span>  <span class="token keyword">static</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      content<span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>FillIn<span class="token punctuation">.</span>blotName <span class="token operator">=</span> <span class="token string">'span'</span>FillIn<span class="token punctuation">.</span>tagName <span class="token operator">=</span> <span class="token string">'span'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#FF5E2A">使用示例 ~ vue2 </font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 标签</span><span class="token operator">&lt;</span>quill<span class="token operator">-</span>editor <span class="token operator">:</span>ref<span class="token operator">=</span><span class="token string">"`editors`"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>quill<span class="token operator">-</span>editor<span class="token operator">></span><span class="token keyword">import</span> <span class="token string">'quill/dist/quill.core.css'</span><span class="token keyword">import</span> <span class="token string">'quill/dist/quill.snow.css'</span><span class="token keyword">import</span> <span class="token string">'quill/dist/quill.bubble.css'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> quillEditor<span class="token punctuation">,</span> Quill <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-quill-editor'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ImageBlot <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./ImageBlot.js'</span>Quill<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ImageBlot<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 插入图片</span><span class="token keyword">let</span> quillEditor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">editors</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span>quill<span class="token keyword">let</span> index <span class="token operator">=</span> quillEditor<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?.</span>index <span class="token operator">||</span> <span class="token number">0</span> <span class="token comment">//光标位置</span><span class="token keyword">let</span> blotName <span class="token operator">=</span> <span class="token string">'span'</span> <span class="token comment">//上面定义的blotName</span>quillEditor<span class="token punctuation">.</span><span class="token function">insertEmbed</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> blotName<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  style<span class="token operator">:</span> <span class="token string">'width:50px;height:50px;display:inline-block;position:relative'</span><span class="token punctuation">,</span>  url<span class="token operator">:</span> uri<span class="token punctuation">,</span>  type<span class="token operator">:</span> <span class="token string">'image'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> uri<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="复制黏贴格式化文本、禁止图片复制"><a href="#复制黏贴格式化文本、禁止图片复制" class="headerlink" title="复制黏贴格式化文本、禁止图片复制"></a>复制黏贴格式化文本、禁止图片复制</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 标签</span><span class="token operator">&lt;</span>quill<span class="token operator">-</span>editor <span class="token operator">:</span>ref<span class="token operator">=</span><span class="token string">"`editors`"</span> <span class="token operator">:</span>options<span class="token operator">=</span><span class="token string">"editorOptions"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>quill<span class="token operator">-</span>editor<span class="token operator">></span><span class="token keyword">const</span> editorOptions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  modules<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    toolbar<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    clipboard<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      matchers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>Node<span class="token punctuation">.</span><span class="token constant">ELEMENT_NODE</span><span class="token punctuation">,</span> handleCustomMatcher<span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  placeholder<span class="token operator">:</span> <span class="token string">'我是默认值'</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">handleCustomMatcher</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> delta</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 定时器的原因是回显第一次的时候会误杀、所以loading是等页面数据加载完true之后3s时间才禁止复制黏贴</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>loading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">clearTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> delta  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> opsList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  delta<span class="token punctuation">.</span>ops<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">op</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>op<span class="token punctuation">.</span>insert <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> op<span class="token punctuation">.</span>insert <span class="token operator">===</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 正常p标签文本</span>      opsList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        insert<span class="token operator">:</span> op<span class="token punctuation">.</span>insert      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>op<span class="token punctuation">.</span>insert<span class="token operator">?.</span>span<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// span是带样式的标签、提取纯文本</span>      opsList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        insert<span class="token operator">:</span> op<span class="token punctuation">.</span>insert<span class="token punctuation">.</span>span<span class="token punctuation">.</span>content      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>op<span class="token punctuation">.</span>insert<span class="token operator">?.</span>image<span class="token operator">?.</span>data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 没有data属性说明不是插入的图标、上面插入data属性到这里可以做判断、不是常规合法插入图片那就是cv的，给他提示禁止</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token string">'禁止复制图片'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  delta<span class="token punctuation">.</span>ops <span class="token operator">=</span> opsList  <span class="token keyword">return</span> delta<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="本地资源上传重写upload组件文件上传"><a href="#本地资源上传重写upload组件文件上传" class="headerlink" title="本地资源上传重写upload组件文件上传"></a>本地资源上传重写upload组件文件上传</h4><p><font color="#FF5E2A">先把工具栏禁用隐藏</font></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">/deep/ .ql-toolbar</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color="#FF5E2A">文件上传js文件 </font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> md5 <span class="token keyword">from</span> <span class="token string">'js-md5'</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token comment">/** * 组合使用 * @param &#123; Object &#125; config  判断条件回调 * @return &#123; String &#125; */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">uploadFileEvent</span> <span class="token operator">=</span> <span class="token parameter">config</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>    input<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'file'</span>    input<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> file <span class="token operator">=</span> input<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>      <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> config<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">httpRequest</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>        <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    input<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * url链接展示文件墙 * @param &#123; Array &#125; fileUrl url链接数组 * @return &#123; Array&lt;Object> &#125; 数组 */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fileUrlToBase64</span> <span class="token operator">=</span> <span class="token parameter">fileUrl</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> fileUrl<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> filename <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'*'</span> <span class="token comment">// 从 URL 中获取文件名</span>    <span class="token keyword">let</span> blobUrl <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> type<span class="token operator">:</span> <span class="token string">''</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 创建一个 Blob 对象并获取 URL</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      name<span class="token operator">:</span> filename<span class="token punctuation">,</span>      url<span class="token operator">:</span> blobUrl    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 上传校验 * @param &#123; String, Object &#125; file params  二进制 | 回调 * @return &#123; Boolean &#125; */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> defaultParams <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    maxSize<span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>    <span class="token function-variable function">suceessCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">成功</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">errorCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">上传图片大小不能超过</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token number">2000</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">KB!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">doneCallback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">完成</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> maxSize<span class="token punctuation">,</span> suceessCallback<span class="token punctuation">,</span> errorCallback<span class="token punctuation">,</span> doneCallback <span class="token punctuation">&#125;</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> defaultParams<span class="token punctuation">)</span>  <span class="token keyword">let</span> flag  <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">></span> maxSize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    errorCallback <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">errorCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    suceessCallback <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">suceessCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span>  doneCallback <span class="token operator">&amp;&amp;</span> <span class="token function">doneCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> flag<span class="token punctuation">&#125;</span><span class="token comment">/** * * @param &#123; String &#125; file  二进制 * @return &#123; Promise &#125; */</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">readBlobAsArrayBuffer</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span>    reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 上传方法 * @param &#123; String &#125; file  二进制 * @return &#123; Promise &#125; */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">httpRequest</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> rf <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readBlobAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>  <span class="token keyword">const</span> <span class="token constant">MD5</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>rf<span class="token punctuation">)</span>  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token string">'http://10.88.18.164:30000/api/v2/storage'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    file_key<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>    filename<span class="token operator">:</span> file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>    hash<span class="token operator">:</span> <span class="token constant">MD5</span><span class="token punctuation">,</span>    mime_type<span class="token operator">:</span> file<span class="token punctuation">.</span>type<span class="token punctuation">,</span>    size<span class="token operator">:</span> file<span class="token punctuation">.</span>size<span class="token punctuation">,</span>    storage<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      channel<span class="token operator">:</span> <span class="token string">'public'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> fileUrl  <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">></span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>file<span class="token punctuation">)</span>    fileUrl <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">uploadFileForm</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>uri<span class="token punctuation">,</span> form<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>data<span class="token punctuation">.</span>headers    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    fileUrl <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>uri<span class="token punctuation">,</span> rf<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>data<span class="token punctuation">.</span>headers    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> fileUrl<span class="token punctuation">&#125;</span><span class="token comment">/** * 引入axios调用 */</span><span class="token keyword">const</span> <span class="token function-variable function">upload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 暂时写死token</span>      Authorization<span class="token operator">:</span>        <span class="token string">'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiZDJiNjkyNzA5MDNjMmU0ZmRkMzI1YzQzNDkzYjY0YWNhN2U0OGYxY2JjMjgxNDkwOGIxNGM5ODhiOTQxOGJlYTQyMjMwYzdjNzg4NTcwOTIiLCJpYXQiOjE2ODIyMTY3MDAuNjQwMDg0LCJuYmYiOjE2ODIyMTY3MDAuNjQwMDg3LCJleHAiOjE2ODc0MDA3MDAuNTk2NjAxLCJzdWIiOiIxIiwic2NvcGVzIjpbIioiXX0.qdIyAV-z0Hto59SN1yUUO0irD36slDpneffyCGm86VPFSyOdIiVxIIAJba6FfUAP1xBrlzuz0A-loGxpyTvgaZ_BJKIOcJOVeePAXeDymgBMILlC-vP7ByIco9UyJG1K_WZMtbtipn-69qhOXRiMxwoNO46ZN3lq0BiAaoDQWXdkCndE1AqA6mQBAGfDxEdyg8hBW0YgNOADgB09giUea1S-nrj8sSm_Myvm7Q-QesSUJQnl1y2kWzDQaLf-ffKuXJum7Wcx-0mqO3yVmJoetVq4KSVapirMpYhq4HXhlRztb62Qngj-EbcG4kJGA4KYWjXUOCT9t6zel9hLB8bkjrOimStq1dVRicj_EbXvOuzhOY3vqjIF0U7JEK_mMsKHD8C46EUEHiGOFX5QSUEUQPJ6vIePsBO7d6FJM8N7aQpsXP1le6uhFh8YK6WEJT-L9NJxvtWJQ8UmkIBQRRDRMOH8DiaRmOtUj4TY11OccA9hlArBbEOSYbHCJN22sN2Mdgv4gAwFUGZzotqN2AzbPffwJqTIeY8tyuxRshT0no41ybzBqbY-0zVyhSQPEfDxgHvV8OINymaph1_o7v1A9YysMzXvYbz3xINVxdSJUc-xfCCrliSpNLm1EpBrxChjwlM0hM0RJie3x8pGl-XrxarWBTSwtuBCBimPpPUnhPM'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> res<span class="token punctuation">.</span>data<span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">uploadFileForm</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'multipart/form-data'</span><span class="token punctuation">,</span>      <span class="token operator">...</span>config    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> res<span class="token punctuation">.</span>data<span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">uploadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> args<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'multipart/form-data'</span><span class="token punctuation">,</span>      <span class="token operator">...</span>config    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> res<span class="token punctuation">.</span>data<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#FF5E2A">用 insertEmbed 方法插入 imgae 类型的标签把 url 设置节点 src</font></p><p><font color="red">insertEmbed方法插入触发两次问题</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>insertingFlag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">reslove</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  quillEditor<span class="token punctuation">.</span><span class="token function">insertEmbed</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token string">'image'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    style<span class="token operator">:</span> <span class="token string">'width:50px;height:50px;display:inline-block;position:relative'</span><span class="token punctuation">,</span>    url<span class="token operator">:</span> uri<span class="token punctuation">,</span>    type<span class="token operator">:</span> <span class="token string">'image'</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> uri  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">reslove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>insertingFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment">// 改成异步写法，原先就有的bug</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="聚焦输入框高亮"><a href="#聚焦输入框高亮" class="headerlink" title="聚焦输入框高亮"></a>聚焦输入框高亮</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vue-quill-editor<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; active: focused &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>quill-editor</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>editors<span class="token punctuation">"</span></span> <span class="token attr-name">@focus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onFocus<span class="token punctuation">"</span></span> <span class="token attr-name">@blur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onBlur<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>quill-editor</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">onFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>focused <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">focusEditor</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">editors</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.vue-quill-editor.active</span> <span class="token punctuation">&#123;</span>  <span class="token selector">/deep/ .ql-container.ql-snow</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> #ff5e2a<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="关于vue-quill-text"><a href="#关于vue-quill-text" class="headerlink" title="关于vue-quill-text"></a>关于vue-quill-text</h4><p><font color="#FF5E2A">属性方法</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">v<span class="token operator">-</span>model <span class="token comment">//值</span>@input <span class="token comment">//输入</span>@focus <span class="token comment">//聚焦</span>@blur <span class="token comment">//失焦</span>options <span class="token comment">//配置项</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#FF5E2A">纯文本提取 、 直接渲染dom通过节点获取、更简单</font></p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Winicss 原子类（样式库）</title>
      <link href="/hexo/2023/06/07/san-fang-ku-windicss/"/>
      <url>/hexo/2023/06/07/san-fang-ku-windicss/</url>
      
        <content type="html"><![CDATA[<p>快捷使用 <font color="red">“&lt;\div _flex=”~ items-center justify-cente”&gt;&lt;/\div&gt;”</font> 实现div弹性布局水平垂直居中</p><a id="more"></a><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install windicss<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-新建flex样式-plugin-flex-js-文件"><a href="#1-新建flex样式-plugin-flex-js-文件" class="headerlink" title="1.新建flex样式 plugin/flex.js 文件"></a>1.新建flex样式 plugin/flex.js 文件</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> plugin <span class="token keyword">from</span> <span class="token string">'windicss/plugin'</span><span class="token comment">/** * flex 布局插件 */</span><span class="token keyword">const</span> flexPlugin <span class="token operator">=</span> <span class="token function">plugin</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> addUtilities <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">addUtilities</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string">'.flex-self-auto'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-self'</span><span class="token operator">:</span> <span class="token string">'auto'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-self-start'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-self'</span><span class="token operator">:</span> <span class="token string">'flex-start'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-self-end'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-self'</span><span class="token operator">:</span> <span class="token string">'flex-end'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-self-center'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-self'</span><span class="token operator">:</span> <span class="token string">'center'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-self-baseline'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-self'</span><span class="token operator">:</span> <span class="token string">'baseline'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-self-stretch'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-self'</span><span class="token operator">:</span> <span class="token string">'stretch'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-center'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-items'</span><span class="token operator">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span>      <span class="token string">'justify-content'</span><span class="token operator">:</span> <span class="token string">'center'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-justify-center'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'justify-content'</span><span class="token operator">:</span> <span class="token string">'center'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-justify-start'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'justify-content'</span><span class="token operator">:</span> <span class="token string">'flex-start'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-justify-end'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'justify-content'</span><span class="token operator">:</span> <span class="token string">'flex-end'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-justify-between'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'justify-content'</span><span class="token operator">:</span> <span class="token string">'space-between'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-justify-around'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'justify-content'</span><span class="token operator">:</span> <span class="token string">'space-around'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-justify-evenly'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'justify-content'</span><span class="token operator">:</span> <span class="token string">'space-evenly'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-items-center'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-items'</span><span class="token operator">:</span> <span class="token string">'center'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-items-start'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-items'</span><span class="token operator">:</span> <span class="token string">'flex-start'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-items-end'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-items'</span><span class="token operator">:</span> <span class="token string">'flex-end'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-items-between'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-items'</span><span class="token operator">:</span> <span class="token string">'space-between'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-items-around'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-items'</span><span class="token operator">:</span> <span class="token string">'space-around'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.flex-items-evenly'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'align-items'</span><span class="token operator">:</span> <span class="token string">'space-evenly'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> flexPlugin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-新建行样式-plugin-lineClamp-js-文件"><a href="#2-新建行样式-plugin-lineClamp-js-文件" class="headerlink" title="2.新建行样式 plugin/lineClamp.js 文件"></a>2.新建行样式 plugin/lineClamp.js 文件</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> plugin <span class="token keyword">from</span> <span class="token string">'windicss/plugin'</span><span class="token comment">/** * 溢出隐藏插件 */</span><span class="token keyword">const</span> lineClampPlugin <span class="token operator">=</span> <span class="token function">plugin</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> addUtilities <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">addUtilities</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string">'.line-clamp-1, .line-clamp-2, .line-clamp-3, .line-clamp-4, .line-clamp-5, .line-clamp-6, .line-clamp-7'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      overflow<span class="token operator">:</span> <span class="token string">'hidden'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.line-clamp-1'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'text-overflow'</span><span class="token operator">:</span> <span class="token string">'ellipsis'</span><span class="token punctuation">,</span>      <span class="token string">'white-space'</span><span class="token operator">:</span> <span class="token string">'nowrap'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.line-clamp-2, .line-clamp-3, .line-clamp-4, .line-clamp-5, .line-clamp-6, .line-clamp-7'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      overflow<span class="token operator">:</span> <span class="token string">'hidden'</span><span class="token punctuation">,</span>      display<span class="token operator">:</span> <span class="token string">'-webkit-box'</span><span class="token punctuation">,</span>      <span class="token string">'-webkit-box-orient'</span><span class="token operator">:</span> <span class="token string">'vertical'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.line-clamp-2'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'-webkit-line-clamp'</span><span class="token operator">:</span> <span class="token string">'2'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.line-clamp-3'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'-webkit-line-clamp'</span><span class="token operator">:</span> <span class="token string">'3'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.line-clamp-4'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'-webkit-line-clamp'</span><span class="token operator">:</span> <span class="token string">'4'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.line-clamp-5'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'-webkit-line-clamp'</span><span class="token operator">:</span> <span class="token string">'5'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.line-clamp-6'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'-webkit-line-clamp'</span><span class="token operator">:</span> <span class="token string">'6'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.line-clamp-7'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'-webkit-line-clamp'</span><span class="token operator">:</span> <span class="token string">'7'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> lineClampPlugin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-将新建样式添加进配置-属性模式配置-plugin-index-js-文件"><a href="#3-将新建样式添加进配置-属性模式配置-plugin-index-js-文件" class="headerlink" title="3.将新建样式添加进配置 ~ 属性模式配置 plugin/index.js 文件"></a>3.将新建样式添加进配置 ~ 属性模式配置 plugin/index.js 文件</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> flexPlugin <span class="token keyword">from</span> <span class="token string">'./plugin/flex'</span><span class="token keyword">import</span> lineClampPlugin <span class="token keyword">from</span> <span class="token string">'./plugin/lineClamp'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> FullConfig <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'windicss/types/interfaces'</span><span class="token keyword">const</span> windPreset<span class="token operator">:</span> FullConfig <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  preflight<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  prefix<span class="token operator">:</span> <span class="token string">'w-'</span><span class="token punctuation">,</span>  attributify<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    prefix<span class="token operator">:</span> <span class="token string">'_'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>flexPlugin<span class="token punctuation">,</span> lineClampPlugin<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> windPreset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-项目使用-引入-plugin-index-js"><a href="#4-项目使用-引入-plugin-index-js" class="headerlink" title="4.项目使用 引入 plugin/index.js"></a>4.项目使用 引入 plugin/index.js</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> plugin <span class="token keyword">from</span> <span class="token string">'windicss/plugin'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> windPreset <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/plugin/index.js'</span><span class="token keyword">const</span> mpptxPlugin <span class="token operator">=</span> <span class="token function">plugin</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> addComponents<span class="token punctuation">,</span> addUtilities <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">addUtilities</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string">'.click'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      cursor<span class="token operator">:</span> <span class="token string">'pointer'</span><span class="token punctuation">,</span>      transition<span class="token operator">:</span> <span class="token string">'filter 300ms'</span><span class="token punctuation">,</span>      <span class="token string">'&amp;:active'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        filter<span class="token operator">:</span> <span class="token string">'brightness(1.1)'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">addComponents</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string">'.btn, .btn-info, .btn-primary'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      paddingLeft<span class="token operator">:</span> <span class="token string">'16px'</span><span class="token punctuation">,</span>      paddingRight<span class="token operator">:</span> <span class="token string">'16px'</span><span class="token punctuation">,</span>      paddingTop<span class="token operator">:</span> <span class="token string">'7px'</span><span class="token punctuation">,</span>      paddingBottom<span class="token operator">:</span> <span class="token string">'7px'</span><span class="token punctuation">,</span>      transition<span class="token operator">:</span> <span class="token string">'all 100ms'</span><span class="token punctuation">,</span>       backgroundColor<span class="token operator">:</span> <span class="token string">'#fff'</span><span class="token punctuation">,</span>      borderRadius<span class="token operator">:</span> <span class="token string">'6px'</span><span class="token punctuation">,</span>      borderWidth<span class="token operator">:</span> <span class="token string">'1px'</span><span class="token punctuation">,</span>      borderStyle<span class="token operator">:</span> <span class="token string">'solid'</span><span class="token punctuation">,</span>      borderColor<span class="token operator">:</span> <span class="token string">'#DEDEDE'</span><span class="token punctuation">,</span>      cursor<span class="token operator">:</span> <span class="token string">'pointer'</span><span class="token punctuation">,</span>      userSelect<span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span>      textAlign<span class="token operator">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span>      fontSize<span class="token operator">:</span> <span class="token string">'16px'</span><span class="token punctuation">,</span>      <span class="token string">'&amp;:active'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        filter<span class="token operator">:</span> <span class="token string">'brightness(0.9)'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.btn-info'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      color<span class="token operator">:</span> <span class="token string">'#535353'</span><span class="token punctuation">,</span>      borderColor<span class="token operator">:</span> <span class="token string">'#DEDEDE'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.btn-primary'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      color<span class="token operator">:</span> <span class="token string">'#fff'</span><span class="token punctuation">,</span>      backgroundColor<span class="token operator">:</span> <span class="token string">'#FF5E2A'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">'.btn-disabled'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      opacity<span class="token operator">:</span> <span class="token string">'0.5'</span><span class="token punctuation">,</span>      pointerEvents<span class="token operator">:</span> <span class="token string">'none'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>windPreset<span class="token punctuation">.</span>plugins<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mpptxPlugin<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> windPreset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-vite-config-ts配置"><a href="#5-vite-config-ts配置" class="headerlink" title="5.vite.config.ts配置"></a>5.vite.config.ts配置</h4><p><font color="#08c">安装依赖</font></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install vite-plugin-windicss windicss<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color="#08c">vite.config.ts</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineConfig <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vite"</span><span class="token punctuation">;</span><span class="token keyword">import</span> WindiCSS <span class="token keyword">from</span> <span class="token string">'vite-plugin-windicss'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">WindiCSS</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    scan<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      dirs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 当前目录下所有文件</span>      fileExtensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'vue'</span><span class="token punctuation">,</span> <span class="token string">'js'</span><span class="token punctuation">,</span> <span class="token string">'ts'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 同时启用扫描vue/js/ts</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#08c">main.ts</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createSSRApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> <span class="token string">'virtual:windi-components.css'</span><span class="token keyword">import</span> <span class="token string">'virtual:windi-utilities.css'</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createSSRApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token punctuation">&#123;</span>app<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-webpack构建vue-config-ts配置"><a href="#6-webpack构建vue-config-ts配置" class="headerlink" title="6.webpack构建vue.config.ts配置"></a>6.webpack构建vue.config.ts配置</h4><p><font color="#08c">vue.config.ts</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 其他配置忽略</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  pluginOptions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    windicss<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#08c">main.ts</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> <span class="token string">'windi.css'</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>execl导出</title>
      <link href="/hexo/2023/06/07/er-jin-zhi-execl-dao-chu/"/>
      <url>/hexo/2023/06/07/er-jin-zhi-execl-dao-chu/</url>
      
        <content type="html"><![CDATA[<p>数据导出成execl表格</p><a id="more"></a><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>使用a标签方式将json导出csv文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>tableToExcel()<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>导出<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> jsonData <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>        name<span class="token operator">:</span><span class="token string">'路人甲'</span><span class="token punctuation">,</span>        phone<span class="token operator">:</span><span class="token string">'123456789'</span><span class="token punctuation">,</span>        email<span class="token operator">:</span><span class="token string">'000@123456.com'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        name<span class="token operator">:</span><span class="token string">'炮灰乙'</span><span class="token punctuation">,</span>        phone<span class="token operator">:</span><span class="token string">'123456789'</span><span class="token punctuation">,</span>        email<span class="token operator">:</span><span class="token string">'000@123456.com'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        name<span class="token operator">:</span><span class="token string">'土匪丙'</span><span class="token punctuation">,</span>        phone<span class="token operator">:</span><span class="token string">'123456789'</span><span class="token punctuation">,</span>        email<span class="token operator">:</span><span class="token string">'000@123456.com'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        name<span class="token operator">:</span><span class="token string">'流氓丁'</span><span class="token punctuation">,</span>        phone<span class="token operator">:</span><span class="token string">'123456789'</span><span class="token punctuation">,</span>        email<span class="token operator">:</span><span class="token string">'000@123456.com'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 列标题，逗号隔开，每一个逗号就是隔开一个单元格</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">姓名,电话,邮箱\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token comment">// 增加\t为了不让表格显示科学计数法或者其他格式</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> jsonData<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> jsonData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>str<span class="token operator">+=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>jsonData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'\t'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">,</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>str<span class="token operator">+=</span><span class="token string">'\n'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// encodeURIComponent解决中文乱码</span><span class="token keyword">const</span> uri <span class="token operator">=</span> <span class="token string">'data:text/csv;charset=utf-8,\ufeff'</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 通过创建a标签实现</span><span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>link<span class="token punctuation">.</span>href <span class="token operator">=</span> uri<span class="token punctuation">;</span><span class="token comment">// 对下载的文件命名</span>link<span class="token punctuation">.</span>download <span class="token operator">=</span>  <span class="token string">"我是你要的execl模板哦.csv"</span><span class="token punctuation">;</span>link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3食用百度地图api</title>
      <link href="/hexo/2023/06/07/san-fang-ku-vue3-dao-ru-bai-du-di-tu-api/"/>
      <url>/hexo/2023/06/07/san-fang-ku-vue3-dao-ru-bai-du-di-tu-api/</url>
      
        <content type="html"><![CDATA[<p>难点：地图自定义标记点，每个标记点自定义点击事件</p><a id="more"></a><h4 id="1-动态script标签引入"><a href="#1-动态script标签引入" class="headerlink" title="1.动态script标签引入"></a><strong>1.动态script标签引入</strong></h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// vue3百度地图适配</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token constant">MP</span><span class="token punctuation">(</span><span class="token parameter">ak</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>BMap<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> hasInsert <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'bdMap'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasInsert<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span>      script<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'bdMap'</span>      script<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'text/javascript'</span>      <span class="token comment">// BMap引入版本是2.0  &lt;script src="http://api.map.baidu.com/api?v=2.0&amp;ak=您的秘钥">&lt;/script></span>      <span class="token comment">// BMapGL引入版本是1.0  &lt;script src="http://api.map.baidu.com/api?type=webgl&amp;v=1.0&amp;ak=您的密钥">&lt;/script></span>      <span class="token comment">// new BMap()和new BMapGL()</span>      script<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'http://api.map.baidu.com/api?v=1.0&amp;type=webgl&amp;ak='</span> <span class="token operator">+</span> ak <span class="token operator">+</span> <span class="token string">'&amp;callback=init'</span>      <span class="token comment">// onerror图片加载失败触发此事件</span>      <span class="token comment">// &lt;img src="images/logo.png" onerror="javascript:this.src='images/logoError.png';"></span>      <span class="token comment">// 可以使用一张默认图片代替</span>      script<span class="token punctuation">.</span>onerror <span class="token operator">=</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-标签"><a href="#2-标签" class="headerlink" title="2.标签"></a><strong>2.标签</strong></h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 100%</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-百度api方法"><a href="#3-百度api方法" class="headerlink" title="3.百度api方法"></a><strong>3.百度api方法</strong></h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 导入方法</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> <span class="token constant">MP</span> <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/utils/baiduMap'</span><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取浏览器定位</span>  <span class="token comment">// 动态引入较大类库避免影响页面展示</span>  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 调用方法动态导入百度地图api</span>    <span class="token keyword">const</span> ak <span class="token operator">=</span> <span class="token string">'WXWS0hfkwMqsjFEGs3y6FvnZGWVqwizP'</span>    <span class="token constant">MP</span><span class="token punctuation">(</span>ak<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">BMap</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      mapVm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token string">'container'</span><span class="token punctuation">)</span> <span class="token comment">// 创建Map实例绑定元素</span>      <span class="token function">initMap</span><span class="token punctuation">(</span>mapVm<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 初始化百度地图渲染</span><span class="token keyword">const</span> <span class="token function-variable function">initMap</span> <span class="token operator">=</span> <span class="token parameter">map</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 创建地图实例</span>  <span class="token keyword">var</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">116.404</span><span class="token punctuation">,</span> <span class="token number">39.915</span><span class="token punctuation">)</span>  <span class="token comment">// 创建点坐标</span>  map<span class="token punctuation">.</span><span class="token function">centerAndZoom</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> scaleCtrl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>ScaleControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 比例尺控件</span>  map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>scaleCtrl<span class="token punctuation">)</span>  <span class="token keyword">var</span> zoomCtrl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>ZoomControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 缩放控件</span>  map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>zoomCtrl<span class="token punctuation">)</span>  <span class="token comment">// 创建城市选择控件</span>  <span class="token keyword">var</span> cityControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>CityListControl</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    anchor<span class="token operator">:</span> <span class="token string">'BMAP_ANCHOR_TOP_LEFT'</span><span class="token punctuation">,</span> <span class="token comment">// 控件的停靠位置（可选，默认左上角）</span>    offset<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 控件基于停靠位置的偏移量（可选）</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 创建定位控件</span>  <span class="token keyword">var</span> locationControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>LocationControl</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    anchor<span class="token operator">:</span> <span class="token string">'BMAP_ANCHOR_BOTTOM_LEFT'</span><span class="token punctuation">,</span> <span class="token comment">// 控件的停靠位置（可选，默认左上角）</span>    offset<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 控件基于停靠位置的偏移量（可选）</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 将控件添加到地图上</span>  map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>cityControl<span class="token punctuation">)</span>  map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>locationControl<span class="token punctuation">)</span>  <span class="token comment">// 定位控件：定位成功事件</span>  locationControl<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'locationSuccess'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> address <span class="token operator">=</span> <span class="token string">''</span>    address <span class="token operator">+=</span> e<span class="token punctuation">.</span>addressComponent<span class="token punctuation">.</span>province    address <span class="token operator">+=</span> e<span class="token punctuation">.</span>addressComponent<span class="token punctuation">.</span>city    address <span class="token operator">+=</span> e<span class="token punctuation">.</span>addressComponent<span class="token punctuation">.</span>district    address <span class="token operator">+=</span> e<span class="token punctuation">.</span>addressComponent<span class="token punctuation">.</span>street    address <span class="token operator">+=</span> e<span class="token punctuation">.</span>addressComponent<span class="token punctuation">.</span>streetNumber    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'当前定位地址为：'</span> <span class="token operator">+</span> address<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 定位控件：定位失败事件,不清楚怎么用</span>  locationControl<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'locationError'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 地图拖拽停止事件</span>  map<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragend'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'地图拖拽停止'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Marker标记点 * @param point 百度坐标 * @param info_html 信息窗样式html **/</span><span class="token keyword">const</span> <span class="token function-variable function">createMarker</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">point<span class="token punctuation">,</span> info_html</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 创建小车图标</span>  <span class="token keyword">var</span> myIcon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Icon</span><span class="token punctuation">(</span>    <span class="token string">'https://img.ejiayou.com/upload/2021/1/671fdd0b-98ee-4bbc-b465-054e91ec09bd-1611049838910.png'</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span>  <span class="token comment">// 创建Marker标注，使用小车图标</span>  <span class="token keyword">var</span> marker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// icon: myIcon,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// marker标记点事件</span>  marker<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 打开对应的信息窗</span>    marker<span class="token punctuation">.</span><span class="token function">openInfoWindow</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>InfoWindow</span><span class="token punctuation">(</span>info_html<span class="token punctuation">)</span><span class="token punctuation">,</span> point<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 必须return marker，不然marker点击事件只会展示最后一个信息窗</span>  <span class="token keyword">return</span> marker<span class="token punctuation">&#125;</span><span class="token comment">/** * Marker标记点对应的文本标注 * @param point 百度坐标 * @param labelName 文本标注展示 **/</span><span class="token keyword">const</span> <span class="token function-variable function">createLabel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">point<span class="token punctuation">,</span> labelName</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 指定文本标注所在的地理位置</span>  <span class="token keyword">var</span> opts <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    position<span class="token operator">:</span> point<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 将标注添加到地图</span>  <span class="token keyword">var</span> label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span>labelName<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>  label<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    border<span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span>    padding<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    transform<span class="token operator">:</span> <span class="token string">'translateX(-50%) translateY(-200%)'</span><span class="token punctuation">,</span>    backgroundColor<span class="token operator">:</span> <span class="token string">'0.000000000001'</span><span class="token punctuation">,</span> <span class="token comment">//通过这个方法，去掉背景色</span>    backgroundSize<span class="token operator">:</span> <span class="token string">'100% 100%'</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> <span class="token string">'#333'</span><span class="token punctuation">,</span>    fontSize<span class="token operator">:</span> <span class="token string">'0.44rem'</span><span class="token punctuation">,</span>    fontWeight<span class="token operator">:</span> <span class="token string">'bold'</span><span class="token punctuation">,</span>    textShadow<span class="token operator">:</span> <span class="token string">'-0.05rem 0 white,0 0.05rem white,0.05rem 0 white,0 -0.05rem white'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  mapVm<span class="token punctuation">.</span><span class="token function">addOverlay</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 信息窗html模板 * @param data 数据 * @param list 数据展示的字段名，字段值 **/</span><span class="token keyword">const</span> <span class="token function-variable function">createHtml</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> list</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> context  list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>      context <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div>            &lt;span style='white-space:nowrap'></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token punctuation">[</span>item<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:&lt;/span>            &lt;span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">[</span>item<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span>        &lt;/div>      </span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div style='display:flex;flex-flow:column;font-size:0.8vw'></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>context<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span>  <span class="token keyword">return</span> html<span class="token punctuation">&#125;</span><span class="token comment">// 请求接口之后调用这个方法，渲染返回的数据展示，多个标记点</span><span class="token keyword">const</span> <span class="token function-variable function">addStationTag</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> list <span class="token operator">=</span> listDataByMap<span class="token punctuation">.</span>list <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">//接口数据</span>  <span class="token keyword">var</span> listKeyValue <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> key<span class="token operator">:</span> <span class="token string">'油站名'</span><span class="token punctuation">;</span> value<span class="token operator">:</span> <span class="token string">'stationName'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> key<span class="token operator">:</span> <span class="token string">'地址'</span><span class="token punctuation">;</span> value<span class="token operator">:</span> <span class="token string">'address'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> key<span class="token operator">:</span> <span class="token string">'价格'</span><span class="token punctuation">;</span> value<span class="token operator">:</span> <span class="token string">'price'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span> <span class="token comment">//接口数据对应key和value值</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'longitude'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'latitude'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token function">createLabel</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'stationName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token function">createHtml</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> listKeyValue<span class="token punctuation">)</span>      <span class="token keyword">var</span> marker <span class="token operator">=</span> <span class="token function">createMarker</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span> html<span class="token punctuation">)</span>      mapVm<span class="token punctuation">.</span><span class="token function">addOverlay</span><span class="token punctuation">(</span>marker<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取定位</span><span class="token keyword">const</span> <span class="token function-variable function">geolocation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> geolocation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Geolocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建定位对象</span>    geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//通过定位对象调用定位函数,回调函数形参r表示定位结果</span>    <span class="token comment">// this = geolocation这里this指向本身</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'BMAP_STATUS_SUCCESS'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//如果定位成功</span>        <span class="token keyword">var</span> mk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建标记,r是定位结果,r.point就是当前定位的地点</span>        mapVm<span class="token punctuation">.</span><span class="token function">addOverlay</span><span class="token punctuation">(</span>mk<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将标记对象添加到地图上</span>        mapVm<span class="token punctuation">.</span><span class="token function">panTo</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将地图中心点移动到定位地点</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// vite.config.ts文件配置</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 插件</span>  <span class="token keyword">const</span> plugins<span class="token operator">:</span> <span class="token punctuation">(</span>Plugin <span class="token operator">|</span> Plugin<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token function">resolveExternalsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      BMap<span class="token operator">:</span> <span class="token string">"BMap"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三方库（ant-vue）</title>
      <link href="/hexo/2023/06/07/san-fang-ku-ant-vue/"/>
      <url>/hexo/2023/06/07/san-fang-ku-ant-vue/</url>
      
        <content type="html"><![CDATA[<p>使用ant-vue组件一些小细节、坑点、这里列举常见的错误</p><a id="more"></a><p>输入框展示输入字符长度和限制长度</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>a<span class="token operator">-</span>input    <span class="token operator">:</span>suffix<span class="token operator">=</span><span class="token string">"`$&#123;formState.signNo.length&#125;/30`"</span>    <span class="token operator">:</span>maxlength<span class="token operator">=</span><span class="token string">"30"</span>    placeholder<span class="token operator">=</span><span class="token string">"如：F2200070"</span>    v<span class="token operator">-</span>model<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"formState.signNo"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://linmingqi.top/img/%E5%AD%97%E7%AC%A6%E9%95%BF%E5%BA%A6%E5%B1%95%E7%A4%BA.png"></p><p>按需导入使用时：引入CheckboxGroup找不到多选框报错</p><p><img src="http://linmingqi.top/img/%E5%BC%95%E5%85%A5%E5%A4%9A%E9%80%89%E6%A1%86%E6%8A%A5%E9%94%99.png"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 报错信息: 说找不到模块，到node_modules确实找不到es下有checkboxgroup</span>Module not found<span class="token operator">:</span> Error<span class="token operator">:</span> Can<span class="token string">'t resolve '</span>ant<span class="token operator">-</span>design<span class="token operator">-</span>vue<span class="token operator">/</span>es<span class="token operator">/</span>checkbox<span class="token operator">-</span>group<span class="token operator">/</span>style'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>正确使用</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox.Group</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox.Group</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>element-plus国际化</title>
      <link href="/hexo/2023/06/07/san-fang-ku-element-plus-guo-ji-hua/"/>
      <url>/hexo/2023/06/07/san-fang-ku-element-plus-guo-ji-hua/</url>
      
        <content type="html"><![CDATA[<p>element-puls解决日历组件里面的年月份周期没有汉化</p><a id="more"></a><h4 id="非常简单粗暴，直接引入以下模板直接使用即可"><a href="#非常简单粗暴，直接引入以下模板直接使用即可" class="headerlink" title="非常简单粗暴，直接引入以下模板直接使用即可"></a>非常简单粗暴，直接引入以下模板直接使用即可</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>el<span class="token operator">-</span>config<span class="token operator">-</span>provider <span class="token operator">:</span>locale<span class="token operator">=</span><span class="token string">"locale"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>router<span class="token operator">-</span>view <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>config<span class="token operator">-</span>provider<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ElConfigProvider <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'element-plus'</span><span class="token keyword">import</span> zhCn <span class="token keyword">from</span> <span class="token string">'element-plus/lib/locale/lang/zh-cn'</span><span class="token keyword">import</span> <span class="token string">'dayjs/locale/zh-cn'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">[</span>ElConfigProvider<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token operator">:</span> ElConfigProvider<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> locale <span class="token operator">=</span> zhCn    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      locale<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">npm<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ArrowLeftBold<span class="token punctuation">,</span> MoreFilled <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@element-plus/icons'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vant2.0的dialog函数组件实现异步关闭</title>
      <link href="/hexo/2023/06/07/san-fang-ku-vant2.0-de-dialog-han-shu-zu-jian/"/>
      <url>/hexo/2023/06/07/san-fang-ku-vant2.0-de-dialog-han-shu-zu-jian/</url>
      
        <content type="html"><![CDATA[<p>dialog 弹出框，取消按钮、确认按钮实现异步关闭不互相干扰（当点击确认异步任务，依然可以点击取消按钮执行异步任务），需要在执行完确认按钮的异步任务之前，禁用取消按钮的点击事件，vant3.0 已经添加了 confirmButtonDisabled、cancelButtonDisabled 禁用确认、取消按钮的属性配置。</p><a id="more"></a><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Dialog <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vant'</span><span class="token comment">/** * 通过节点来控制按钮的禁用状态，和样式 * @param &#123;String&#125; e 取消cancel、确认confirm * @param &#123;Boolean&#125; flag 是异步执行结果，原本done回调接收的参数，false阻止关闭，默认关闭 */</span><span class="token keyword">function</span> <span class="token function">disabledClose</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> flag <span class="token operator">=</span> <span class="token boolean">true</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'van-hairline--top van-dialog__footer'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token punctuation">.</span>childNodes  <span class="token comment">// 确认按钮：禁用取消按钮、取消按钮置灰</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">===</span> <span class="token string">'confirm'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    button<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> flag <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>    button<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>opacity <span class="token operator">=</span> flag <span class="token operator">?</span> <span class="token string">'0.5'</span> <span class="token operator">:</span> <span class="token string">'1'</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 取消按钮：禁用确认按钮、确认按钮置灰</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">===</span> <span class="token string">'cancel'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    button<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> flag <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>    button<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>opacity <span class="token operator">=</span> flag <span class="token operator">?</span> <span class="token string">'0.5'</span> <span class="token operator">:</span> <span class="token string">'1'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> confirm <span class="token operator">=</span> Dialog<span class="token punctuation">.</span>confirm<span class="token comment">// 重新封装dialog.confirm事件，相当于做一层拦截器，再调用原生事件之前，先把我自定义的事件执行</span>Dialog<span class="token punctuation">.</span><span class="token function-variable function">confirm</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>beforeClose<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*        dialog.confirm的beforeClose获取        接收两个参数action按钮值；done回调函数    */</span>    <span class="token keyword">const</span> beforeClose <span class="token operator">=</span> args<span class="token punctuation">.</span>beforeClose    <span class="token comment">/*         action是dialog弹出框cancel，confirm对应按钮点击值，        done是关闭函数，done(false)阻止弹出框关闭，done()关闭弹出框    */</span>    args<span class="token punctuation">.</span><span class="token function-variable function">beforeClose</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> done</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">disabledClose</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token comment">/*          自定义donefn函数，接收done回调方法，再把自定义事件disabledClose塞进去在这个节点执行，         donefn回调作为beforeClose的第二个参数植入         done本身接收参数false，就是阻止弹框关闭，true就是默认值，关闭弹框      */</span>      <span class="token keyword">const</span> <span class="token function-variable function">donefn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">done</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token function">disabledClose</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token function">beforeClose</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> donefn<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">confirm</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main.js 入口文件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 最后引入代码文件，正常使用</span><span class="token keyword">import</span> <span class="token string">'utils/dialog.js'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>App.vue 文件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Dialog <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vant'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">async</span> <span class="token function">bulleBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      data<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'中石化加油站'</span>      data<span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">'您距离加油站较远，请到达加油站与加油员金额后付款'</span>      data<span class="token punctuation">.</span>messageAlign <span class="token operator">=</span> <span class="token string">'left'</span>      data<span class="token punctuation">.</span>confirmButtonText <span class="token operator">=</span> <span class="token string">'刷新定位'</span>      data<span class="token punctuation">.</span>cancelButtonText <span class="token operator">=</span> <span class="token string">'我知道了'</span>      data<span class="token punctuation">.</span>confirmButtonColor <span class="token operator">=</span> <span class="token string">'rgb(255, 104, 28)'</span>      data<span class="token punctuation">.</span>beforeClose <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>locationBeforeClose      Dialog<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 定位异步关闭</span>    <span class="token function">locationBeforeClose</span><span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> done</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>action <span class="token operator">===</span> <span class="token string">'confirm'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>action <span class="token operator">===</span> <span class="token string">'cancel'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>loadash方法使用场景快速查找</title>
      <link href="/hexo/2023/06/07/san-fang-ku-lodash/"/>
      <url>/hexo/2023/06/07/san-fang-ku-lodash/</url>
      
        <content type="html"><![CDATA[<p>loadash方法使用场景快速查找</p><a id="more"></a><h2 id="map-数组对象找出对应key值"><a href="#map-数组对象找出对应key值" class="headerlink" title="map 数组对象找出对应key值"></a>map 数组对象找出对应key值</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> map <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'lodash'</span>type plainOptionsType <span class="token operator">=</span> <span class="token punctuation">&#123;</span> label<span class="token operator">:</span> string<span class="token punctuation">,</span> value<span class="token operator">:</span> number <span class="token punctuation">&#125;</span><span class="token keyword">const</span> plainOptions <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">as</span> Array<span class="token operator">&lt;</span>plainOptionsType<span class="token operator">></span><span class="token punctuation">)</span><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>plainOptions<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token string">'value'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Array<span class="token operator">&lt;</span>number<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="判断是否等于某个值"><a href="#判断是否等于某个值" class="headerlink" title="判断是否等于某个值"></a>判断是否等于某个值</h2><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0（keep-live缓存）</title>
      <link href="/hexo/2023/06/07/vue3.0-keep-live-huan-cun/"/>
      <url>/hexo/2023/06/07/vue3.0-keep-live-huan-cun/</url>
      
        <content type="html"><![CDATA[<p>keep-live 如何实现一些缓存组件、一些不需要缓存组件</p><a id="more"></a><p>设置meta属性的keepAlive属性，表示需要缓存，不需要不加</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  path<span class="token operator">:</span> <span class="token string">"/settlementManage"</span><span class="token punctuation">,</span>  title<span class="token operator">:</span> <span class="token string">"结算管理"</span><span class="token punctuation">,</span>  meta<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    keepAlive<span class="token operator">:</span> <span class="token string">"settlementInfo"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"@/views/settlementManage/settlementInfo/index.vue"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>keep-live组件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; Component &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span> <span class="token attr-name">:include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>includeList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Component<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获取路由路径名</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> includeList <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>includeList<span class="token punctuation">.</span>value <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>keepAlive <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">"string"</span> <span class="token operator">?</span> item <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取到所有的路由path路径名</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">以下几点需要注意：</font></p><ul><li><p>组件必须写name值并且不能重复，要不然缓存不会生效</p></li><li><p>vue3中使用了keep-alive缓存的页面，不要把注释写在和根节点同级的位置，不然很可能很有几率的报一些莫名其妙的错误</p></li><li><p>用keep-alive尽量使用include和exclude来动态缓存组件，这样更好控制也更明确。不要一股脑全塞进去，不然有的页面要缓存有点页面不需要缓存，在我们跳转到一个不需要缓存的页面，肯定会把我们之前缓存的组件全部干掉，导致所有页面都不缓存</p></li></ul><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0自定义表格hooks</title>
      <link href="/hexo/2023/06/07/vue3.0-zi-ding-yi-hooks-biao-ge/"/>
      <url>/hexo/2023/06/07/vue3.0-zi-ding-yi-hooks-biao-ge/</url>
      
        <content type="html"><![CDATA[<p>表格组件，搜索的时候都需要赋值然后调用接口，一旦表格多了，写太多重复代码，直接写一套公用的方法暴露出去，避免代码重复</p><a id="more"></a><p> validate文件</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;&#x2F; 格式化参数,判断值为空时,把这一项删除export const formatParams &#x3D; params &#x3D;&gt; &#123;  const obj &#x3D; &#123;&#125;  for (let key in params) &#123;    &#x2F;&#x2F; isEmpty是判空的方法    if (!isEmpty(params[key])) &#123;      obj[key] &#x3D; params[key]    &#125;  &#125;  return obj&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> useList文件</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">import &#123; ref, reactive &#125; from &#39;vue&#39;import &#123; formatParams &#125; from &#39;@&#x2F;utils&#x2F;validate&#39;&#x2F;&#x2F; 分页器export interface Pagination &#123;  total: number  current: number  pageSize: number  showSizeChanger: boolean  showQuickJumper: boolean  showTotal: (total: number, range: number) &#x3D;&gt; string  onChange: (page: number) &#x3D;&gt; void  onShowSizeChange: (current: number, size: number) &#x3D;&gt; void&#125;export type UseList &#x3D; (api: any, params: any, pageType?: any, removerLsit?: any[]) &#x3D;&gt; any&#x2F;** * 获取列表数据 * @param &#123;api&#125; queryListApi 接口 * @param &#123;object&#125; params 接口参数 * @param &#123;Array&#125; removerLsit 去除不传后台的字段 * @returns &#123;list, loading, pagination, getList, formRef, handleReset, handleCurrentChange, handleSizeChange&#125; *&#x2F;&#x2F;&#x2F; 去除 属性 Removerconst pageTypeObj &#x3D; &#123;  pageNum: &#39;pageNum&#39;,  pageSize: &#39;pageSize&#39;,  total: &#39;total&#39;,&#125;const useList: UseList &#x3D; (queryListApi, params, pageType &#x3D; &#123; ...pageTypeObj &#125;, removerLsit) &#x3D;&gt; &#123;  &#x2F;&#x2F; 不传分页类型且要传去除字段就做数据转移  &#x2F;&#x2F; Array.isArray()判断是否为数组  if (pageType &amp;&amp; Array.isArray(pageType)) &#123;    removerLsit &#x3D; pageType    pageType &#x3D; &#123; ...pageTypeObj &#125;  &#125;  &#x2F;&#x2F; 分页  const pagination &#x3D; reactive&lt;Pagination&gt;(&#123;    &#x2F;&#x2F; 数据总数    total: 0,    &#x2F;&#x2F; 当前页数    current: 1,    &#x2F;&#x2F; 每页条数    pageSize: 10,    &#x2F;&#x2F; 是否可以改变 pageSize    showSizeChanger: true,    &#x2F;&#x2F; 是否可以快速跳转至某页    showQuickJumper: true,    &#x2F;&#x2F; 页码或 pageSize 改变的回调，参数是改变后的页码及每页条数    showTotal: total &#x3D;&gt; &#96;共$&#123;total&#125;条&#96;,    &#x2F;&#x2F; pageSize 变化的回调    onChange: page &#x3D;&gt; handleCurrentChange(page),    onShowSizeChange: (current, size) &#x3D;&gt; handleSizeChange(size),  &#125;)  &#x2F;&#x2F; 获取列表数据  const loading &#x3D; ref&lt;boolean&gt;(false)  const dataObj &#x3D; reactive&lt;&#123; data: object &#125;&gt;(&#123; data: &#123;&#125; &#125;)  const getList &#x3D; async (): Promise&lt;void&gt; &#x3D;&gt; &#123;    loading.value &#x3D; true    const _params &#x3D; JSON.parse(JSON.stringify(params))    if (removerLsit &amp;&amp; removerLsit.length) &#123;      removerLsit.forEach(item &#x3D;&gt; &#123;        let list &#x3D; item.split(&#39;.&#39;)        if (list.length &#x3D;&#x3D; 2) &#123;          delete _params[list[0]][list[1]]        &#125; else &#123;          delete _params[item]        &#125;        list &#x3D; null      &#125;)    &#125;    try &#123;      const filterParams &#x3D; formatParams(_params)      const &#123; code, data &#125; &#x3D; await queryListApi(filterParams)      if (code &#x3D;&#x3D;&#x3D; 200) &#123;        dataObj.data &#x3D; Array.isArray(data) ? &#123; list: data &#125; : data        pagination.total &#x3D; data.total      &#125;    &#125; catch (error) &#123;      console.log(error)    &#125;    loading.value &#x3D; false  &#125;  &#x2F;&#x2F; 切换分页  const handleCurrentChange &#x3D; page &#x3D;&gt; &#123;    pagination.current &#x3D; params[pageType.pageNum] &#x3D; page    getList()  &#125;  &#x2F;&#x2F; 切换每页几条  const handleSizeChange &#x3D; size &#x3D;&gt; &#123;    pagination.current &#x3D; params[pageType.pageNum] &#x3D; 1    pagination.pageSize &#x3D; params[pageType.pageSize] &#x3D; size    getList()  &#125;  &#x2F;&#x2F; 排序  let order &#x3D; &#39;&#39;  let columnKey &#x3D; &#39;&#39;  const tableChange &#x3D; (args, orderType) &#x3D;&gt; &#123;    const sorter &#x3D; args[2]    if (sorter.columnKey &#x3D;&#x3D;&#x3D; undefined || (order &#x3D;&#x3D; sorter.order &amp;&amp; columnKey &#x3D;&#x3D;&#x3D; sorter.columnKey))      return    order &#x3D; sorter.order    columnKey &#x3D; sorter.columnKey    params.sortWay &#x3D; order &#x3D;&#x3D;&#x3D; &#39;descend&#39; ? 1 : 2    params.sortType &#x3D; orderType[columnKey] || 1    getList()  &#125;  &#x2F;&#x2F; 重置  const formRef &#x3D; ref()  const handleReset &#x3D; () &#x3D;&gt; &#123;    formRef.value?.resetFields()    handleCurrentChange(1)  &#125;  return &#123;    dataObj,    loading,    pagination,    getList,    formRef,    handleReset,    handleCurrentChange,    handleSizeChange,    tableChange,  &#125;&#125;export default useList<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 使用示例</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;    &lt;a-form class&#x3D;&quot;search&quot; ref&#x3D;&quot;formRef&quot; :model&#x3D;&quot;params&quot; :label-col&#x3D;&quot;&#123; span: 4 &#125;&quot;&gt;        &lt;a-row&gt;            &lt;a-col :span&#x3D;&quot;3&quot;&gt;            &lt;a-form-item name&#x3D;&quot;startTime&quot;&gt;                &lt;a-form-item&gt;                &lt;a-date-picker                    v-model:value&#x3D;&quot;params.startTime&quot;                    show-time                    type&#x3D;&quot;date&quot;                    valueFormat&#x3D;&quot;YYYY-MM-DD HH:mm:ss&quot;                    format&#x3D;&quot;YYYY-MM-DD HH:mm:ss&quot;                    placeholder&#x3D;&quot;请输入开始时间&quot; &#x2F;&gt;&lt;&#x2F;a-fo rm-item            &gt;&lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-col&gt;            &lt;a-col :span&#x3D;&quot;3&quot;&gt;            &lt;a-form-item name&#x3D;&quot;endTime&quot;&gt;                &lt;a-form-item&gt;                &lt;a-date-picker                    v-model:value&#x3D;&quot;params.endTime&quot;                    show-time                    type&#x3D;&quot;date&quot;                    valueFormat&#x3D;&quot;YYYY-MM-DD HH:mm:ss&quot;                    format&#x3D;&quot;YYYY-MM-DD HH:mm:ss&quot;                    placeholder&#x3D;&quot;请输入截至时间&quot;                &#x2F;&gt;                &lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-col&gt;            &lt;a-col :span&#x3D;&quot;3&quot;&gt;            &lt;a-form-item name&#x3D;&quot;impactCategory&quot;&gt;                &lt;a-form-item&gt;                &lt;a-select                    allowClear                    v-model:value&#x3D;&quot;params.impactCategory&quot;                    placeholder&#x3D;&quot;请选择影响类别&quot;                    @change&#x3D;&quot;selectChange&quot;                &gt;                    &lt;a-select-option                    v-for&#x3D;&quot;item in impactCategoryList&quot;                    :value&#x3D;&quot;item.label&quot;                    :key&#x3D;&quot;item.value&quot;                    &gt;                    &#123;&#123; item.label &#125;&#125;                    &lt;&#x2F;a-select-option&gt;                &lt;&#x2F;a-select&gt;                &lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-col&gt;            &lt;a-col :span&#x3D;&quot;3&quot;&gt;            &lt;a-form-item name&#x3D;&quot;influenceFactor&quot;&gt;                &lt;a-form-item&gt;                &lt;a-select                    allowClear                    v-model:value&#x3D;&quot;params.influenceFactor&quot;                    placeholder&#x3D;&quot;请选择影响因素&quot;                &gt;                    &lt;a-select-option                    v-for&#x3D;&quot;item in influenceFactorListCheck&quot;                    :value&#x3D;&quot;item.label&quot;                    :key&#x3D;&quot;item.label&quot;                    &gt;                    &#123;&#123; item.label &#125;&#125;                    &lt;&#x2F;a-select-option&gt;                &lt;&#x2F;a-select&gt;                &lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-col&gt;            &lt;a-col :span&#x3D;&quot;3&quot;&gt;            &lt;a-form-item name&#x3D;&quot;operator&quot;&gt;                &lt;a-form-item&gt;                &lt;a-input  v-model:value&#x3D;&quot;params.operator&quot; placeholder&#x3D;&quot;请选择操作人&quot; &#x2F;&gt;                &lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-form-item&gt;            &lt;&#x2F;a-col&gt;            &lt;a-col :span&#x3D;&quot;4&quot; class&#x3D;&quot;topButton&quot;&gt;            &lt;a-button type&#x3D;&quot;primary&quot; size&#x3D;&quot;medium&quot; @click&#x3D;&quot;getList&quot;&gt;查询&lt;&#x2F;a-button&gt;            &lt;a-button size&#x3D;&quot;medium&quot; @click&#x3D;&quot;handleReset&quot;&gt;重置&lt;&#x2F;a-button&gt;            &lt;&#x2F;a-col&gt;        &lt;&#x2F;a-row&gt;    &lt;&#x2F;a-form&gt;    &lt;a-table        row-key&#x3D;&quot;id&quot;        :columns&#x3D;&quot;operationLogColumns&quot;        :data-source&#x3D;&quot;dataObj.data.records || []&quot;        :loading&#x3D;&quot;loading&quot;        size&#x3D;&quot;small&quot;        :pagination&#x3D;&quot;&#123;        ...pagination,        onChange: (page) &#x3D;&gt; handleCurrentChange(page),        onShowSizeChange: (current, size) &#x3D;&gt; handleSizeChange(size),        &#125;&quot;    &gt;    &lt;&#x2F;a-table&gt;&lt;&#x2F;template&gt;&lt;script lang&#x3D;&quot;ts&quot;&gt;  import &#123; defineComponent, ref, reactive, onMounted, toRefs, UnwrapRef &#125; from &quot;vue&quot;;  &#x2F;&#x2F; 表格的设置取值  import &#123; operationLogColumns &#125; from &quot;@&#x2F;views&#x2F;configManage&#x2F;data&quot;;  &#x2F;&#x2F; 接口  import &#123; getInfo &#125; from &quot;..&#x2F;service&quot;;  &#x2F;&#x2F; 引入封装好的一套方法  import useList from &quot;@&#x2F;hooks&#x2F;useList&quot;;  &#x2F;&#x2F; 这些是数据,可以封装放在其他ts文件,也可以放在页面  import &#123;    impactCategoryList,    impactCategory,    influenceFactor,    operatorList,    operator,    influenceFactorListChange  &#125; from &quot;@&#x2F;utils&#x2F;filter&quot;;  export default defineComponent(&#123;    name: &quot;operationLog&quot;,    setup() &#123;      &#x2F;&#x2F; 接口请求参数      const params &#x3D; reactive(&#123;        startTime: undefined,        endTime: undefined,        impactCategory: undefined,        influenceFactor: undefined,        operator: undefined,        pageNum: 1, &#x2F;&#x2F; 当前页码1        pageSize: 10, &#x2F;&#x2F; 页容量      &#125;);      &#x2F;&#x2F; 一二级下拉框对应出现值的处理      const influenceFactorListCheck: any &#x3D; ref([])      const selectChange &#x3D; (val, option) &#x3D;&gt; &#123;        influenceFactorListCheck.value &#x3D; influenceFactorListChange(option?.key || null)      &#125;;      &#x2F;&#x2F; 解构赋值获取封装的方法,接口请求的数据      const &#123;        loading,        dataObj,        pagination,        getList,        formRef,        handleReset,        handleCurrentChange,        handleSizeChange,      &#125; &#x3D; useList(getInfo, params, &#123;        pageNum: &quot;pageNum&quot;,        pageSize: &quot;pageSize&quot;,        total: &quot;totalCount&quot;,      &#125;);      onMounted(()&#x3D;&gt;&#123;        getList()      &#125;);      return &#123;        params,        operationLogColumns,        loading,        dataObj,        pagination,        getList,        formRef,        handleReset,        handleCurrentChange,        handleSizeChange,        impactCategoryList,        impactCategory,        influenceFactorListChange,        influenceFactor,        operatorList,        operator,        selectChange,        influenceFactorListCheck      &#125;;    &#125;,  &#125;);&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
            <tag> 全局函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tailwind 原子类（样式库）</title>
      <link href="/hexo/2023/06/07/san-fang-ku-tailwind/"/>
      <url>/hexo/2023/06/07/san-fang-ku-tailwind/</url>
      
        <content type="html"><![CDATA[<p>每个样式单独拆解类名，组合使用</p><a id="more"></a><h2 id="优雅写法"><a href="#优雅写法" class="headerlink" title="优雅写法"></a>优雅写法</h2><h4 id="1-标签内class优雅"><a href="#1-标签内class优雅" class="headerlink" title="1.标签内class优雅"></a>1.标签内class优雅</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"['lottie', `lottie-$&#123;Index&#125;`]"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>定义类名加个标识后缀（数字最方便，循环的时候可以依据下标来实现对应效果），通过改变变量来控制样式变化</p><h4 id="2-style定义类优雅"><a href="#2-style定义类优雅" class="headerlink" title="2.style定义类优雅"></a>2.style定义类优雅</h4><p>Tailwind第三方css库<a href="https://www.tailwindcss.cn/docs">官网</a></p><p>通过 npm 安装 Tailwind</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">npm install <span class="token operator">-</span><span class="token constant">D</span> tailwindcss@npm<span class="token operator">:</span>@tailwindcss<span class="token operator">/</span>postcss7<span class="token operator">-</span>compat @tailwindcss<span class="token operator">/</span>postcss7<span class="token operator">-</span>compat postcss@<span class="token operator">^</span><span class="token number">7</span> autoprefixer@<span class="token operator">^</span><span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成tailwind.config.js 和 postcss.config.js 文件：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">npx tailwindcss init <span class="token operator">-</span>p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>项目使用</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//建一个css文件写入</span>@tailwind base<span class="token punctuation">;</span>@tailwind components<span class="token punctuation">;</span>@tailwind utilities<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在项目入口处引入新建的css文件即可</p><p>接下来配置 Tailwind 来移除生产环境下没有使用到的样式声明<br>tailwind.config.js 文件中，配置 purge 选项指定所有的 pages 和 components 文件，使得 Tailwind 可以在生产构建中对未使用的样式进行摇树优化。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">  module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token operator">-</span>   purge<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">+</span>   purge<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">'./src/**/*.&#123;vue,js,ts,jsx,tsx&#125;'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    darkMode<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// or 'media' or 'class'</span>    theme<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      extend<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    variants<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      extend<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 插件、依赖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react基础语法</title>
      <link href="/hexo/2023/06/07/react-yu-fa-ji-chu/"/>
      <url>/hexo/2023/06/07/react-yu-fa-ji-chu/</url>
      
        <content type="html"><![CDATA[<p>react 的 jsx 语法规则，三大核心属性，babel 严格模式，class 类的 this 指向问题，函数式组件，类式组件，事件绑定，state 值的取改</p><a id="more"></a><h3 id="react-库引入有顺序，先引入-react-js-再引入-react-dom-js-babel-是-jsx-转-js-的"><a href="#react-库引入有顺序，先引入-react-js-再引入-react-dom-js-babel-是-jsx-转-js-的" class="headerlink" title="react 库引入有顺序，先引入 react.js,再引入 react-dom.js;babel 是 jsx 转 js 的"></a><strong>react 库引入有顺序，先引入 react.js,再引入 react-dom.js;babel 是 jsx 转 js 的</strong></h3><p>script 标签引入，写 jsx 代码得 script 的属性是”text/babel”</p><p>shite+浏览器刷新图标（强制刷新）</p><h3 id="原生-js-写法。调用-react-的-api-创建虚拟-dom"><a href="#原生-js-写法。调用-react-的-api-创建虚拟-dom" class="headerlink" title="原生 js 写法。调用 react 的 api 创建虚拟 dom"></a><strong>原生 js 写法。调用 react 的 api 创建虚拟 dom</strong></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">react<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'标签名'</span>，<span class="token string">'id，类名'</span>，<span class="token string">'内容'</span><span class="token punctuation">)</span><span class="token keyword">const</span> Vdom <span class="token operator">=</span> react<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'h1'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token string">'test'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">'&lt;span>&lt;span>'</span><span class="token punctuation">)</span>这里视图显示<span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span>创建虚拟dom，内容里面只能是标签的文本，无法识别标签<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="babel-写法。-严格模式下-this-会指向-undefined，不会指向-window"><a href="#babel-写法。-严格模式下-this-会指向-undefined，不会指向-window" class="headerlink" title="babel 写法。(严格模式下 this 会指向 undefined，不会指向 window)"></a><strong>babel 写法。</strong>(严格模式下 this 会指向 undefined，不会指向 window)</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> Vdom <span class="token operator">=</span> <span class="token operator">&lt;</span>h1 id<span class="token operator">=</span><span class="token string">'test'</span><span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>ReactDom<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>Vdom<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="dom-对比"><a href="#dom-对比" class="headerlink" title="dom 对比"></a><strong>dom 对比</strong></h3><p>虚拟 dom 比较轻，真实 dom 重，原生的 dom 可以 console，打断点获取发现会有很多属性和 api；而虚拟 dom 是 react 用的，没有那么多繁琐的 api 和属性</p><h3 id="jsx-语法规则"><a href="#jsx-语法规则" class="headerlink" title="jsx 语法规则:"></a><strong>jsx 语法规则:</strong></h3><p>1.定义虚拟 DOMI 时，不要写引号 const Vdom = 111。</p><p>2.标签中混入 JS 表达式时要用{}，不包括 js 代码哦</p><ul><li><p>js 语句（代码）</p><p>下面这些都是语句（代码）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">​<span class="token keyword">if</span>（）<span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span>​<span class="token keyword">for</span>（）<span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span>​<span class="token keyword">switch</span>（）<span class="token punctuation">&#123;</span> <span class="token keyword">case</span>： xxxxxx <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>js 表达式，会产生一个值，可以放在任何一个需要值得地方</p><p>下面都是表达式</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">​console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>​a​a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>​a<span class="token operator">+</span>b​<span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  函数也有返回值​<span class="token keyword">function</span> a（）<span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.样式的类名指定不要用 c1ass，要用 className.</p><p>4.内联样式，要用 style={ {fikey: value} }的形式去写。</p><p>5.只有一个根标签</p><p>6.标签必须闭合</p><p>7.标签首字母</p><ul><li>小写就是转为 html 同名标签，无对应报错</li><li>大写就是自定义组件标签，没有定义组件报错，not defined</li></ul><p>8.注释</p></li></ul><p>{ }可以写 js 代码，js 代码的注释就可以用了</p><p>{//} 或者 {/* */}</p><h3 id="函数式组件"><a href="#函数式组件" class="headerlink" title="函数式组件"></a><strong>函数式组件</strong></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">//undefine</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>我我我我<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此处的 this 是因为 babel 编译后开启了严格模式</p><p>ReactDOM.render(<Demo>,document.getElementById(‘test’))</Demo></p><p>执行过程</p><ul><li>react 信息组件标签，找到对应组件</li><li>发现函数式组件，调用函数，将返回的虚拟的 dom 转为真实 dom，页面展示</li></ul><h3 id="类式组件"><a href="#类式组件" class="headerlink" title="类式组件"></a><strong>类式组件</strong></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// this指向 MyComonent实例对象，继承了React.Component的构造器</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2<span class="token operator">></span>我是组件<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/*    1.react解析组件标签，找到MyComonent组件    2.发现组件是使用类定义，随后new出来该类的实例（会自动帮你new 该类的实例）    3.虚拟dom转为真是dom，呈现页面*/</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="组件实例的三大核心属性（记得是实例，所以-class-类式组件才有核心属性，function-连-this-都没有）"><a href="#组件实例的三大核心属性（记得是实例，所以-class-类式组件才有核心属性，function-连-this-都没有）" class="headerlink" title="组件实例的三大核心属性（记得是实例，所以 class 类式组件才有核心属性，function 连 this 都没有）"></a><strong>组件实例的三大核心属性（记得是实例，所以 class 类式组件才有核心属性，function 连 this 都没有）</strong></h3><p><strong>state 组件数据，props 传值，refs 获取组件实例</strong></p><h4 id="state-组件数据"><a href="#state-组件数据" class="headerlink" title="state 组件数据"></a>state 组件数据</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token comment">// 原先state是null，通过构造器改变state</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span> isHot<span class="token operator">:</span> <span class="token string">'好热'</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">//发现state的值不再是null了，而是对象，里面有isHot属性</span>    <span class="token comment">// onclick必须大写onClick,这里是demo事件赋值给了onClick点击事件,假如写demo（）会undefined，因为你把demo的返回值赋值给了onClick了</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>h2 id<span class="token operator">=</span><span class="token string">"demo"</span> onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span>demo<span class="token punctuation">&#125;</span><span class="token operator">></span>        今天天气<span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isHot<span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/*1.react解析组件标签，找到MyComonent组件2.发现组件是使用类定义，随后new出来该类的实例（会自动帮你new 该类的实例）3.虚拟dom转为真是dom，呈现页面*/</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原生的事件绑定都可以用，获取节点 （尽量少用）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> demo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'demo'</span><span class="token punctuation">)</span>demo<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span>demo<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span> <span class="token string">' onclick '</span> <span class="token punctuation">,</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">></span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">demo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击了'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>自定义的函数拿不到类式组件实例对象里面的 state 值，this 指向 undefined 了</strong></p><p>1.<strong>可以直接 window 定义 that，在类式组件里面把 this 挂载到 that 上</strong></p><p>2.<strong>完整的在类式组件里面定义事件（类中方法的 this 指向，babel 的严格模式两点卡住了）</strong></p><p><strong>（注：这里的 onClick={this.demo}只是顺着原型链找到了 demo 函数并赋值，调用时是在堆里面找到这个函数调用，不是通过实例对象调用）</strong></p><p><strong>（神来之笔，直接通过 bind 改变 demo 事件的 this 指向即可）</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 构造器执行——————1次，在react解析时new了一次（构造器可写可不写）</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 构造器是否接收props，是否传递给super，取决于：是否希望在构造器中通过this访问props</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token comment">// 原先state是null，通过构造器改变state,必须是对象，setState修改时传的就是一个对象</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span> isHot<span class="token operator">:</span> <span class="token string">'好热'</span> <span class="token punctuation">&#125;</span>    <span class="token comment">//（神来之笔，直接通过bind改变demo事件的this指向即可）把原型上的demo挂载到自己的实例上，实例上有了就不会找原型链下面的demo，本质是同一个</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>demo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">demo</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// render执行————————1+n次，首次渲染初始化，n是状态更新的次数</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">//发现state的值不再是null了，而是对象，里面有isHot属性</span>    <span class="token comment">// onClick必须是this.demo,指向当前实例</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>h2 id<span class="token operator">=</span><span class="token string">"demo"</span> onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">&#125;</span><span class="token operator">></span>        今天天气<span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isHot<span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 通过MyComonent实例调用demo时，demo的this就是MyComonent实例</span>  <span class="token comment">// demo执行————————点几次调几次</span>  <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isHot<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/*1.react解析组件标签，找到MyComonent组件2.发现组件是使用类定义，随后new出来该类的实例（会自动帮你new 该类的实例）3.虚拟dom转为真是dom，呈现页面*/</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>react 的状态值不能直接更改，react 不认可这种写法，视图并不会更新（<strong>setState 是一个合并的动作</strong>，多个属性只会改变更新之后的）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isHot <span class="token operator">=</span> <span class="token string">'寒冷'</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  isHot<span class="token operator">:</span> <span class="token string">'寒冷'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//必须通过setState方法来改变状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简写模式</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  state <span class="token operator">=</span> <span class="token punctuation">&#123;</span> isHot<span class="token operator">:</span> <span class="token string">'好热'</span> <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">//发现state的值不再是null了，而是对象，里面有isHot属性</span>    <span class="token comment">// onClick必须是this.demo,指向当前实例</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>h2 id<span class="token operator">=</span><span class="token string">"demo"</span> onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">&#125;</span><span class="token operator">></span>        今天天气<span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isHot<span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 直接赋值demo为一个箭头函数，利用箭头函数没有this可以找到MyComonent实例对象的this。</span>  <span class="token function-variable function">demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      isHot<span class="token operator">:</span> <span class="token string">'寒冷'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="props-传值"><a href="#props-传值" class="headerlink" title="props 传值"></a>props 传值</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token comment">//拿到props：&#123; name: '爸爸'&#125;</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2<span class="token operator">></span>我是你<span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/*1.react解析组件标签，找到MyComonent组件2.发现组件是使用类定义，随后new出来该类的实例（会自动帮你new 该类的实例）3.虚拟dom转为真是dom，呈现页面*/</span><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'11'</span><span class="token punctuation">,</span>  sex<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  age<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent name<span class="token operator">=</span><span class="token string">"爸爸"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// p的key值全部传入</span><span class="token comment">// &#123;...p&#125;触发新语法，单纯...无法展开对象</span><span class="token comment">// react的&#123;&#125;只是表达式的语法，为什么可以...p是因为react和babel可以展开对象，仅仅供实例对象使用</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent <span class="token punctuation">&#123;</span><span class="token operator">...</span>p<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 传递number</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent name<span class="token operator">=</span><span class="token string">"爸爸"</span> age<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">18</span><span class="token punctuation">&#125;</span> click<span class="token operator">=</span><span class="token punctuation">&#123;</span>click<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 传参很繁琐，不知道传递的变量类型，必须在类式组件直接限制传递参数的类型，不符合报错</span><span class="token comment">// 16版本已经没有React.PropTypes，15之前还是有的,必须手动引入一个库</span>MyComonent<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 必传的字符串（isRequired）</span>  name<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>  <span class="token comment">// 字符串</span>  sex<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>  <span class="token comment">// 数字</span>  age<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>  <span class="token comment">// 函数</span>  click<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 没有传值时，默认值的展示</span>MyComonent<span class="token punctuation">.</span>defautProps <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  sex<span class="token operator">:</span> <span class="token string">'不男不女'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 简写模式</span><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token comment">//拿到props：&#123; name: '爸爸'&#125;</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2<span class="token operator">></span>我是你<span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 这里直接加给类实例对象，我需要的时加给这个类自身</span>  propTypes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 必传的字符串（isRequired）</span>    name<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>    <span class="token comment">// 字符串</span>    sex<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>    <span class="token comment">// 数字</span>    age<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>    <span class="token comment">// 函数</span>    click<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 这里直接加给类实例对象，我需要的时加给这个类自身</span>  <span class="token keyword">static</span> propTypes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 必传的字符串（isRequired）</span>    name<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>    <span class="token comment">// 字符串</span>    sex<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>    <span class="token comment">// 数字</span>    age<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>    <span class="token comment">// 函数</span>    click<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">static</span> defautProps <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    sex<span class="token operator">:</span> <span class="token string">'不男不女'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent name<span class="token operator">=</span><span class="token string">"爸爸"</span> age<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">18</span><span class="token punctuation">&#125;</span> click<span class="token operator">=</span><span class="token punctuation">&#123;</span>click<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>函数式组件可以使用 props 和传参校验</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 函数式组件只能接收props，因为函数有传参的规则，所以能接收到</span><span class="token keyword">function</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> click <span class="token punctuation">&#125;</span> <span class="token operator">=</span> props  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token punctuation">&#123;</span>click<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 函数式组件可以传参限制</span>demo<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 必传的字符串（isRequired）</span>  name<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>  <span class="token comment">// 字符串</span>  sex<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>  <span class="token comment">// 数字</span>  age<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>  <span class="token comment">// 函数</span>  click<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 没有传值时，默认值的展示</span>demo<span class="token punctuation">.</span>defautProps <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  sex<span class="token operator">:</span> <span class="token string">'不男不女'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent name<span class="token operator">=</span><span class="token string">"爸爸"</span> age<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">18</span><span class="token punctuation">&#125;</span> click<span class="token operator">=</span><span class="token punctuation">&#123;</span>click<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ref获取组件实例"><a href="#ref获取组件实例" class="headerlink" title="ref获取组件实例"></a>ref获取组件实例</h4><p>ref字符串形式</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 组件ref，获取节点refs</span><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> h2 <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>refs        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>h2<span class="token punctuation">.</span>value<span class="token punctuation">)</span>        <span class="token comment">// 这里获取到标签的value值，是真实dom的value值，获取这个节点有很多属性</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2 ref<span class="token operator">=</span><span class="token string">"h2"</span> onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">&#125;</span><span class="token operator">></span>我是你<span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token comment">// ref给标签一个标识</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent name<span class="token operator">=</span><span class="token string">"爸爸"</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ref回调形式：内联</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> input1 <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input1<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">//打印我是你</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 这个形参就是当前节点&lt;h2>&lt;/h2>,this.input1就是在MyComonent实例对象赋值，this指向render，render的this指向实例对象</span>        <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2 ref<span class="token operator">=</span><span class="token punctuation">&#123;</span> <span class="token punctuation">(</span><span class="token parameter">currentNode</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>input1 <span class="token operator">=</span> currentNode <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">&#125;</span><span class="token operator">></span>我是你<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ref回调形式：类名绑定</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComonent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>input <span class="token operator">=</span> c        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">//打印我是你爸爸</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 这个形参就是当前节点&lt;h2>&lt;/h2>,this.input1就是在MyComonent实例对象赋值，this指向render，render的this指向实例对象</span>        <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2 ref<span class="token operator">=</span><span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>demo <span class="token punctuation">&#125;</span> onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">&#125;</span><span class="token operator">></span>我是你<span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComonent name<span class="token operator">=</span><span class="token string">"版本"</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 内联和类名绑定没什么区别</span><span class="token comment">// 研究调用次数的问题：demo()打印多少次</span><span class="token comment">// 更新（视图改变）过程会执行两次，第一次打印null清空旧的ref，第二次打印当前节点</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>react.createRef()</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 生成一个容器，可以存储ref所标识的节点,只能存一个</span>    demoRef <span class="token operator">=</span> react<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    demoRef2 <span class="token operator">=</span>react<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function-variable function">click</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>demoRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function-variable function">click2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>demoRef2<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>h2 onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span>click<span class="token punctuation">&#125;</span> ref<span class="token operator">=</span><span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>demoRef <span class="token punctuation">&#125;</span> <span class="token operator">></span>数据<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>                <span class="token operator">&lt;</span>h2 onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span>click<span class="token punctuation">&#125;</span> ref<span class="token operator">=</span><span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>demoRef2 <span class="token punctuation">&#125;</span> <span class="token operator">></span>数据<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react非受控组件和受控组件</title>
      <link href="/hexo/2023/06/07/react-fei-shou-kong/"/>
      <url>/hexo/2023/06/07/react-fei-shou-kong/</url>
      
        <content type="html"><![CDATA[<p>非受控组件需要ref获取节点实例获取到value值，受控是把值更新存储到state，更新改变（避免了ref过度使用）</p><a id="more"></a><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 非受控组件</span><span class="token keyword">class</span> <span class="token class-name">demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//阻止表单提交</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> pass <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> passs<span class="token punctuation">)</span> <span class="token comment">//拿不到;$&#123;name.value&#125; , $&#123;pass.value&#125;这样才能拿到值</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">&#125;</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"name"</span> ref<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token parameter">c</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> c<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"pass"</span> ref<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token parameter">c</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pass <span class="token operator">=</span> c<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button<span class="token operator">></span>提交<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 受控组件(所有输入类的受到state状态改变)</span><span class="token keyword">class</span> <span class="token class-name">demo2</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    pass<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span>  <span class="token function-variable function">nameClick</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> name<span class="token operator">:</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function-variable function">passClick</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> pass<span class="token operator">:</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//阻止表单提交</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> pass <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> passs<span class="token punctuation">)</span> <span class="token comment">//拿到值</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">&#125;</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"name"</span> onChange<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>nameClick<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"pass"</span> onChange<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>passClick<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button<span class="token operator">></span>提交<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>React<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uni-app打包调试</title>
      <link href="/hexo/2023/06/07/uni-app-da-bao-diao-shi/"/>
      <url>/hexo/2023/06/07/uni-app-da-bao-diao-shi/</url>
      
        <content type="html"><![CDATA[<p>刚开始使用主题的时候肯定有不如意的地方，让你想优化都无从入手，列举一些改动的方法</p><a id="more"></a><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a><strong>调试</strong></h3><p>这里举例夜神模拟器</p><p><font color="#08c">1.到夜神模拟器文件所在目录<font color="red">\Nox</font>下，cmd打开控制台</font><br>&emsp;adb connect 127.0.0.1:62001<br>&emsp;adb devices</p><p><font color="#08c">2.打开夜神模拟器</font></p><p><font color="#08c">3.HBuilderX安装调试插件，系统环境变量Path下新建一个<font color="red">(C:\Users\EDY\Desktop)(<em>这里是你的路径</em>)</font>\HBuilderX\plugins\launcher\tools\adbs</font></p><p><font color="#08c">4.回到HBuilderX打开工具，运行配置，配置adb路径<font color="red">(C:/Program Files (x86)/Nox/bin)</font>这里是夜神模拟器的文件所在路径，记得对应到bin文件夹</font></p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a><strong>打包</strong></h3><p><font color="#08c">1.<a href="https://dev.dcloud.net.cn/app/index?type=0">开发者中心</a>创建应用，生成<font color="red">App id</font>、创建<font color="red">线上证书</font></font></p><p><font color="#08c">2.HBuilderX发行点击app云打包耐心等待即可</font></p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3 + TypeScript 警告找不到相应的模块</title>
      <link href="/hexo/2023/06/07/ts-jing-gao-mo-kuai-zhao-bu-dao/"/>
      <url>/hexo/2023/06/07/ts-jing-gao-mo-kuai-zhao-bu-dao/</url>
      
        <content type="html"><![CDATA[<p>项目里tsconfig.json文件配置属性</p><a id="more"></a><h3 id="在根目录（也就是-tsconfig-json这一级）下新建名为-”vue-d-ts“-的文件。文件名中的-”vue“-也可以改为任一名称。"><a href="#在根目录（也就是-tsconfig-json这一级）下新建名为-”vue-d-ts“-的文件。文件名中的-”vue“-也可以改为任一名称。" class="headerlink" title="在根目录（也就是 tsconfig.json这一级）下新建名为 ”vue.d.ts“ 的文件。文件名中的 ”vue“ 也可以改为任一名称。"></a>在根目录（也就是 tsconfig.json这一级）下新建名为 ”vue.d.ts“ 的文件。文件名中的 ”vue“ 也可以改为任一名称。</h3><h3 id="在-”vue-d-ts“-文件中写入以下声明："><a href="#在-”vue-d-ts“-文件中写入以下声明：" class="headerlink" title="在 ”vue.d.ts“ 文件中写入以下声明："></a>在 ”vue.d.ts“ 文件中写入以下声明：</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 以下两种方案二选一</span><span class="token comment">// 方案一</span>declare module <span class="token string">"*.vue"</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> Vue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 方案二</span>declare module <span class="token string">'*.vue'</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineComponent <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>  <span class="token keyword">const</span> Component<span class="token operator">:</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> defineComponent<span class="token operator">></span>  <span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="在-”tsconfig-json“-中，将第二步中创建的文件-”vue-d-ts“（或者你自己新建的其他名称的-d-ts-文件）添加到-include-中："><a href="#在-”tsconfig-json“-中，将第二步中创建的文件-”vue-d-ts“（或者你自己新建的其他名称的-d-ts-文件）添加到-include-中：" class="headerlink" title="在 ”tsconfig.json“ 中，将第二步中创建的文件 ”vue.d.ts“（或者你自己新建的其他名称的 .d.ts 文件）添加到 include 中："></a>在 ”tsconfig.json“ 中，将第二步中创建的文件 ”vue.d.ts“（或者你自己新建的其他名称的 .d.ts 文件）添加到 include 中：</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;include&quot;: [   &quot;vue.d.ts&quot;],<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hexo/2023/06/07/hexo-hello-world/"/>
      <url>/hexo/2023/06/07/hexo-hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>! 这是您的第一次使用。有关详细信息，请查看文档。如果您在使用Hexo时遇到任何问题，您可以在故障排除中<a href="https://hexo.io/docs/">找到答案</a>，也可以在<a href="https://github.com/hexojs/hexo/issues">Github上询问我</a>。</p><a id="more"></a><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="安装hexo框架"><a href="#安装hexo框架" class="headerlink" title="安装hexo框架"></a>安装hexo框架</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ npm install hexo-cli -g #全局安装hexo$ hexo -v #查看hexo版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="创建新帖子"><a href="#创建新帖子" class="headerlink" title="创建新帖子"></a>创建新帖子</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new &quot;My New Post&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><p>需要把.gitignore文件的.deploy*/注释掉</p><pre class="line-numbers language-bash1" data-language="bash1"><code class="language-bash1">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="gitee部署"><a href="#gitee部署" class="headerlink" title="gitee部署"></a>gitee部署</h2><p>这里最好部署是master分支，开发是dev分支</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># blog根目录_connfig.ymldeploy:  type: git   repo: https:&#x2F;&#x2F;gitee.com&#x2F;lin-mingqi&#x2F;linmingqi.git #gitee仓库路径  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>无法上传theme主题文件夹到github上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 先从暂存区删除$ git rm --cache themes&#x2F;hexo-theme-icarus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>之后在theme对应文件夹下.gitignore清空，之后重新上传解决</p><p><a href="https://zhuanlan.zhihu.com/p/349280018">上传theme主题指南</a></p><h2 id="hexo插件依赖问题"><a href="#hexo插件依赖问题" class="headerlink" title="hexo插件依赖问题"></a>hexo插件依赖问题</h2><h3 id="主题修改"><a href="#主题修改" class="headerlink" title="主题修改"></a>主题修改</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 根目录_connfig.ymltheme: 主题文件夹名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>无法上传theme主题文件夹到github上，<a href="https://zhuanlan.zhihu.com/p/349280018">上传theme主题</a></p><h3 id="文章排序不生效（patch-package-插件实现，动态修改node-modules依赖）"><a href="#文章排序不生效（patch-package-插件实现，动态修改node-modules依赖）" class="headerlink" title="文章排序不生效（patch-package 插件实现，动态修改node_modules依赖）"></a>文章排序不生效（patch-package 插件实现，动态修改node_modules依赖）</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token string">'use strict'</span><span class="token punctuation">;</span><span class="token keyword">var</span> pagination <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'hexo-pagination'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">locals</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">;</span>  <span class="token keyword">var</span> posts <span class="token operator">=</span> locals<span class="token punctuation">.</span>posts<span class="token punctuation">;</span>    posts<span class="token punctuation">.</span>data <span class="token operator">=</span> posts<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 两篇文章top都有定义</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">==</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment">// 若top值一样则按照文章日期降序排</span>            <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>top <span class="token operator">-</span> a<span class="token punctuation">.</span>top<span class="token punctuation">;</span> <span class="token comment">// 否则按照top值降序排</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span>            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment">// 都没定义按照文章日期降序排</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> paginationDir <span class="token operator">=</span> config<span class="token punctuation">.</span>pagination_dir <span class="token operator">||</span> <span class="token string">'page'</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">pagination</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> posts<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    perPage<span class="token operator">:</span> config<span class="token punctuation">.</span>index_generator<span class="token punctuation">.</span>per_page<span class="token punctuation">,</span>    layout<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">,</span> <span class="token string">'archive'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    format<span class="token operator">:</span> paginationDir <span class="token operator">+</span> <span class="token string">'/%d/'</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      __index<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码块中的-无法解析问题解决"><a href="#代码块中的-无法解析问题解决" class="headerlink" title="代码块中的{}无法解析问题解决"></a>代码块中的{}无法解析问题解决</h3><p>node_modules/hexo-prism-plugin/src/index.js文件中map里未支持大括号，补上以下内容后发现有效，即在map中加上对应字符即可:</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token string">'&amp;#39;'</span><span class="token operator">:</span> <span class="token string">'\''</span><span class="token punctuation">,</span>  <span class="token string">'&amp;amp;'</span><span class="token operator">:</span> <span class="token string">'&amp;'</span><span class="token punctuation">,</span>  <span class="token string">'&amp;gt;'</span><span class="token operator">:</span> <span class="token string">'>'</span><span class="token punctuation">,</span>  <span class="token string">'&amp;lt;'</span><span class="token operator">:</span> <span class="token string">'&lt;'</span><span class="token punctuation">,</span>  <span class="token string">'&amp;quot;'</span><span class="token operator">:</span> <span class="token string">'"'</span><span class="token punctuation">,</span>  <span class="token string">'&amp;#123;'</span><span class="token operator">:</span> <span class="token string">'&#123;'</span><span class="token punctuation">,</span><span class="token comment">//添加的代码</span>  <span class="token string">'&amp;#125;'</span><span class="token operator">:</span> <span class="token string">'&#125;'</span><span class="token comment">//添加的代码</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="hexo-theme-matery主题"><a href="#hexo-theme-matery主题" class="headerlink" title="hexo-theme-matery主题"></a>hexo-theme-matery主题</h3><p><a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">使用指南</a></p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="hexo-提交部署报错"><a href="#hexo-提交部署报错" class="headerlink" title="hexo 提交部署报错"></a>hexo 提交部署报错</h3><p>生成ssh秘钥，直接默认回车保存在 “C盘://用户主目录/.ssh/id_rsa.pub”</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-keygen -t rsa -C &quot;comment&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>记事本打开复制，到github网站的setting下找到钥匙图标 新建秘钥 复制黏贴生成的秘钥，记得勾选读写权限</p><p>回到hexo根目录下的_config.yml</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: git  repo: git@github.com:rewhtie&#x2F;hexo.git #ssh地址  branch: master #部署推送分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript配置编译项</title>
      <link href="/hexo/2023/06/07/ts-pei-zhi-bian-yi-xiang/"/>
      <url>/hexo/2023/06/07/ts-pei-zhi-bian-yi-xiang/</url>
      
        <content type="html"><![CDATA[<p>项目里tsconfig.json文件配置属性</p><a id="more"></a><h3 id="自动编译文件"><a href="#自动编译文件" class="headerlink" title="自动编译文件"></a>自动编译文件</h3><p>编译文件时，使用 -w 指令后，TS编译器会自动监视文件的变化，并在文件发生变化时对文件进行重新编译。</p><p>示例：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">tsc xxx.ts -w<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="自动编译整个项目"><a href="#自动编译整个项目" class="headerlink" title="自动编译整个项目"></a>自动编译整个项目</h3><p>如果直接使用tsc指令，则可以自动将当前项目下的所有ts文件编译为js文件。</p><p><strong>但是能直接使用tsc命令的前提时，要先在项目根目录下创建一个ts的配置文件 tsconfig.json</strong></p><p>tsconfig.json是一个JSON文件，添加配置文件后，只需只需 tsc 命令即可完成对整个项目的编译</p><p>配置选项：</p><h4 id="include"><a href="#include" class="headerlink" title="include"></a><strong>include</strong></h4><ul><li>定义希望被编译文件所在的目录</li><li>默认值：[“**/*“]</li></ul><p>示例：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;include&quot;:[&quot;src&#x2F;**&#x2F;*&quot;, &quot;tests&#x2F;**&#x2F;*&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述示例中，所有src目录和tests目录下的文件都会被编译</p><h4 id="exclude"><a href="#exclude" class="headerlink" title="exclude"></a><strong>exclude</strong></h4><ul><li>定义需要排除在外的目录</li><li>默认值：[“node_modules”, “bower_components”, “jspm_packages”]</li></ul><p>示例：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;exclude&quot;: [&quot;.&#x2F;src&#x2F;hello&#x2F;**&#x2F;*&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述示例中，src下hello目录下的文件都不会被编译</p><h4 id="extends"><a href="#extends" class="headerlink" title="extends"></a><strong>extends</strong></h4><ul><li>  定义被继承的配置文件</li></ul><p>示例：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;extends&quot;: &quot;.&#x2F;configs&#x2F;base&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述示例中，当前配置文件中会自动包含config目录下base.json中的所有配置信息</p><h4 id="files"><a href="#files" class="headerlink" title="files"></a><strong>files</strong></h4><ul><li>  指定被编译文件的列表，<strong>只有需要编译的文件少时才会用到</strong></li></ul><p>示例：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;files&quot;: [    &quot;core.ts&quot;,    &quot;sys.ts&quot;,    &quot;types.ts&quot;,    &quot;scanner.ts&quot;,    &quot;parser.ts&quot;,    &quot;utilities.ts&quot;,    &quot;binder.ts&quot;,    &quot;checker.ts&quot;,    &quot;tsc.ts&quot;  ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>列表中的文件都会被TS编译器所编译</li></ul><h4 id="compilerOptions"><a href="#compilerOptions" class="headerlink" title="compilerOptions"></a>compilerOptions</h4><ul><li>编译选项是配置文件中非常重要也比较复杂的配置选项</li><li>在compilerOptions中包含多个子选项，用来完成对编译的配置</li></ul><p>项目选项：</p><ul><li><p>target</p><ul><li><p>设置ts代码编译的目标版本</p></li><li><p>可选值：</p><ul><li>ES3（默认）、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext</li></ul></li><li><p>示例：</p><ul><li>```json<br>“compilerOptions”: {<pre><code>&quot;target&quot;: &quot;ES6&quot;</code></pre>}<pre class="line-numbers language-none"><code class="language-none">      - 如上设置，我们所编写的ts代码将会被编译为ES6版本的js代码  - lib  - 指定代码运行时所包含的库（宿主环境）  - 可选值：    - ES5、ES6&#x2F;ES2015、ES7&#x2F;ES2016、ES2017、ES2018、ES2019、ES2020、ESNext、DOM、WebWorker、ScriptHost ......  - 示例：    - &#96;&#96;&#96;json      &quot;compilerOptions&quot;: &#123;          &quot;target&quot;: &quot;ES6&quot;,          &quot;lib&quot;: [&quot;ES6&quot;, &quot;DOM&quot;],          &quot;outDir&quot;: &quot;dist&quot;,          &quot;outFile&quot;: &quot;dist&#x2F;aa.js&quot;      &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li><li><p>module</p><ul><li><p>设置编译后代码使用的模块化系统</p></li><li><p>可选值：</p><ul><li>CommonJS、UMD、AMD、System、ES2020、ESNext、None</li></ul></li><li><p>示例：</p><ul><li>```typescript<br>“compilerOptions”: {<pre><code>&quot;module&quot;: &quot;CommonJS&quot;</code></pre>}<pre class="line-numbers language-none"><code class="language-none">- outDir  - 编译后文件的所在目录  - 默认情况下，编译后的js文件会和ts文件位于相同的目录，设置outDir后可以改变编译后文件的位置  - 示例：    - &#96;&#96;&#96;json      &quot;compilerOptions&quot;: &#123;          &quot;outDir&quot;: &quot;dist&quot;      &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>设置后编译后的js文件将会生成到dist目录</li></ul></li></ul></li><li><p>outFile</p><ul><li><p>将所有的文件编译为一个js文件</p></li><li><p>默认会将所有的编写在全局作用域中的代码合并为一个js文件，如果module制定了None、System或AMD则会将模块一起合并到文件之中</p></li><li><p>示例：</p><ul><li>```json<br>“compilerOptions”: {<pre><code>&quot;outFile&quot;: &quot;dist/app.js&quot;</code></pre>}<pre class="line-numbers language-none"><code class="language-none">- rootDir  - 指定代码的根目录，默认情况下编译后文件的目录结构会以最长的公共目录为根目录，通过rootDir可以手动指定根目录  - 示例：    - &#96;&#96;&#96;json      &quot;compilerOptions&quot;: &#123;          &quot;rootDir&quot;: &quot;.&#x2F;src&quot;      &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li><li><p>allowJs</p><ul><li>是否对js文件编译(默认是false)</li></ul></li><li><p>checkJs</p><ul><li><p>是否对js文件进行检查(默认是false)</p></li><li><p>示例：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;compilerOptions&quot;: &#123;    &quot;allowJs&quot;: true,    &quot;checkJs&quot;: true&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>removeComments</p><ul><li>是否删除注释</li><li>默认值：false</li></ul></li><li><p>noEmit</p><ul><li>不对代码进行编译</li><li>默认值：false</li></ul></li><li><p>noEmitOnError</p><ul><li>有错误的情况下不进行编译</li><li>默认值：false</li></ul></li><li><p>sourceMap</p><ul><li>是否生成sourceMap</li><li>默认值：false</li></ul></li><li><p>严格检查</p><ul><li>strict<ul><li>启用所有的严格检查，默认值为true，设置后相当于开启了所有的严格检查</li></ul></li><li>alwaysStrict<ul><li>总是以严格模式对代码进行编译(默认false)</li></ul></li><li>noImplicitAny<ul><li>禁止隐式的any类型(默认false)</li></ul></li><li>noImplicitThis<ul><li>禁止类型不明确的this(默认false)</li></ul></li><li>strictBindCallApply<ul><li>严格检查bind、call和apply的参数列表(默认false)</li></ul></li><li>strictFunctionTypes<ul><li>严格检查函数的类型(默认false)</li></ul></li><li>strictNullChecks<ul><li>严格的空值检查(默认false)</li></ul></li><li>strictPropertyInitialization<ul><li>严格检查属性是否初始化(默认false)</li></ul></li></ul></li><li><p>额外检查</p><ul><li>noFallthroughCasesInSwitch<ul><li>检查switch语句包含正确的break(默认false)</li></ul></li><li>noImplicitReturns<ul><li>检查函数没有隐式的返回值(默认false)</li></ul></li><li>noUnusedLocals<ul><li>检查未使用的局部变量(默认false)</li></ul></li><li>noUnusedParameters<ul><li>检查未使用的参数(默认false)</li></ul></li></ul></li><li><p>高级</p><ul><li>allowUnreachableCode<ul><li>检查不可达代码</li><li>可选值：<ul><li>true，忽略不可达代码</li><li>false，不可达代码将引起错误</li></ul></li></ul></li></ul></li></ul><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react生命周期</title>
      <link href="/hexo/2023/06/07/react-sheng-ming-zhou-qi/"/>
      <url>/hexo/2023/06/07/react-sheng-ming-zhou-qi/</url>
      
        <content type="html"><![CDATA[<p>包括 react 旧生命周期和新生命周期，初始化、视图更新分别对应的生命周期流程</p><a id="more"></a><h2 id="旧的生命周期（无代码顺序，由-react-决定执行顺序）"><a href="#旧的生命周期（无代码顺序，由-react-决定执行顺序）" class="headerlink" title="旧的生命周期（无代码顺序，由 react 决定执行顺序）"></a>旧的生命周期（无代码顺序，由 react 决定执行顺序）</h2><p><strong>（1）初始化时（ReactDOM.render()触发）</strong></p><p>&emsp;&emsp;1.constructor（运行一次，可读数据，可同步修改 state，异步修改 state 需要 setState,setState 在实例产生后才可以使用，可以访问到 props）</p><p>&emsp;&emsp;2.即将挂载 componentWillMount</p><p>&emsp;&emsp;3.render (创建虚拟 dom，进行 diff 算法，更新 dom 树)</p><p>&emsp;&emsp;4.组件渲染之后调用 componentDidMount (一般在这个钩子中做一些初始化的事，例如：开启定时器、发送网络请求、订阅消息) 常用更新阶段</p><p><strong>（2）更新时（正常顺序）（setState()触发）</strong></p><p>&emsp;&emsp;1.setState 数据更改</p><p>&emsp;&emsp;2.shouldComponentUpdate 是否需要更新（return true 就会更新 dom，false 阻止更新）</p><p>&emsp;&emsp;3.componentwillUpdate</p><p>&emsp;&emsp;4.render</p><p>&emsp;&emsp;5.componentDidMount</p><p><strong>（3）强制更新（setState 没有数据更改）（forceUpdate()触发）</strong></p><p>&emsp;&emsp;1.forceUpdate 强制更新</p><p>&emsp;&emsp;2.componentwillUpdate（不会被 shouldComponentUpdate 阀门 false 阻止）</p><p>&emsp;&emsp;3.render</p><p>&emsp;&emsp;4.componentDidMount</p><p><strong>（4）父组件数据更新，子组件更新（componentWillReceiveProps 第一次父组件挂载不会触发，传入新的 props 才会触发）</strong></p><p>&emsp;&emsp;1.父：setState —— shouldComponentUpdate —— componentwillUpdate —— render —— componentDidMount</p><p>&emsp;&emsp;2.子：componentWillReceiveProps —— shouldComponentUpdate —— componentwillUpdate —— render —— componentDidMount</p><p><strong>componentWillReceiveProps(props){ console.log(‘可以接收到’,props) }</strong></p><p>&emsp;&emsp;更新阶段 componentDidUpdate 组件数据更新完成后调用</p><p>&emsp;&emsp;卸载阶段 compoenentWillUnmount (即将卸载，可以做一些组件相关的清理工作，如青春计时器、网络请求等 )常用</p><p>&emsp;&emsp;组件卸载： unmountComponentAtNode(document.getElementById(‘root’))</p><p>&emsp;&emsp;所有子组件挂载完成，才标记着父组件挂载完成，父组件更新，子组件更新，子组件更新，子组件不更新</p><p>&emsp;&emsp;新的生命周期有小改动（不是安全性问题，只是未来版本异步渲染可能带来的 bug）前缀加 UNSAFE_</p><p>&emsp;&emsp;&emsp;&emsp;UNSAFE_componentWillUpdate()<br>&emsp;&emsp;&emsp;&emsp;UNSAFE_componentWillReceiveProps()<br>&emsp;&emsp;&emsp;&emsp;UNSAFE_componentWillMount()</p><p><strong>旧生命周期 demo</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//创建组件</span><span class="token keyword">class</span> <span class="token class-name">Count</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//构造器</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---constructor'</span><span class="token punctuation">)</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token comment">//初始化状态</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//加1按钮的回调</span>  <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">//获取原状态</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state    <span class="token comment">//更新状态</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> count<span class="token operator">:</span> count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//卸载组件按钮的回调</span>  <span class="token function-variable function">death</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    ReactDOM<span class="token punctuation">.</span><span class="token function">unmountComponentAtNode</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//强制更新按钮的回调</span>  <span class="token function-variable function">force</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件将要挂载的钩子</span>  <span class="token function">componentWillMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---componentWillMount'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件挂载完毕的钩子</span>  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---componentDidMount'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件将要卸载的钩子</span>  <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---componentWillUnmount'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//控制组件更新的“阀门”</span>  <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---shouldComponentUpdate'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件将要更新的钩子</span>  <span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---componentWillUpdate'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件更新完毕的钩子</span>  <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---componentDidUpdate'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---render'</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>当前求和为：<span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>add<span class="token punctuation">&#125;</span><span class="token operator">></span>点我<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>death<span class="token punctuation">&#125;</span><span class="token operator">></span>卸载组件<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">&#125;</span><span class="token operator">></span>不更改任何状态中的数据，强制更新一下<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//父组件A</span><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//初始化状态</span>  state <span class="token operator">=</span> <span class="token punctuation">&#123;</span> carName<span class="token operator">:</span> <span class="token string">'奔驰'</span> <span class="token punctuation">&#125;</span>  <span class="token function-variable function">changeCar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> carName<span class="token operator">:</span> <span class="token string">'奥拓'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>我是<span class="token constant">A</span>组件<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeCar<span class="token punctuation">&#125;</span><span class="token operator">></span>换车<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token constant">B</span> carName<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>carName<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//子组件B</span><span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//组件将要接收新的props的钩子</span>  <span class="token function">componentWillReceiveProps</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'B---componentWillReceiveProps'</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//控制组件更新的“阀门”</span>  <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'B---shouldComponentUpdate'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件将要更新的钩子</span>  <span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'B---componentWillUpdate'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件更新完毕的钩子</span>  <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'B---componentDidUpdate'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'B---render'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>我是<span class="token constant">B</span>组件，接收到的车是<span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>carName<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//渲染组件</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Count <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新的生命周期（新增了-getDerivedStateFromProps、getSonapshotBeforeUpdate-来替代弃用的三个钩子函数-compostWillMount、componentWillReceiveProps、componentWillUpdate）"><a href="#新的生命周期（新增了-getDerivedStateFromProps、getSonapshotBeforeUpdate-来替代弃用的三个钩子函数-compostWillMount、componentWillReceiveProps、componentWillUpdate）" class="headerlink" title="新的生命周期（新增了 getDerivedStateFromProps、getSonapshotBeforeUpdate 来替代弃用的三个钩子函数(compostWillMount、componentWillReceiveProps、componentWillUpdate）"></a>新的生命周期（新增了 getDerivedStateFromProps、getSonapshotBeforeUpdate 来替代弃用的三个钩子函数(compostWillMount、componentWillReceiveProps、componentWillUpdate）</h2><p><strong>（1）加载时</strong></p><p>&emsp;&emsp;1.getDerivedStateFromProps(props,state)</p><p>&emsp;&emsp;2.render()</p><p>&emsp;&emsp;3.componentDidMount()</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">渲染前 <span class="token keyword">static</span> <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span>state<span class="token punctuation">)</span>无法访问<span class="token keyword">this</span>props<span class="token punctuation">,</span>state是更新后的必须返回一个对象，用来 更新state 或者 <span class="token keyword">null</span>不更新必须要初始化state场景：state的值在任何时候都取决于props时<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>（2）更新时</strong></p><p>&emsp;&emsp;1.getDerivedStateFromProps(props,state)</p><p>&emsp;&emsp;2.render()</p><p>&emsp;&emsp;3.getSnapshortBeforeUpdate(prevProps,prevState)（更新前拿到一些页面的快照）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">组件能在发生更改之前从<span class="token constant">DOM</span><span class="token function">中捕获一些信息</span><span class="token punctuation">(</span>dom渲染前的状态<span class="token punctuation">,</span>例如滚动位置<span class="token punctuation">)</span>返回值｜<span class="token keyword">null</span> 会给componentDidUpdateprevProps、prevState 更新前<span class="token keyword">this</span><span class="token punctuation">.</span>props、<span class="token keyword">this</span><span class="token punctuation">.</span>state更新后<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>新的生命周期 demo</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Count</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---constructor'</span><span class="token punctuation">)</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token comment">//初始化状态</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//加1按钮的回调</span>  <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">//获取原状态</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state    <span class="token comment">//更新状态</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> count<span class="token operator">:</span> count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//卸载组件按钮的回调</span>  <span class="token function-variable function">death</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    ReactDOM<span class="token punctuation">.</span><span class="token function">unmountComponentAtNode</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//强制更新按钮的回调</span>  <span class="token function-variable function">force</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//若state的值在任何时候都取决于props，那么可以使用getDerivedStateFromProps</span>  <span class="token keyword">static</span> <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'getDerivedStateFromProps'</span><span class="token punctuation">,</span> props<span class="token punctuation">,</span> state<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token keyword">null</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//在更新之前获取快照</span>  <span class="token function">getSnapshotBeforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'getSnapshotBeforeUpdate'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">'atguigu'</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件挂载完毕的钩子</span>  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---componentDidMount'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件将要卸载的钩子</span>  <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---componentWillUnmount'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//控制组件更新的“阀门”</span>  <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---shouldComponentUpdate'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//组件更新完毕的钩子</span>  <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token parameter">preProps<span class="token punctuation">,</span> preState<span class="token punctuation">,</span> snapshotValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---componentDidUpdate'</span><span class="token punctuation">,</span> preProps<span class="token punctuation">,</span> preState<span class="token punctuation">,</span> snapshotValue<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Count---render'</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>当前求和为：<span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>add<span class="token punctuation">&#125;</span><span class="token operator">></span>点我<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>death<span class="token punctuation">&#125;</span><span class="token operator">></span>卸载组件<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">&#125;</span><span class="token operator">></span>不更改任何状态中的数据，强制更新一下<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//渲染组件</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Count count<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">199</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js类的继承</title>
      <link href="/hexo/2023/06/07/js-lei-de-fu-xi/"/>
      <url>/hexo/2023/06/07/js-lei-de-fu-xi/</url>
      
        <content type="html"><![CDATA[<p>复习类的知识点</p><a id="more"></a><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/*1.类的构造器不是必须写的，对实例进行初始化操作，如添加指定属性才写2.A类继承了B类，A类写了构造器，A类的super必须调用*/</span><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 构造器的 this是类的实例对象</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">,</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age    <span class="token punctuation">&#125;</span>    <span class="token comment">// 并没有找到speak函数，放到了类的原型对象上，供实例使用</span>    <span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 类可以直接写复制语句</span>    a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token comment">// 定义了类，继承了类，里面写了构造器，满足三点super必须调用</span><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 创建一个类，继承于person类</span><span class="token keyword">class</span> <span class="token class-name">aaa</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>grade</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// this.name = name,</span>        <span class="token comment">// this.age = age,</span>        <span class="token comment">// 必须在最开始前调用super</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>grade <span class="token operator">=</span> grade    <span class="token punctuation">&#125;</span>    <span class="token comment">// 重写从父类继承过来的方法,这里的speak和Person类里面的speak不一样</span>    <span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>grade<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">aaa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// s1能调用speak方法，原型链查找</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript基本类型</title>
      <link href="/hexo/2023/06/07/ts-ji-ben-lei-xing/"/>
      <url>/hexo/2023/06/07/ts-ji-ben-lei-xing/</url>
      
        <content type="html"><![CDATA[<p>TS定义变量的类型,在TS中是最常用的最基本的</p><a id="more"></a><h2 id="TypeScript-中的基本类型"><a href="#TypeScript-中的基本类型" class="headerlink" title="TypeScript 中的基本类型"></a><strong>TypeScript 中的基本类型</strong></h2><p>TypeScript 中的基本类型：</p><ul><li><p>类型声明</p><ul><li><p>类型声明是 TS 非常重要的一个特点；</p></li><li><p>通过类型声明可以指定 TS 中变量（参数、形参）的类型；</p></li><li><p>指定类型后，当为变量赋值时，TS 编译器会自动检查值是否符合类型声明，符合则赋值，否则报错；</p></li><li><p>简而言之，类型声明给变量设置了类型，使得变量只能存储某种类型的值；</p></li><li><p>语法：</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let 变量: 类型;let 变量: 类型 &#x3D; 值;function fn(参数: 类型, 参数: 类型): 类型&#123;    ...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>自动类型判断</p><ul><li>TS 拥有自动的类型判断机制</li><li>当对变量的声明和赋值是同时进行的，TS 编译器会自动判断变量的类型</li><li>所以如果你的变量的声明和赋值时同时进行的，可以省略掉类型声明</li></ul></li><li><p>类型：</p><table><thead><tr><th align="center"><strong>类型</strong></th><th align="center"><strong>例子</strong></th><th align="center"><strong>描述</strong></th></tr></thead><tbody><tr><td align="center">number</td><td align="center">1, -33, 2.5</td><td align="center">任意数字</td></tr><tr><td align="center">string</td><td align="center">‘hi’, “hi”, <code>hi</code></td><td align="center">任意字符串</td></tr><tr><td align="center">boolean</td><td align="center">true、false</td><td align="center">布尔值 true 或 false</td></tr><tr><td align="center">字面量</td><td align="center">其本身</td><td align="center">限制变量的值就是该字面量的值</td></tr><tr><td align="center">any</td><td align="center">*</td><td align="center">任意类型</td></tr><tr><td align="center">unknown</td><td align="center">*</td><td align="center">类型安全的 any</td></tr><tr><td align="center">void</td><td align="center">空值（undefined）</td><td align="center">没有值（或 undefined）</td></tr><tr><td align="center">never</td><td align="center">没有值</td><td align="center">不能是任何值</td></tr><tr><td align="center">object</td><td align="center">{name:’孙悟空’}</td><td align="center">任意的 JS 对象</td></tr><tr><td align="center">array</td><td align="center">[1,2,3]</td><td align="center">任意 JS 数组</td></tr><tr><td align="center">tuple</td><td align="center">[4,5]</td><td align="center">元素，TS 新增类型，固定长度数组</td></tr><tr><td align="center">enum</td><td align="center">enum{A, B}</td><td align="center">枚举，TS 中新增类型</td></tr></tbody></table></li><li><p>number</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let decimal: number &#x3D; 6let hex: number &#x3D; 0xf00d  &#x2F;&#x2F;十六进制let binary: number &#x3D; 0b1010  &#x2F;&#x2F;二进制let octal: number &#x3D; 0o744  &#x2F;&#x2F;八进制let big: bigint &#x3D; 100n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>boolean</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let isDone: boolean &#x3D; false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>string</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let color: string &#x3D; &#39;blue&#39;color &#x3D; &#39;red&#39;let fullName: string &#x3D; &#96;Bob Bobbington&#96;let age: number &#x3D; 37let sentence: string &#x3D; &#96;Hello, my name is $&#123;fullName&#125;.    I&#39;ll be $&#123;age + 1&#125; years old next month.&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>字面量</p><ul><li>也可以使用字面量去指定变量的类型，通过字面量可以确定变量的取值范围</li></ul><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let color: &#39;red&#39; | &#39;blue&#39; | &#39;black&#39;let num: 1 | 2 | 3 | 4 | 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>any</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let d: any &#x3D; 4d &#x3D; &#39;hello&#39;d &#x3D; true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>unknown</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let notSure: unknown &#x3D; 4notSure &#x3D; &#39;hello&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>void</p><ul><li>表示一个没有返回值的函数</li></ul><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let unusable: void &#x3D; undefined<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>never</p><ul><li>永远不会有返回值</li></ul><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">function error(message: string): never &#123;  throw new Error(message)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>object（没啥用）</p><ul><li>原因： js 万物皆可对象，定义成 object 鸡肋</li></ul><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let obj: object &#x3D; &#123;&#125;;let obj: object &#x3D; &#123; [propName: string]: any &#125; &#x2F;&#x2F;表示任意类型的属性let obj: object &#x3D; &#123; name?: string &#125; &#x2F;&#x2F;可有name这个属性也可以没有这个属性<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>array</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let list: number[] &#x3D; [1, 2, 3]let list: Array&lt;number&gt; &#x3D; [1, 2, 3]&#x2F;&#x2F;定义一个元素全是数字的数组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>tuple</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let x: [string, number]x &#x3D; [&#39;hello&#39;, 10]&#x2F;&#x2F;元组。固定长度的数组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>enum</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">enum Color &#123;  Red,  Green,  Blue,&#125;let c: Color &#x3D; Color.Greenenum Color &#123;  Red &#x3D; 1,  Green,  Blue,&#125;let c: Color &#x3D; Color.Greenenum Color &#123;  Red &#x3D; 1,  Green &#x3D; 2,  Blue &#x3D; 4,&#125;let c: Color &#x3D; Color.Green<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>类型断言</p><ul><li><p>有些情况下，变量的类型对于我们来说是很明确，但是 TS 编译器却并不清楚，此时，可以通过类型断言来告诉编译器变量的类型，断言有两种形式：</p><ul><li><p>第一种</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let someValue: unknown &#x3D; &#39;this is a string&#39;let strLength: number &#x3D; (someValue as string).length<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>第二种</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">let someValue: unknown &#x3D; &#39;this is a string&#39;let strLength: number &#x3D; (&lt;string&gt;someValue).length<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>类型别名</p><pre><code><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">type str &#x3D; stringlet a : str<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></code></pre></li></ul></li></ul><!-- more -->    ]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript通过webpack打包编译配置项</title>
      <link href="/hexo/2023/06/07/ts-yong-webpack-bian-yi-da-bao/"/>
      <url>/hexo/2023/06/07/ts-yong-webpack-bian-yi-da-bao/</url>
      
        <content type="html"><![CDATA[<p>webpack配置项打包</p><a id="more"></a><h3 id="TypeScript打包"><a href="#TypeScript打包" class="headerlink" title="TypeScript打包"></a>TypeScript打包</h3><h3 id="webpack整合"><a href="#webpack整合" class="headerlink" title="webpack整合"></a>webpack整合</h3><p>通常情况下，实际开发中我们都需要使用构建工具对代码进行打包；</p><p>TS同样也可以结合构建工具一起使用，下边以webpack为例介绍一下如何结合构建工具使用TS；</p><p>步骤如下：</p><h4 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h4><p>进入项目根目录，执行命令 <code> npm init -y</code>，创建package.json文件</p><h4 id="下载构建工具"><a href="#下载构建工具" class="headerlink" title="下载构建工具"></a>下载构建工具</h4><p>命令如下：</p><p><code>npm i -D webpack webpack-cli webpack-dev-server typescript ts-loader clean-webpack-plugin</code></p><p>共安装了7个包:</p><ul><li>webpack：构建工具webpack</li><li>webpack-cli：webpack的命令行工具</li><li>webpack-dev-server：webpack的开发服务器</li><li>typescript：ts编译器</li><li>ts-loader：ts加载器，用于在webpack中编译ts文件</li><li>html-webpack-plugin：webpack中html插件，用来自动创建html文件</li><li>clean-webpack-plugin：webpack中的清除插件，每次构建都会先清除目录</li></ul><h4 id="配置webpack"><a href="#配置webpack" class="headerlink" title="配置webpack"></a>配置webpack</h4><p>根目录下创建webpack的配置文件<code>webpack.config.js</code>：</p> <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> CleanWebpackPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"clean-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    optimization<span class="token operator">:</span><span class="token punctuation">&#123;</span>        minimize<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 关闭代码压缩，可选</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    entry<span class="token operator">:</span> <span class="token string">"./src/index.ts"</span><span class="token punctuation">,</span>    devtool<span class="token operator">:</span> <span class="token string">"inline-source-map"</span><span class="token punctuation">,</span>    devServer<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        contentBase<span class="token operator">:</span> <span class="token string">'./dist'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 打包路径</span>        path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment">// 打包文件名</span>        filename<span class="token operator">:</span> <span class="token string">"bundle.js"</span><span class="token punctuation">,</span>        environment<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            arrowFunction<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 关闭webpack的箭头函数，可选</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".ts"</span><span class="token punctuation">,</span> <span class="token string">".js"</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        rules<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                <span class="token comment">// ts文件后缀的文件</span>                test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.ts$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>                <span class="token comment">// 使用ts-loader编译打包</span>                use<span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    loader<span class="token operator">:</span> <span class="token string">"ts-loader"</span>                     <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            title<span class="token operator">:</span><span class="token string">'TS测试'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置TS编译选项"><a href="#配置TS编译选项" class="headerlink" title="配置TS编译选项"></a>配置TS编译选项</h4><p>根目录下创建tsconfig.json，配置可以根据自己需要</p> <pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;    &quot;compilerOptions&quot;: &#123;        &quot;target&quot;: &quot;ES2015&quot;,        &quot;module&quot;: &quot;ES2015&quot;,        &quot;strict&quot;: true    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="修改package-json配置"><a href="#修改package-json配置" class="headerlink" title="修改package.json配置"></a>修改package.json配置</h4><p>修改package.json添加如下配置</p> <pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;    ...    &quot;scripts&quot;: &#123;        &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,        &quot;build&quot;: &quot;webpack&quot;,        &quot;start&quot;: &quot;webpack serve --open chrome.exe&quot;    &#125;,    ...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="项目使用"><a href="#项目使用" class="headerlink" title="项目使用"></a>项目使用</h4><p>在src下创建ts文件，并在并命令行执行<code>npm run build</code>对代码进行编译；</p><p>或者执行<code>npm start</code>来启动开发服务器；</p><br><h3 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h3><p>除了webpack，开发中还经常需要结合babel来对代码进行转换；</p><p>以使其可以兼容到更多的浏览器，在上述步骤的基础上，通过以下步骤再将babel引入到项目中；</p><blockquote><p>  虽然TS在编译时也支持代码转换，但是只支持简单的代码转换；</p><p>  对于例如：Promise等ES6特性，TS无法直接转换，这时还要用到babel来做转换；</p></blockquote><p>安装依赖包：</p><p>   <code>npm i -D @babel/core @babel/preset-env babel-loader core-js</code></p><p>共安装了4个包，分别是：</p><ul><li><p>@babel/core：babel的核心工具</p></li><li><p>@babel/preset-env：babel的预定义环境</p></li><li><p>@babel-loader：babel在webpack中的加载器</p></li><li><p>core-js：core-js用来使老版本的浏览器支持新版ES语法</p></li></ul><p>修改webpack.config.js配置文件</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">...</span>module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    rules<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.ts$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>            use<span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    loader<span class="token operator">:</span> <span class="token string">"babel-loader"</span><span class="token punctuation">,</span>                    options<span class="token operator">:</span><span class="token punctuation">&#123;</span>                        presets<span class="token operator">:</span> <span class="token punctuation">[</span>                            <span class="token punctuation">[</span>                                <span class="token string">"@babel/preset-env"</span><span class="token punctuation">,</span>                                <span class="token punctuation">&#123;</span>                                    <span class="token string">"targets"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                                        <span class="token string">"chrome"</span><span class="token operator">:</span> <span class="token string">"58"</span><span class="token punctuation">,</span>                                        <span class="token string">"ie"</span><span class="token operator">:</span> <span class="token string">"11"</span>                                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                    <span class="token string">"corejs"</span><span class="token operator">:</span><span class="token string">"3"</span><span class="token punctuation">,</span>                                    <span class="token string">"useBuiltIns"</span><span class="token operator">:</span> <span class="token string">"usage"</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">]</span>                        <span class="token punctuation">]</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    loader<span class="token operator">:</span> <span class="token string">"ts-loader"</span><span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如此一来，使用ts编译后的文件将会再次被babel处理；</p><p>使得代码可以在大部分浏览器中直接使用；</p><p>同时可以在配置选项的targets中指定要兼容的浏览器版本；</p><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5 判断当前环境</title>
      <link href="/hexo/2023/06/07/h5-huan-jing-shi-bie/"/>
      <url>/hexo/2023/06/07/h5-huan-jing-shi-bie/</url>
      
        <content type="html"><![CDATA[<p>H5 可能在微信小程序、微信浏览器，安卓、ios应用，支付宝小程序、支付宝浏览器，判断webview的环境走对应的逻辑</p><a id="more"></a><p><font color="#08c">1.navigator.userAgent获取信息识别所处环境（是无法精细获取到的，需要例如微信生态有小程序、内置浏览器）</font><br><font color="#08c">2.微信需要引入SDK配置、微信config调用window.wx.miniProgram.getEnv方法识别;</font><br><font color="#08c">3.APP需要原生提供能力才能从userAgent塞信息、h5才能从中获取对应的信息，假如没有userAgent信息，就只能通过jsBrige调用APP提供的空方法，h5通过 try / catch 语法捕获识别;</font><br><font color="#08c">4.支付宝本身window.onload以后，容器会初始化，产生一个全局变量AlipayJSBridge, 我们可以直接使用</font></p><h4 id="识别环境方法的封装"><a href="#识别环境方法的封装" class="headerlink" title="识别环境方法的封装"></a>识别环境方法的封装</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/*** * 判断当前环境 * @returns [string]可能值 ali / aliApplet / wx / wxApplet / iosApp / androidApp / other ***/</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">osType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> userAgent <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>userAgent<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Alipay</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"alipay"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span>miniProgram<span class="token punctuation">.</span><span class="token function">getEnv</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">/*              支付宝跟微信有所区别            window.onload以后，容器会初始化，产生一个全局变量AlipayJSBridge, 我们可以直接使用            暂时有卡点，后续补充        */</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>miniprogram<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// console.log("支付宝小程序 ---- aliApplet");</span>          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"aliApplet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// console.log("支付宝浏览器 ---- ali");</span>          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"ali"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userAgent<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">MicroMessenger</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"micromessenger"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token function">initScript</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span>miniProgram<span class="token punctuation">.</span><span class="token function">getEnv</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// window.wx.miniProgram.getEnv 判断是在微信小程序 true、还是在微信浏览器 false</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>miniprogram<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// console.log("微信小程序 ---- wxApplet");</span>            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"wxApplet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// console.log("微信浏览器 ---- wx");</span>            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"wx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userAgent<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">ensd</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"ensd"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*         判断app需要同事提供这个userAgent获取信息的能力        假如没有，就只能通过，只能通过jsBrige，调用app提供的空方法，没有这个方法就会报错，我们可以捕获异常从而达到环境的判断        try / catch    */</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>os <span class="token operator">==</span> <span class="token string">"ios"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// console.log("app环境 ---- 苹果app");</span>      <span class="token keyword">return</span> <span class="token string">"iosApp"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>os <span class="token operator">==</span> <span class="token string">"android"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// console.log("app环境 ---- 安卓app");</span>      <span class="token keyword">return</span> <span class="token string">"androidApp"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// console.log("通用浏览器")</span>    <span class="token keyword">return</span> <span class="token string">"other"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/*** * 判断当前运行环境 * @returns [string]可能值 ios / android / pc / other * */</span><span class="token keyword">export</span> <span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> ua <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:iphone|ipad|ipod)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token string">"ios"</span>    <span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:android|adr )</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token string">"android"</span>    <span class="token operator">:</span> <span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">mobile</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token string">"pc"</span>    <span class="token operator">:</span> <span class="token string">"other"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5浏览器获取定位</title>
      <link href="/hexo/2023/06/07/h5-huo-qu-ding-wei/"/>
      <url>/hexo/2023/06/07/h5-huo-qu-ding-wei/</url>
      
        <content type="html"><![CDATA[<p>H5浏览器获取定位，采用了百度地图api获取定位，并且支付宝内置浏览器是需要调用alipayJSBridge获取定位的，各个定位方式获取到经纬度可能是不同的坐标系，需要封装一套方法进行转换</p><a id="more"></a><h2 id="H5-唤起定位软件"><a href="#H5-唤起定位软件" class="headerlink" title="H5 唤起定位软件"></a>H5 唤起定位软件</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * @param latitude|longitude 经纬度 * @param stationName 定位地点名 * @param stationAddress 定位地址*/</span><span class="token function">goLocationPath</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span>    <span class="token string">"//api.map.baidu.com/marker?location="</span> <span class="token operator">+</span>    item<span class="token punctuation">.</span>latitude <span class="token operator">+</span>    <span class="token string">","</span> <span class="token operator">+</span>    item<span class="token punctuation">.</span>longitude <span class="token operator">+</span>    <span class="token string">"&amp;title="</span> <span class="token operator">+</span>    item<span class="token punctuation">.</span>stationName <span class="token operator">+</span>    <span class="token string">"&amp;content="</span> <span class="token operator">+</span>    item<span class="token punctuation">.</span>stationAddress <span class="token operator">+</span>    <span class="token string">"&amp;output=html"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="普通浏览器环境下-——-加载百度地图api定位"><a href="#普通浏览器环境下-——-加载百度地图api定位" class="headerlink" title="普通浏览器环境下 —— 加载百度地图api定位"></a>普通浏览器环境下 —— 加载百度地图api定位</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">BMapInit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  window<span class="token punctuation">.</span><span class="token constant">HOST_TYPE</span> <span class="token operator">=</span> <span class="token string">"2"</span><span class="token punctuation">;</span> <span class="token comment">// https域名百度定位的一个隐藏坑</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>BMap<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> window<span class="token punctuation">.</span>BMap<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">await</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"https://api.map.baidu.com/getscript?v=v3.0&amp;ak=uUZas4GaaI6QalSTn8giR2rX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加载百度地图script，看（·动态加载script·那篇文章）</span>  <span class="token keyword">return</span> window<span class="token punctuation">.</span>BMap<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * 获取经纬度 * @returns */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getLocation</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 识别在支付宝环境下</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Alipay</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"alipay"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> longitude<span class="token punctuation">,</span> latitude <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getCurrentLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">gcj02tobd09</span><span class="token punctuation">(</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">getQueryAdCodeFromBaidu</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">await</span> <span class="token function">BMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * 百度API获取经纬度 * @returns */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">BMap</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> BMap <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">BMapInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> geolocation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Geolocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span>        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>latitude <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>longitude<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          enableHighAccuracy<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//指示浏览器获取高精度的位置，默认false</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"BMap===err"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="支付宝浏览器环境下-——-alipayJSBridge内置方法获取定位-支付宝H5开放文档"><a href="#支付宝浏览器环境下-——-alipayJSBridge内置方法获取定位-支付宝H5开放文档" class="headerlink" title="支付宝浏览器环境下 —— alipayJSBridge内置方法获取定位(支付宝H5开放文档)"></a>支付宝浏览器环境下 —— alipayJSBridge内置方法获取定位(<a href="https://myjsapi.alipay.com/jsapi/index.html">支付宝H5开放文档</a>)</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">ready</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 如果jsbridge已经注入则直接调用</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>AlipayJSBridge<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 如果没有注入则监听注入的事件</span>    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"AlipayJSBridgeReady"</span><span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getCurrentLocation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span><span class="token function">AlipayJSBridge</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>        <span class="token string">"getCurrentLocation"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> bizType<span class="token operator">:</span> <span class="token string">"ensd"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 小写的英文字母</span>        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">reject</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取的经纬度坐标系不同-——-转化坐标系"><a href="#获取的经纬度坐标系不同-——-转化坐标系" class="headerlink" title="获取的经纬度坐标系不同 —— 转化坐标系"></a>获取的经纬度坐标系不同 —— 转化坐标系</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * Created by Wandergis on 2015/7/8. * 提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换 */</span><span class="token comment">//定义一些常量</span><span class="token keyword">const</span> x_PI <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3.14159265358979324</span> <span class="token operator">*</span> <span class="token number">3000.0</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">180.0</span><span class="token punctuation">;</span><span class="token comment">/** * 百度坐标系 (BD-09) 与 火星坐标系 (GCJ-02)的转换 * 即 百度 转 谷歌、高德 * @param bd_lon * @param bd_lat * @returns &#123;*[]&#125; */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">bd09togcj02</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">bd_lon<span class="token punctuation">,</span> bd_lat</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> x_pi <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3.14159265358979324</span> <span class="token operator">*</span> <span class="token number">3000.0</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">180.0</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> x <span class="token operator">=</span> bd_lon <span class="token operator">-</span> <span class="token number">0.0065</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> y <span class="token operator">=</span> bd_lat <span class="token operator">-</span> <span class="token number">0.006</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> z <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>x <span class="token operator">*</span> x <span class="token operator">+</span> y <span class="token operator">*</span> y<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.00002</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>y <span class="token operator">*</span> x_pi<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> theta <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">atan2</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.000003</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>x <span class="token operator">*</span> x_pi<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> gg_lng <span class="token operator">=</span> z <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> gg_lat <span class="token operator">=</span> z <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">[</span>gg_lng<span class="token punctuation">,</span> gg_lat<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换 * 即谷歌、高德 转 百度 * @param lng * @param lat * @returns &#123;*&#123;&#125;&#125; */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">gcj02tobd09</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">lng<span class="token punctuation">,</span> lat</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> z <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>lng <span class="token operator">*</span> lng <span class="token operator">+</span> lat <span class="token operator">*</span> lat<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.00002</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>lat <span class="token operator">*</span> x_PI<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> theta <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">atan2</span><span class="token punctuation">(</span>lat<span class="token punctuation">,</span> lng<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.000003</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>lng <span class="token operator">*</span> x_PI<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> bd_lng <span class="token operator">=</span> z <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.0065</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> bd_lat <span class="token operator">=</span> z <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.006</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    latitude<span class="token operator">:</span> bd_lat<span class="token punctuation">,</span>    longitude<span class="token operator">:</span> bd_lng  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
            <tag> 三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js内卷大法</title>
      <link href="/hexo/2023/06/07/js-nei-juan/"/>
      <url>/hexo/2023/06/07/js-nei-juan/</url>
      
        <content type="html"><![CDATA[<p>你写的代码这么简单？升级一下你的逼格吧，小伙伴</p><a id="more"></a><h2 id="Number-类型转换成-String-类型"><a href="#Number-类型转换成-String-类型" class="headerlink" title="Number 类型转换成 String 类型"></a>Number 类型转换成 String 类型</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 普通</span><span class="token number">10.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// '10'</span><span class="token comment">// 简写</span><span class="token number">10</span> <span class="token operator">+</span> <span class="token string">''</span><span class="token comment">// '10'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="String-类型转换成-Number-类型"><a href="#String-类型转换成-Number-类型" class="headerlink" title="String 类型转换成 Number 类型"></a>String 类型转换成 Number 类型</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 普通</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'10'</span><span class="token punctuation">)</span> <span class="token comment">// 10</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">'10.5'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token comment">// 10.5</span>  <span class="token comment">// 简写</span>  <span class="token string">'10'</span> <span class="token operator">+</span> <span class="token comment">// 10</span>  <span class="token string">'10.5'</span> <span class="token comment">// 10.5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="求-n-次方"><a href="#求-n-次方" class="headerlink" title="求 n 次方"></a>求 n 次方</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 普通</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token comment">// 32</span><span class="token comment">// 简写</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">5</span> <span class="token comment">// 32</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="浮点数转换成整数"><a href="#浮点数转换成整数" class="headerlink" title="浮点数转换成整数"></a>浮点数转换成整数</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 普通</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">5.4321</span><span class="token punctuation">)</span> <span class="token comment">// 5</span><span class="token comment">// 简写</span><span class="token operator">~</span><span class="token operator">~</span><span class="token number">5.4321</span> <span class="token comment">// 5</span><span class="token comment">// 注意只适用于32位整数</span><span class="token comment">// 即大于2147483647的数字会给出错误的结果，这种情况使用 Math.floor()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="求某个字符串第-n-个字符"><a href="#求某个字符串第-n-个字符" class="headerlink" title="求某个字符串第 n 个字符"></a>求某个字符串第 n 个字符</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> string <span class="token operator">=</span> <span class="token string">'我爱你'</span><span class="token comment">// 普通</span><span class="token keyword">const</span> str1 <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 爱</span><span class="token comment">// 简写</span><span class="token keyword">const</span> str2 <span class="token operator">=</span> string<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// 爱</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="求数组中最大和最小的数字"><a href="#求数组中最大和最小的数字" class="headerlink" title="求数组中最大和最小的数字"></a>求数组中最大和最小的数字</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">const</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span> <span class="token comment">// 5</span><span class="token keyword">const</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span> <span class="token comment">// 0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="合并数组"><a href="#合并数组" class="headerlink" title="合并数组"></a>合并数组</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 普通</span><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>arr1 <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [2, 1, 0, 1, 2]</span><span class="token comment">// 简写</span><span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">// [2, 1, 0, 1, 2]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="判断是否等于某个值"><a href="#判断是否等于某个值" class="headerlink" title="判断是否等于某个值"></a>判断是否等于某个值</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token number">2</span><span class="token comment">// 普通</span><span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> val <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">||</span> val <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ……</span><span class="token punctuation">&#125;</span><span class="token comment">// 简写</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ……</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="循环数组"><a href="#循环数组" class="headerlink" title="循环数组"></a>循环数组</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 简写方式一，只有一句代码时配合箭头函数最简短</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 简写方式二，通常用于内部有相对于外部的异步操作</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 简写方式三，通常用于对象</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> prop <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript数组方法</title>
      <link href="/hexo/2023/06/07/js-shu-zu-chu-li/"/>
      <url>/hexo/2023/06/07/js-shu-zu-chu-li/</url>
      
        <content type="html"><![CDATA[<p>系统化的数组方法; 数组元素过滤; 数组对比; 数组去重</p><a id="more"></a><h2 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h2><ul><li><font color="#08c" size="3">findIndex()函数是已知元素，找寻元素所在的数组下标位置，找不到返回-1，跟indexOf有点类似，（传的是回调函数）</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> item <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印2，2是数组的下标位置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">indexOf()函数是最常用的存取函数之一，用来查找传进来的参数在目标数组中是否存在。包含则返回索引，不包含则返回-1。（字符串同样适用）</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">lastIndexOf()函数返回相同元素中最后一个元素的索引。</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">join()和toString()都可以将数组转换为字符串</font><ul><li>join()<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//打印1-2-3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>toString()<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//打印1,2,3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>toString()还能用于检测变量类型的工作<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">&#125;</span><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token string">'我是字符串'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//打印[object Array]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//打印[object Object]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[object String]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><font color="#08c" size="3">concat()方法可以合并多个数组创建一个新数组</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//打印[1,2,3,4,5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">reverse()方法可以将数组中的元素进行翻转</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//打印[3,2,1]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">every(),该方法接收一个返回值为布尔类型的函数，对数组中的每个元素使用该函数。如果对于所有的元素，该函数均返回true，则该方法返回true。</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> item<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印true</span><span class="token comment">// 数组每一项元素符合才会返回true，有一个不符合就返回false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">fill() 方法用于将一个固定值替换数组的元素。（会改变原数组）第一个参数必需：填充的值。第二个参数可选：开始填充位置。第三个参数可选：结束填充位置。</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印["1", "1", 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印["1", "1", 3]</span><span class="token comment">//fill('1',0,2)就是数组下标0到2的元素替换成字符串'1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">filter() ：对数组的每一项运行给定函数，返回该函数会返回true的项组成的数组。</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> item <span class="token operator">/</span> <span class="token number">2</span>  <span class="token comment">//  return item%2 打印b的结果就会是这个数组的奇数下标项所组成的新数组</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印[3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[1,2,3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">forEach()：对数组进行遍历循环，对数组中的每一项运行给定函数。这个方法没有返回值。参数都是function类型，默认有传参，参数分别为：遍历的数组内容item；第对应的数组索引index，数组本身arr。</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">]</span>a<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">//打印 a 0 ["a", "b", "c"] b 1 ["a", "b", "c"] c 2 ["a", "b", "c"]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">map() ：对数组的每一项运行给定函数，返回每次函数调用结果所组成的数组</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> item <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[1, 2, 3, 4, 5, 6]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印[0.5, 1, 1.5, 2, 2.5, 3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">splice() 可以实现删除、插入和替换。（该方法会改变原始数组）index:数组开始下标;len: 替换/删除的长度;item:替换的值，删除操作的话 item为空</font><ul><li>删除<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//0从数组下标0开始，1是删除从0下标之后的一个元素</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印[1]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[2,3,4]</span><span class="token comment">//删除了数组下标0开始的一个元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>插入<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印[]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[2,1,2,3,4]</span><span class="token comment">//splice(0,0,2)其实就是删除下标0之后0个元素，也就是不删除元素，然后在下标0的位置插入元素2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>替换<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>  <span class="token comment">//打印[1]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>  <span class="token comment">//打印[2,2,3,4]</span><span class="token comment">// 把元素1替换成了2；(其实可以理解成删除了元素1，然后在元素1的下标位置插入了元素2)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><font color="#08c" size="3">slice()该方法是对数组进行部分截取（该方法不会改变原始数组），并返回一个数组副本；参数start是截取的开始数组索引，end参数等于你要取的最后一个字符的位置值加上1（可选）</font><ul><li>两个参数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//[1,2,3,4]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//[1,2]</span><span class="token comment">// 截取下标0到下标1的数组，第二个参数它会默认+1，所以我们要slice(0,2)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>单个参数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//当只传入一个参数，且是负数时，length会与参数相加，然后再截取，负数参数的绝对值比length大，那会截取整个数组</span><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[1,2,3,4,5,6]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印[5,6]</span><span class="token comment">//当只传入一个参数，且是正数时，比length大时，会返回空数组</span><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[1,2,3,4,5,6]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印[]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><font color="red">*注：假如参数一正一负，也会先和length相加，再进行截取的操作</font></li></ul></li><li><font color="#08c" size="3">push()函数将元素添加进数组的尾部</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>a<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[1,2,3,4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">pop()函数删除数组的最后一个元素</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>a<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[1,2]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">unshift()函数将元素添加进数组的头部</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>a<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[4,1,2,3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">shift()函数删除数组的第一项元素</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>a<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印[2,3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">some()函数找寻数组是否拥有某一元素，有返回true、无则反之。(1.剩余的元素不会再执行检测；2.传回调函数)</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token operator">=></span>i<span class="token operator">===</span><span class="token number">2</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">includes()函数找寻数组是否包含某一元素，有返回true、无则反之。(1.会全部执行完检测；2.传变量)</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font color="#08c" size="3">reduce()迭代数组所有的项，然后构建一个最终的值返回。（第一个参数传回调函数，第二个参数传输出的变量类型）</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'v'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span>cur<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> pre<span class="token operator">+</span>cur<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印["J", "a", "v", "a"]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印Java</span><span class="token comment">/*第一次执行，pre的初始值是空的，cur是数组下标0，它会执行数组长度-1的次数，第二次执行，pre为J，cur为a，第三次执行，pre为Ja（J加a的结果），cur为v（数组的第三项），依次类推，直到将数组的每一项都访问一遍，最后返回结果。*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">（*注：整个循环执行的次数等于cur的console次数，pre的console次数-1)</font></p><ul><li><font color="#08c" size="3">reduceRight()函数：跟reduce()是一样的，从后往前遍历，正好与其相反</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'v'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span>cur<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> pre<span class="token operator">+</span>cur<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//打印["J", "a", "v", "a"]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印avaJ</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>every 与 some 相反，every 需要是数组中每一项都符合参数函数中的条件才返回 true，如果遇见任何一项不符合立即返回 false，也不再继续遍历后续项。</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/*    其实效果类似forEach循环    arr.forEach(item=>&#123;    function(item)&#123;        return item &lt; 10        &#125;    &#125;)    就是数组每一元素都能到返回布尔值函数里面执行一遍，然后数组元素执行布尔值函数都是true则返回true，一项不符合就返回false*/</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">var</span> arr2 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> x <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token comment">//true</span><span class="token keyword">var</span> arr3 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> x <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span> <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>some()和 includes()的区别</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//every:一假即假</span><span class="token comment">//some:一真即真</span>例：<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span> <span class="token parameter">i</span> <span class="token operator">=></span> i<span class="token operator">===</span><span class="token number">2</span><span class="token punctuation">)</span>例：<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>两者都是返回<span class="token boolean">true</span>，some传的是回调函数，includes传的是变量例如：<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span> <span class="token parameter">i</span> <span class="token operator">=></span> i<span class="token operator">*</span><span class="token number">2</span><span class="token operator">===</span><span class="token number">2</span><span class="token punctuation">)</span>可以加前缀处理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数组元素遍历过滤"><a href="#数组元素遍历过滤" class="headerlink" title="数组元素遍历过滤"></a>数组元素遍历过滤</h2><ul><li>方法一 forEach 循环遍历 replace 替换字符串 push 添加进去和 splice 再删除进行过滤（小白误区）</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'wo100_100'</span><span class="token punctuation">,</span> <span class="token string">'zhangsan100_100'</span><span class="token punctuation">,</span> <span class="token string">'lisi100_100'</span><span class="token punctuation">]</span><span class="token comment">//定义一个变量等于数组的长度</span><span class="token keyword">var</span> length <span class="token operator">=</span> data<span class="token punctuation">.</span>length<span class="token comment">//forEach遍历数组，replace检索到'100_100'替换成空，push添加进数组尾部下标</span><span class="token comment">//整句代码就是遍历数组data的每一项检索到100_100替换成空添加进data数组，注意这里data数组包含了未过滤和已过滤的元素</span>data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'100_100'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//splice删除数组下标0开始到data原先数组的长度length</span>data<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span> <span class="token comment">//输出data=['wo','zhangsan','lisi']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>方法二 map 循环遍历 replace 替换字符串返回一个数组</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//更加简洁优雅的方法，有助于提升技术</span><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'111.jpg'</span><span class="token punctuation">,</span> <span class="token string">'222.jpg'</span><span class="token punctuation">,</span> <span class="token string">'333.jpg'</span><span class="token punctuation">]</span><span class="token keyword">const</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span> <span class="token comment">//newArr:['111','222','333']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>方法三(通过 map 过滤数组对象，改变属性名)</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> time<span class="token operator">:</span> <span class="token string">'2021-10-23'</span><span class="token punctuation">,</span> retData<span class="token operator">:</span> <span class="token string">'01OCT2021|@|29|@|2|@|2|@|0|@|0|@|0'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span> time<span class="token operator">:</span> <span class="token string">'2021-10-22'</span><span class="token punctuation">,</span> retData<span class="token operator">:</span> <span class="token string">'01OCT2021|@|2|@|2|@|1|@|0|@|0|@|0'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span> time<span class="token operator">:</span> <span class="token string">'2021-10-21'</span><span class="token punctuation">,</span> retData<span class="token operator">:</span> <span class="token string">'01OCT2021|@|40|@|40|@|40|@|0|@|0|@|0'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span> time<span class="token operator">:</span> <span class="token string">'2021-10-06'</span><span class="token punctuation">,</span> retData<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span> time<span class="token operator">:</span> <span class="token string">'2021-10-05'</span><span class="token punctuation">,</span> retData<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token keyword">const</span> newData <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> time<span class="token punctuation">,</span> retData <span class="token punctuation">&#125;</span> <span class="token operator">=</span> item<span class="token keyword">const</span> progress <span class="token operator">=</span> <span class="token punctuation">(</span>retData <span class="token operator">?</span> retData<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|@|'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    task<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">任务</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">进度</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    day<span class="token operator">:</span> item <span class="token operator">||</span> <span class="token string">'-'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token punctuation">&#123;</span> time<span class="token punctuation">,</span> progress <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>replace动态替换全局匹配</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'hello'</span><span class="token punctuation">,</span><span class="token string">'world'</span><span class="token punctuation">,</span><span class="token string">'come'</span><span class="token punctuation">]</span><span class="token keyword">let</span> string <span class="token operator">=</span> <span class="token string">'helloworldcome'</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span><span class="token string">"g"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    string <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><ul><li>方法一 ES6 运算符和 new Set()去重（会新增一个新数组）</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印 [0, 1, 2, 3, 4, 5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><font>方法二 循环遍历 indeOf 找寻数组是否拥有了元素值（会新增一个新数组）</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">(</span>index <span class="token keyword">in</span> a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">//打印[1, 2, 3, 4, 5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><font>方法三 通过键值对的方式去重，数组的每一项作为对象的键名，键名具有唯一性</font></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>a<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    obj<span class="token punctuation">[</span>val<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'haha'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">//&#123;1: "haha", 2: "haha", 3: "haha", 4: "haha", 5: "haha"&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 打印[1, 2, 3, 4, 5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li> 方法四 双重循环 splice 删除</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'ss'</span><span class="token punctuation">,</span> <span class="token string">'ss'</span><span class="token punctuation">,</span> <span class="token string">'ccsz'</span><span class="token punctuation">,</span> <span class="token string">'ss'</span><span class="token punctuation">]</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*①        a.splice(i, 1)        i--        保留的是数组后面出现的重复元素    */</span>    <span class="token comment">/*②        a.splice(j, 1)        j--        保留的是数组前面出现的重复元素    */</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// ① 打印[1, 4, 5, 2, 3, "ccsz", "ss"]   ② 打印[1, 2, 3, 4, 5, "ss", "ccsz"]</span><span class="token comment">/*     循环的时候它是接着往下的，你中间删除数组元素并不会改变它接着往下循环的，所以要让循环跳回上一层循环，因为a[i]或者a[j]已经是另外一项元素了。使用j和使用i，区别就在于删除重复的项是首项和尾项了*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>方法五 reduce 数组去重</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">const</span> nameNum <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pre<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> pre<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> pre<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nameNum<span class="token punctuation">)</span> <span class="token comment">//打印[1, 2, 3]</span><span class="token comment">/*    pre初始值是一个空数组，需要合并cur*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数组对比"><a href="#数组对比" class="headerlink" title="数组对比"></a>数组对比</h2><ul><li>两个数组对比，返回一个共同拥有元素值的数组</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> Arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'AA'</span><span class="token punctuation">,</span> <span class="token string">'BB'</span><span class="token punctuation">,</span> <span class="token string">'CC'</span><span class="token punctuation">,</span> <span class="token string">'DD'</span><span class="token punctuation">,</span> <span class="token string">'EE'</span><span class="token punctuation">]</span><span class="token keyword">const</span> Arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'AA'</span><span class="token punctuation">,</span> <span class="token string">'124234'</span><span class="token punctuation">,</span> <span class="token string">'DD'</span><span class="token punctuation">,</span> <span class="token string">'八月未央'</span><span class="token punctuation">,</span> <span class="token string">'abc'</span><span class="token punctuation">]</span><span class="token keyword">const</span> res_Arr <span class="token operator">=</span> Arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> Arr2<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res_Arr<span class="token punctuation">)</span> <span class="token comment">// 打印['AA','DD']</span><span class="token comment">//filter会返回一个符合条件的数组，indexOf索引>-1作为判断条件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>两个数组对比，去除两个数组里相等的值</li></ul><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;&#x2F; 同上找出相同数组同样使用indexOf，只是判断条件改变const a &#x3D; [1, 2, 3, 4, 5];const b &#x3D; [3, 4, 5];a &#x3D; a.filter(item &#x3D;&gt; b.indexOf(item) &#x3D;&#x3D; -1);console.log(a); &#x2F;&#x2F; [1, 2]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">&#x2F;&#x2F; 另一种实现const a &#x3D; [1,2,3,4,5];const b &#x3D; [3,4,5];const set &#x3D; new Set(b);const filtered &#x3D; a.filter(item &#x3D;&gt; !set.has(item));console.log(filtered); &#x2F;&#x2F; [1, 2]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font>lodash库的without,pull,xor也能实现</font></p><h2 id="计算数组元素出现的次数-列举最装逼简洁写法"><a href="#计算数组元素出现的次数-列举最装逼简洁写法" class="headerlink" title="计算数组元素出现的次数(列举最装逼简洁写法)"></a>计算数组元素出现的次数(列举最装逼简洁写法)</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Alice'</span><span class="token punctuation">,</span> <span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token string">'Tiff'</span><span class="token punctuation">,</span> <span class="token string">'Bruce'</span><span class="token punctuation">,</span> <span class="token string">'Alice'</span><span class="token punctuation">]</span><span class="token keyword">const</span> nameNum <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cur <span class="token keyword">in</span> pre<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        pre<span class="token punctuation">[</span>cur<span class="token punctuation">]</span><span class="token operator">++</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        pre<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> pre    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nameNum<span class="token punctuation">)</span> <span class="token comment">//打印&#123;Alice: 2, Bob: 1, Tiff: 1, Bruce: 1&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 开发语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5 微信分享</title>
      <link href="/hexo/2023/06/07/h5-wei-xin-fen-xiang/"/>
      <url>/hexo/2023/06/07/h5-wei-xin-fen-xiang/</url>
      
        <content type="html"><![CDATA[<p>H5 唤起微信朋友圈分享，需要在微信环境下</p><a id="more"></a><h4 id="封装的一套微信分享功能"><a href="#封装的一套微信分享功能" class="headerlink" title="封装的一套微信分享功能"></a>封装的一套微信分享功能</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">initScript</span> <span class="token operator">=</span> <span class="token parameter">callBack</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> st <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> s <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  st<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'https://res2.wx.qq.com/open/js/jweixin-1.6.0.js'</span>  st<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">callBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  s<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">wechatShareAgain</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">shareData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">initScript</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      method<span class="token operator">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>      url<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_URL</span> <span class="token operator">+</span> <span class="token string">'后端接口地址'</span><span class="token punctuation">,</span>      data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        url<span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> status<span class="token punctuation">,</span> data <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">wechatShareConfig</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>data<span class="token punctuation">,</span> shareData<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">wechatShareConfig</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">signatureData<span class="token punctuation">,</span> shareData <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    debug<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    appId<span class="token operator">:</span> signatureData<span class="token punctuation">.</span>appId<span class="token punctuation">,</span>    timestamp<span class="token operator">:</span> signatureData<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span>    nonceStr<span class="token operator">:</span> signatureData<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span>    signature<span class="token operator">:</span> signatureData<span class="token punctuation">.</span>signature<span class="token punctuation">,</span>    jsApiList<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">'checkJsApi'</span><span class="token punctuation">,</span>      <span class="token string">'hideMenuItems'</span><span class="token punctuation">,</span>      <span class="token string">'updateAppMessageShareData'</span><span class="token punctuation">,</span>      <span class="token string">'updateTimelineShareData'</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">checkJsApi</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      jsApiList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'updateAppMessageShareData'</span><span class="token punctuation">,</span> <span class="token string">'updateTimelineShareData'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">updateAppMessageShareData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      title<span class="token operator">:</span> shareData<span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token comment">// 分享标题</span>      desc<span class="token operator">:</span> shareData<span class="token punctuation">.</span>desc<span class="token punctuation">,</span> <span class="token comment">// 分享描述</span>      link<span class="token operator">:</span> shareData<span class="token punctuation">.</span>link<span class="token punctuation">,</span> <span class="token comment">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span>      imgUrl<span class="token operator">:</span> shareData<span class="token punctuation">.</span>imgUrl<span class="token punctuation">,</span> <span class="token comment">// 分享图标</span>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 设置成功</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">updateTimelineShareData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      title<span class="token operator">:</span> shareData<span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token comment">// 分享标题</span>      link<span class="token operator">:</span> shareData<span class="token punctuation">.</span>link<span class="token punctuation">,</span> <span class="token comment">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span>      imgUrl<span class="token operator">:</span> shareData<span class="token punctuation">.</span>imgUrl<span class="token punctuation">,</span> <span class="token comment">// 分享图标</span>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 设置成功</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">hideMenuItems</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 要隐藏的菜单项，只能隐藏“传播类”和“保护类”按钮，所有menu项见附录3</span>      menuList<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">'menuItem:share:qq'</span><span class="token punctuation">,</span>        <span class="token string">'menuItem:share:weiboApp'</span><span class="token punctuation">,</span>        <span class="token string">'menuItem:share:facebook'</span><span class="token punctuation">,</span>        <span class="token string">'menuItem:share:QZone'</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'获取微信配置失败：'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="页面调用传参（分享需要右上角三个点啊，别想着点击事件触发）"><a href="#页面调用传参（分享需要右上角三个点啊，别想着点击事件触发）" class="headerlink" title="页面调用传参（分享需要右上角三个点啊，别想着点击事件触发）"></a>页面调用传参（分享需要右上角三个点啊，别想着点击事件触发）</h4><blockquote><p>坑点：由于微信不信任外部链接，调不起分享哈，需要把链接生成二维码 <a href="https://cli.im/mob">草料二维码官网</a> 微信扫码打开，分享功能才能正常使用（当时卡了我一天，废了）<br> 目前微信已经不支持分享成功之后的回调了<br>[官网文档]（<a href="https://developers.weixin.qq.com/community/develop/doc/00060c661882b0cd62e9d083d51800?highLine=onMenuShareTimeline%EF%BC%89">https://developers.weixin.qq.com/community/develop/doc/00060c661882b0cd62e9d083d51800?highLine=onMenuShareTimeline）</a></p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> wechatShareAgain <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/utils/wx"</span><span class="token punctuation">;</span> <span class="token comment">//我封装的时候放在utils/wx.js文件里</span><span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  title<span class="token operator">:</span> <span class="token string">"拼兮兮"</span><span class="token punctuation">,</span>  link<span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>origin <span class="token operator">+</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>  desc<span class="token operator">:</span> <span class="token string">"快来帮我砍一刀🔪"</span><span class="token punctuation">,</span>  imgUrl<span class="token operator">:</span>    <span class="token string">"https://img.ejiayou.com/upload/2021/9/4af87209-bd4c-4731-b7e7-d81b6a44c455-1631860931489.png"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">wechatShareAgain</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5 微信支付</title>
      <link href="/hexo/2023/06/07/h5-wei-xin-zhi-fu/"/>
      <url>/hexo/2023/06/07/h5-wei-xin-zhi-fu/</url>
      
        <content type="html"><![CDATA[<p>H5 微信支付有两种形式：微信扫码（微信内置浏览器环境）拉起公众号支付 ； 外部浏览器拉起微信小程序支付 </p><a id="more"></a><h3 id="微信公众号支付"><a href="#微信公众号支付" class="headerlink" title="微信公众号支付"></a>微信公众号支付</h3><blockquote><p>1、授权获取code，换取openid（微信有多个后台管理，包括小程序、公众号，所以不同主体下的openid是不一致的！）<br>2、引入微信内置jsBrige（SDK），配置wx.config<br>3、调起支付 内置方法chooseWXPay</p></blockquote><p><font color="red">1、授权方法</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 微信授权</span><span class="token keyword">const</span> appId <span class="token operator">=</span> <span class="token string">"wxe6fa9461e432a2c1"</span><span class="token punctuation">;</span><span class="token comment">// 微信SDK静默授权（公众）</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">wxAuth</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> redirect <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> wxUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://open.weixin.qq.com/connect/oauth2/authorize?appid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>appId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;redirect_uri=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>redirect<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;response_type=code&amp;scope=snsapi_base&amp;state=STATE#wechat_redirect</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  location<span class="token punctuation">.</span>href <span class="token operator">=</span> wxUrl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">2、引入jsBrige，参考这篇文章（<a href="http://lin-mingqi.gitee.io/linmingqi/2022/05/13/%E5%85%A8%E5%B1%80%EF%BC%88%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDscript%EF%BC%89/">动态加载script执行回调</a> ），配置wx.config安全验证</font></p><p>识别环境加载微信sdk</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'https://res2.wx.qq.com/open/js/jweixin-1.6.0.js'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获取config参数并且设置wx.config</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token comment">// 获取config接口</span><span class="token keyword">export</span> <span class="token keyword">const</span> getWeChatConfig <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"chooseWXPay"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    method<span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>    url<span class="token operator">:</span>      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_URL</span> <span class="token operator">+</span>      <span class="token string">"/ensd-c-interface/wx/jsapi/wxe6fa9461e432a2c1/getJsapiSignature"</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      url<span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token string">"content-type"</span><span class="token operator">:</span> <span class="token string">"application/json"</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">||</span> data<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">||</span> data<span class="token punctuation">.</span>rs <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">await</span> <span class="token function">setWeChatConfig</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>data<span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 设置wx.config ready传入方法</span><span class="token keyword">const</span> <span class="token function-variable function">setWeChatConfig</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> list</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      debug<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      appId<span class="token operator">:</span> data<span class="token punctuation">.</span>appId <span class="token operator">||</span> data<span class="token punctuation">.</span>appid<span class="token punctuation">,</span>      timestamp<span class="token operator">:</span> data<span class="token punctuation">.</span>timestamp <span class="token operator">||</span> data<span class="token punctuation">.</span>timeStamp<span class="token punctuation">,</span>      nonceStr<span class="token operator">:</span> data<span class="token punctuation">.</span>nonceStr <span class="token operator">||</span> data<span class="token punctuation">.</span>noncestr<span class="token punctuation">,</span>      signature<span class="token operator">:</span> data<span class="token punctuation">.</span>signature <span class="token operator">||</span> data<span class="token punctuation">.</span>signature<span class="token punctuation">,</span>      jsApiList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"checkJsApi"</span><span class="token punctuation">,</span> <span class="token operator">...</span>list<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">checkJsApi</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        jsApiList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>list<span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 方法已初始化挂载成功</span>          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">weChatPay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>wx<span class="token punctuation">.</span><span class="token function">chooseWXPay</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      timestamp<span class="token operator">:</span> data<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span> <span class="token comment">// 支付签名时间戳，注意微信 jssdk 中的所有使用 timestamp 字段均为小写。但最新版的支付后台生成签名使用的 timeStamp 字段名需大写其中的 S 字符</span>      nonceStr<span class="token operator">:</span> data<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment">// 支付签名随机串，不长于 32 位</span>      <span class="token keyword">package</span><span class="token operator">:</span> data<span class="token punctuation">.</span>packageName<span class="token punctuation">,</span> <span class="token comment">// 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=\*\*\*）</span>      signType<span class="token operator">:</span> data<span class="token punctuation">.</span>signType<span class="token punctuation">,</span> <span class="token comment">// 微信支付V3的传入 RSA ,微信支付V2的传入格式与V2统一下单的签名格式保持一致</span>      paySign<span class="token operator">:</span> data<span class="token punctuation">.</span>sign<span class="token punctuation">,</span> <span class="token comment">// 支付签名</span>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">success</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 因为微信现在已经收回点击完成跳转的回调事件了，详情了解点金计划</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"支付成功后的回调函数payment"</span><span class="token punctuation">,</span> success<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">cancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">cancel</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"支付取消"</span><span class="token punctuation">,</span> cancel<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">fail</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">reject</span><span class="token punctuation">(</span>fail<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"fail支付失败了"</span><span class="token punctuation">,</span> fail<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//支付失败</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">3、调支付方法</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">goWxPay</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    Toast<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      duration<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 持续展示 toast</span>      forbidClick<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      openid<span class="token operator">:</span> storage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>openid<span class="token punctuation">,</span> <span class="token comment">// 一般都需要传openid</span>      <span class="token operator">...</span>info     <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// Promise.all参数是一个数组, 取数据记得用下标取对应的</span>    <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>      <span class="token function">getWeChatConfig</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"chooseWXPay"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      api<span class="token punctuation">.</span>homePage<span class="token punctuation">.</span><span class="token function">createOrderAndPay</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>    <span class="token keyword">const</span> flag <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">weChatPay</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    Toast <span class="token operator">&amp;&amp;</span> Toast<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 取消订单接口</span>      <span class="token keyword">await</span> api<span class="token punctuation">.</span>order<span class="token punctuation">.</span><span class="token function">cancelOrder</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        orderId<span class="token operator">:</span> data<span class="token punctuation">.</span>bizNo      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    Toast <span class="token operator">&amp;&amp;</span> Toast<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="微信小程序支付-（外部通过云函数跳转小程序）"><a href="#微信小程序支付-（外部通过云函数跳转小程序）" class="headerlink" title="微信小程序支付 （外部通过云函数跳转小程序）"></a>微信小程序支付 （外部通过云函数跳转小程序）</h3><blockquote><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/staticstorage/jump-miniprogram.html">静态网站H5打开小程序官网文档</a></p></blockquote><p><img src="http://linmingqi.top/img/%E9%9D%99%E6%80%81h5%E6%89%93%E5%BC%80%E5%B0%8F%E7%A8%8B%E5%BA%8F.png"></p><font color="red">问题一：微信扫码静态网站H5进行跳转小程序传参会丢失(不知道为啥会丢失)</font><font color="blue">（解决：需要通过onload加载把参数挂载到节点上）</font><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>  window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"launch-btn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"env-version"</span><span class="token punctuation">,</span> env_version<span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"launch-btn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">path</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>path<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">?userId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>query<span class="token punctuation">.</span>userId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"launch-btn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token string">"gh_937f95394e6c"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><font color="red">问题二：静态网站H5进入小程序，小程序的场景值是1065，app移动应用打开场景值是1069，某种场景就是两种打开方式会混合使用，导致场景值污染无法准确识别</font><blockquote><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/scene-list.html">文档 — 打开微信小程序对应场景值</a><br><a href="https://developers.weixin.qq.com/miniprogram/dev/api/base/app/life-cycle/wx.getEnterOptionsSync.html">文档 — 微信小程序获取场景值方法</a></p></blockquote><p><font color="blue">解决：使用wx.getEnterOptionsSync()方法</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> referrerInfo<span class="token punctuation">,</span> scene <span class="token punctuation">&#125;</span> <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getEnterOptionsSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> <span class="token string">'scene场景值'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#48c9b0">补充：这里涉及到小程序的冷启动和热启动的概念（后台最多两个小时），<font color="red">首次进入小程序冷启动会触发</font> app.js 中的 onLaunch 和 wx.getLaunchOptionsSync() ，<font color="red">后台切换进入是热启动不会触发</font> onLaunch 和 wx.getLaunchOptionsSync 了，要想获取第二次的数据只能通过 wx.getEnterOptionsSync() 获取</font></p><p><font color="red">问题三：静态网站H5跳转云函数页面打开小程序报错、异常(errCode 40165)</font></p><p><img src="http://linmingqi.top/img/%E4%BA%91%E5%87%BD%E6%95%B0%E5%BC%82%E5%B8%B8504002.png"></p><p><font color="blue">（解决：小程序正式版必须已经有这个路径，没有就会报错）</font></p><font color="red">问题四：小程序支付，只需要对应的api（wx.requestPayment）详细看文档</font><blockquote><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/payment/wx.requestPayment.html">wx.requestPayment</a></p></blockquote><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5 微信授权</title>
      <link href="/hexo/2023/06/07/h5-wei-xin-shou-quan/"/>
      <url>/hexo/2023/06/07/h5-wei-xin-shou-quan/</url>
      
        <content type="html"><![CDATA[<p>微信授权有两种，一种是静默授权、一种是手动授权（一般用于微信卡包，领卷，根据用户的唯一标识来判断领券状态）</p><a id="more"></a><h4 id><a href="#" class="headerlink" title></a></h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html">官方文档</a> 详情看官方文档</p><p><font color="#08c">1.需要公众号的appid</font></p><p><font color="#08c">2.微信开发者者权限</font></p><p><font color="#08c">3.一定要先关注绑定的公众号</font></p><p><font color="#08c">4.生态都是完整的，我们只需要跟着来就行了</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">getWeiXinImpower</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> appid <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment">//公众号唯一标识</span>    <span class="token keyword">let</span> <span class="token constant">REDIRECT_URI</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment">//重定向地址</span>    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">relpace</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://open.weixin.qq.com/connect/oauth2/authorize?appid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>appid<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;redirect_uri=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token constant">REDIRECT_URI</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;code=CODE&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 授权之后选择跳转回来的地址,code参数一般会有时效性的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><font color="#08c"> 5.微信授权之后的链接是会携带参数的，我们分享时的链接是会带上用户参数的，记得要把链接上的参数去掉。</font><font color="#08c"> 6.微信授权重定向之后带来的问题</font><p>首先，我们需要理解，微信授权重定向、微信浏览器里会记录有未授权的页面和已授权的页面，这时要关闭页面时需要连续快速点击两次返回才会正常关闭页面</p><p>先引入微信的js包</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://res.wx.qq.com/open/js/jweixin-1.3.2.js"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span> charset<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>wx<span class="token punctuation">.</span><span class="token function">closeWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//引用关闭微信的h5页面事件（整个进程关掉会把其他页面也给干掉）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ios微信下，是有回退和前进的按钮，回退和前进是不会重新刷新页面的，这时就会引发一些业务上的问题。例如：返回的时候未授权的页面不会进行重定向了，一直卡在未授权页面，这时用户体验上就有bug</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'pageshow'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>persisted <span class="token operator">||</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>performance <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>performance<span class="token punctuation">.</span>navigation<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 页面后退时操作：记录返回时间</span>        window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>这样监听ios微信的回退按钮，达到刷新页面的作用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安卓微信下，返回是会自动刷新页面的，相比较ios就少一部监听回退的动作</p><p>解决微信重定向授权返回需要点击两次的问题：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">isWeiXinImpower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'code'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        wx<span class="token punctuation">.</span><span class="token function">closeWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">getUrlParam</span><span class="token punctuation">(</span><span class="token string">'code'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">//getUrlParam()是截取地址栏参数的方法</span>        sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'code'</span><span class="token punctuation">,</span> <span class="token function">getUrlParam</span><span class="token punctuation">(</span><span class="token string">'code'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">getWeiXinImpower</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>判断地址栏code参数，有code的保存到sessionStorage中，无code走授权重定向，之后进入会再走一层判断，判断这个页面是否有code的sessionStorage，其实无授权的页面和有授权的页面（都是同一个页面，带不带code参数而已）都能找到这个code的sessionStorage，这点很重要，所以会话中有code的我们就会关闭微信浏览器，实现返回一次直接退出页面的</p><p>有些场景不兼容：假如h5跳h5，这种情况会把所有h5都给直接干掉了</p><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5 支付宝支付</title>
      <link href="/hexo/2023/06/07/h5-zhi-fu-bao-zhi-fu/"/>
      <url>/hexo/2023/06/07/h5-zhi-fu-bao-zhi-fu/</url>
      
        <content type="html"><![CDATA[<p>H5支付宝支付有两种形式：支付宝扫码拉起生活号支付（支付宝内置浏览器环境） ； 外部浏览器拉起支付宝h5支付 </p><a id="more"></a><blockquote><p>一些相关的官网文档，支付宝的文档真心不咋滴，又多又杂，找不到北的感觉<br><a href="https://opendocs.alipay.com/open/203/105285">支付宝支付流程图</a><br><a href="https://myjsapi.alipay.com/alipayjsapi/util/pay/tradePay.html">支付失败详细的resultCode对应码</a><br><a href="https://myjsapi.alipay.com/alipayjsapi/util/pay/tradePay.html">tradePay支付方法</a></p></blockquote><h3 id="支付宝扫码拉起生活号支付（当面付）"><a href="#支付宝扫码拉起生活号支付（当面付）" class="headerlink" title="支付宝扫码拉起生活号支付（当面付）"></a>支付宝扫码拉起生活号支付（当面付）</h3><blockquote><p>1、授权获取code，换取openid（支付宝只有一个后台管理，包括小程序、生活号，所以不同主体下的openid是一致的！）<br>2、引入支付宝内置jsBrige，调支付方法<br>3、调起支付 内置方法tradePay</p></blockquote><p><font color="red">1、授权方法</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> aliAppId <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_ALI_APPID</span> <span class="token operator">||</span> <span class="token string">"2021003156646387"</span><span class="token punctuation">;</span><span class="token comment">// 支付宝SDK静默授权（公众）</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">aliAuth</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> redirect <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> aliUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://openauth.alipay.com/oauth2/publicAppAuthorize.htm?app_id=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>aliAppId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;scope=auth_base&amp;redirect_uri=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>redirect<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  location<span class="token punctuation">.</span>href <span class="token operator">=</span> aliUrl<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">2、引入jsBrige，参考这篇文章（<a href="http://lin-mingqi.gitee.io/linmingqi/2022/05/13/%E5%85%A8%E5%B1%80%EF%BC%88%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDscript%EF%BC%89/">动态加载script执行回调</a> ）</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'https://appx/web-view.min.js'</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">ready</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 如果jsbridge已经注入则直接调用</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>AlipayJSBridge<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 如果没有注入则监听注入的事件</span>    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"AlipayJSBridgeReady"</span><span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">3、调支付方法tradePay</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">goAliPay</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  Toast<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    duration<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 持续展示 toast</span>    forbidClick<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    openid<span class="token operator">:</span> storage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>aliUserId<span class="token punctuation">,</span>    <span class="token operator">...</span>info  <span class="token comment">// 创建订单所需的参数，创建订单必须会需要aliUserId</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span>homePage<span class="token punctuation">.</span><span class="token function">createOrderAndPay</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建订单接口</span>    <span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span><span class="token function">AlipayJSBridge</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>        <span class="token string">"tradePay"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          tradeNO<span class="token operator">:</span> data<span class="token punctuation">.</span>tradeNo        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>resultCode <span class="token operator">===</span> <span class="token string">"9000"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 支付成功，需要回调跳转，或者做一些页面刷新的动作</span>            location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./payment?bizNo=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">.</span>bizNo<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&amp;payOrderNo=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">.</span>payOrderNo<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 支付失败，包括拉起支付控件点X取消支付(6001)，</span>            <span class="token keyword">await</span> api<span class="token punctuation">.</span>order<span class="token punctuation">.</span><span class="token function">cancelOrder</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>              <span class="token comment">// 取消支付这时会取消这笔订单,业务场景需要</span>              orderId<span class="token operator">:</span> data<span class="token punctuation">.</span>bizNo            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  Toast <span class="token operator">&amp;&amp;</span> Toast<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="外部浏览器拉起支付宝支付（直接document-write后端接口返回的支付表单）"><a href="#外部浏览器拉起支付宝支付（直接document-write后端接口返回的支付表单）" class="headerlink" title="外部浏览器拉起支付宝支付（直接document.write后端接口返回的支付表单）"></a>外部浏览器拉起支付宝支付（直接document.write后端接口返回的支付表单）</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">goAliH5Pay</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  Toast<span class="token punctuation">.</span><span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    duration<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 持续展示 toast</span>    forbidClick<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>info   <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span>homePage<span class="token punctuation">.</span><span class="token function">createOrderAndPay</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建订单接口</span>    Toast<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>appPayBody<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    Toast<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><font color="red">注意：最简单的加载样式就是vant提供的loading组件，h5是一步步递进的，但是也有回退的时候，所以最好是复原页面的状态再进行跳转</font></p></blockquote><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5（webview双通信）</title>
      <link href="/hexo/2023/06/07/h5-webview-shuang-tong-xin/"/>
      <url>/hexo/2023/06/07/h5-webview-shuang-tong-xin/</url>
      
        <content type="html"><![CDATA[<p>APP 与 H5 直接 进行双通信交互</p><a id="more"></a><p><font color="red">APP jsBridge 实现封装的一套实现方案</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> isApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/utils/index"</span><span class="token punctuation">;</span><span class="token comment">/** * 初始jsBridge */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">setupWebViewJavascriptBridge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 非app环境不执行</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>WebViewJavascriptBridge<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>WebViewJavascriptBridge<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>WVJBCallbacks<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> window<span class="token punctuation">.</span>WVJBCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  window<span class="token punctuation">.</span>WVJBCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> WVJBIframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"iframe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  WVJBIframe<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>  WVJBIframe<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">"https://__bridge_loaded__"</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>WVJBIframe<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>WVJBIframe<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> success <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  code<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  message<span class="token operator">:</span> <span class="token string">"调用成功"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> fail <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  code<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  message<span class="token operator">:</span> <span class="token string">"调用失败"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * 用于JS调用APP的方法，一般直接使用即可 * @param &#123;*&#125; name  * @param &#123;*&#125; handler  */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">jsCallNative</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">methood<span class="token punctuation">,</span> params<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">setupWebViewJavascriptBridge</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">bridge</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    bridge<span class="token operator">?.</span><span class="token function">callHandler</span><span class="token punctuation">(</span>methood<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * 用于注册APP调用JS的方法，一般直接使用即可 * @param &#123;*&#125; name * @param &#123;*&#125; handler */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">registerJavascriptHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> handler</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">setupWebViewJavascriptBridge</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">bridge</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    bridge<span class="token operator">?.</span><span class="token function">registerHandler</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">resp<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> respJson<span class="token punctuation">;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        respJson <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">handler</span><span class="token punctuation">(</span>respJson<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">callback</span><span class="token punctuation">(</span>          <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token operator">...</span>success<span class="token punctuation">,</span>            res          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">callback</span><span class="token punctuation">(</span>          <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token operator">...</span>fail<span class="token punctuation">,</span>            message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">app调用js报错: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * 基础交互方法封装带防重功能 * @param &#123;String&#125; methood Native功能类型编码 * @param &#123;Object&#125; params 传递给Native的参数 * @param &#123;boolean&#125; preventRepeat 防重 */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">baseAppCall</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">methood<span class="token punctuation">,</span> params<span class="token punctuation">,</span> preventRepeat</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 500ms内防重限制</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>preventRepeat<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>flagMap <span class="token operator">=</span> window<span class="token punctuation">.</span>flagMap <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>window<span class="token punctuation">.</span>flagMap<span class="token punctuation">[</span>methood<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 防止点击过快，多次唤起app</span>      window<span class="token punctuation">.</span>flagMap<span class="token punctuation">[</span>methood<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 500ms后解开限制</span>        window<span class="token punctuation">.</span>flagMap<span class="token punctuation">[</span>methood<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token function">callApp</span><span class="token punctuation">(</span>methood<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"禁止重复调用"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//否则直接和app交互</span>    <span class="token keyword">return</span> <span class="token function">callApp</span><span class="token punctuation">(</span>methood<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/** * JS调用APP的基础方法，可以基于此方法再次封装 * @param &#123;*&#125; methood * @param &#123;*&#125; params */</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">callApp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">methood<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"JS->APP: "</span><span class="token punctuation">,</span> methood<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 非App环境</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"非App环境，直接返回空对象"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        code<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>        message<span class="token operator">:</span> <span class="token string">"非app环境"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">jsCallNative</span><span class="token punctuation">(</span>methood<span class="token punctuation">,</span> params<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"JS->APP结果: "</span><span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> respJson<span class="token punctuation">;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        respJson <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>respJson<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">resolve</span><span class="token punctuation">(</span>respJson<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token function">reject</span><span class="token punctuation">(</span>respJson<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">js调用app出错: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 1、获取app信息</span><span class="token comment">// 2、获取用户信息（包含位置信息字段）</span><span class="token comment">// 3、位置信息</span><span class="token comment">// 1、跳native页面</span><span class="token comment">// 2、打开webview  支持是否自定义导航栏</span><span class="token comment">// 3、关闭webview  支持关闭当前、所有</span><span class="token comment">// 4、跳转小程序</span><span class="token comment">// 1、分享（分享列表、指定分享)</span><span class="token comment">// 2、支付(支付列表、指定支付)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/**  @param &#123;*&#125; name 函数名  @param &#123;*&#125; callback 执行的回调方法  H5 的逻辑注入到 APP 的函数方法 jsRefreshOrderStatus 中， 等到app触发了jsRefreshOrderStatus并且成功执行就会执行 H5 的事件*/</span><span class="token function">registerJavascriptHandler</span><span class="token punctuation">(</span><span class="token string">"jsRefreshOrderStatus"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>     <span class="token comment">// h5页面事件逻辑执行</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/**  @param &#123;*&#125; name 函数名  @param &#123;*&#125; data 传递参数   H5 调用 APP 的函数方法 jsWebConfiguration 并传递参数*/</span><span class="token function">baseAppCall</span><span class="token punctuation">(</span><span class="token string">"jsWebConfiguration"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    showNavigator<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    backColor<span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>    textColor<span class="token operator">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5 实现九宫格抽奖</title>
      <link href="/hexo/2023/06/07/h5-jiu-gong-ge-chou-jiang/"/>
      <url>/hexo/2023/06/07/h5-jiu-gong-ge-chou-jiang/</url>
      
        <content type="html"><![CDATA[<p>H5 九宫格抽奖、实现思路</p><a id="more"></a><p><font color="#08c"> 实现思路：每一次抽奖都是一个 list 数组，每次定时器执行 index 下标+1 取到 list 数组对应下标值，通过赋值判断添加高亮样式 </font><br><font color="#08c"> 所有的奖品都只是一张图片，抽奖区域设置透明背景置于图片上层，动态设置宽度、高度、间隔</font></p><p>实现代码如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>run-light<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">box_style</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in prizes<span class="token punctuation">"</span></span>      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>      <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[index === prize &amp;&amp; <span class="token punctuation">'</span>light<span class="token punctuation">'</span>, item.id === 4 &amp;&amp; <span class="token punctuation">'</span>opacity<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span>      <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getPrize(index)<span class="token punctuation">"</span></span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex__center__center<span class="token punctuation">"</span></span>      <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">prize_style</span><span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- 九宫格中间镂空区域 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.id === 4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Toast <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vant"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"run"</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 格子宽度</span>    width<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> <span class="token punctuation">[</span>Number<span class="token punctuation">,</span> String<span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">93</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 格子高度</span>    height<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> <span class="token punctuation">[</span>Number<span class="token punctuation">,</span> String<span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">93</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 格子间隔</span>    gap<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> <span class="token punctuation">[</span>Number<span class="token punctuation">,</span> String<span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 格子边框</span>    radius<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> <span class="token punctuation">[</span>Number<span class="token punctuation">,</span> String<span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 抽奖次数</span>    number<span class="token operator">:</span> <span class="token punctuation">[</span>String<span class="token punctuation">,</span> Number<span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">// 是否禁用格子点击事件</span>    disabled<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 中奖</span>      prize<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>      <span class="token comment">// 转盘旋转方向</span>      sort<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment">// 奖品</span>      prizes<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"手机0"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"钱包1"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"iPhone11-2"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"华为P30-3"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"开始抽奖"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Ipad-5"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小米背包-6"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小米鼠标-7"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"无线路由器-8"</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment">// 记录最后一次抽奖停留位置</span>      endStop<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>      <span class="token comment">// 按钮限制</span>      flag<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment">// 转圈次数</span>      turns<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>      <span class="token comment">// 转动格数</span>      current<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token comment">// 定时器执行时间</span>      min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token comment">// 执行速度</span>      speed<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>      <span class="token comment">// 实现变速运动</span>      diff<span class="token operator">:</span> <span class="token number">75</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 整个抽奖区域</span>    <span class="token function">prize_style</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        width<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token string">"rem"</span><span class="token punctuation">,</span>        height<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token string">"rem"</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token string">"border-radius"</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>radius <span class="token operator">+</span> <span class="token string">"px"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 奖品格子</span>    <span class="token function">box_style</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        gap<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gap <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token string">"rem"</span><span class="token punctuation">,</span>        width<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gap <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token string">"rem"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">start</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 奖品1、2、3、4、5、5、6、7、8</span>      <span class="token keyword">let</span> random <span class="token operator">=</span> res<span class="token punctuation">;</span>      <span class="token comment">// 第二次转盘需要把剩下的半圈转完</span>      <span class="token keyword">let</span> startArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>endStop <span class="token operator">!=</span> <span class="token keyword">null</span>      <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        startArray <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sort<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>sort<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>endStop<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>sort<span class="token punctuation">.</span>length        <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 转几圈</span>      <span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>turns<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        array <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sort<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 最后一圈（不一定是一整圈）</span>      <span class="token keyword">let</span> lastArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> random<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        lastArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sort<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>startArray<span class="token punctuation">,</span> <span class="token operator">...</span>array<span class="token punctuation">,</span> <span class="token operator">...</span>lastArray<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment">// 改变索引实现转动效果</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startCircle</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">startCircle</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 转圈速度</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>diff<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token number">20</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">&lt;=</span> list<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>diff<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 转圈定时器执行</span>      window<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> list<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 清除定时器</span>          <span class="token function">clearTimeout</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 清空跑格数</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          <span class="token comment">// 按钮禁用关闭</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token comment">// 记录最后停留位置</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>endStop <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prize<span class="token punctuation">;</span>          <span class="token comment">// 清除定时器min</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>min <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>prize <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>current<span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>current<span class="token operator">++</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startCircle</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 接口模拟</span>    <span class="token function">getPrizeApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token function">res</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">/*        index 格子下标位置        disabled 是否是禁用格子的点击事件        fn 后端接口请求获取奖品    */</span>    <span class="token function">getPrize</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> disabled <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>disabled<span class="token punctuation">,</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>getPrizeApi</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 禁用格子点击事件</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>disabled<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 没有抽奖次数</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>number <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token string">"没有抽奖次数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 重复点击（index === 4）是九宫格最中间的位置</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">||</span> index <span class="token operator">===</span> <span class="token string">"start"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 监听父组件事件</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 随机获取奖品开始转圈动画</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token string">"请勿重复点击"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style lang="less" scoped>.run-light</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> start<span class="token selector">;  div</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.light</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>252<span class="token punctuation">,</span> 211<span class="token punctuation">,</span> 4<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.opacity</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> transparent <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>组件调用示例</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ensdRunLight</span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gift-bag__run<span class="token punctuation">"</span></span>    <span class="token attr-name">:gap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span>    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>run_prize<span class="token punctuation">"</span></span>    <span class="token attr-name">:number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info.num<span class="token punctuation">"</span></span>    <span class="token attr-name">@start</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>change<span class="token punctuation">"</span></span>    <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gift-bag__num<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>&#123;&#123; info.num &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>剩余抽奖次数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ensdRunLight</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5 页面屏幕适配</title>
      <link href="/hexo/2023/06/07/h5-dan-wei-zhuan-huan-px-zhuan-rem/"/>
      <url>/hexo/2023/06/07/h5-dan-wei-zhuan-huan-px-zhuan-rem/</url>
      
        <content type="html"><![CDATA[<p>场景：H5 需要适配不同屏幕的大小，需要把px单位转换rem单位</p><a id="more"></a><h2 id="封装自动识别单位转换函数"><a href="#封装自动识别单位转换函数" class="headerlink" title="封装自动识别单位转换函数"></a>封装自动识别单位转换函数</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入即可，页面写样式时还是用px单位，会自动转换</span><span class="token keyword">import</span> <span class="token string">"utils/flexible"</span><span class="token punctuation">;</span> <span class="token comment">//下面代码文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">win<span class="token punctuation">,</span> lib</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> doc <span class="token operator">=</span> win<span class="token punctuation">.</span>document<span class="token punctuation">;</span>  <span class="token keyword">var</span> docEl <span class="token operator">=</span> doc<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>  <span class="token keyword">var</span> metaEl <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'meta[name="viewport"]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> flexibleEl <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'meta[name="flexible"]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> dpr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> tid<span class="token punctuation">;</span>  <span class="token keyword">var</span> flexible <span class="token operator">=</span> lib<span class="token punctuation">.</span>flexible <span class="token operator">||</span> <span class="token punctuation">(</span>lib<span class="token punctuation">.</span>flexible <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>metaEl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"将根据已有的meta标签来设置缩放比例"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> match <span class="token operator">=</span> metaEl      <span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">)</span>      <span class="token comment">// eslint-disable-next-line no-useless-escape</span>      <span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">initial\-scale=([\d\.]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      scale <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      dpr <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> scale<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>flexibleEl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> content <span class="token operator">=</span> flexibleEl<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// eslint-disable-next-line no-useless-escape</span>      <span class="token keyword">var</span> initialDpr <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">initial\-dpr=([\d\.]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// eslint-disable-next-line no-useless-escape</span>      <span class="token keyword">var</span> maximumDpr <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">maximum\-dpr=([\d\.]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>initialDpr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        dpr <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>initialDpr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        scale <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> dpr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>maximumDpr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        dpr <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>maximumDpr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        scale <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> dpr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dpr <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>scale<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// var isAndroid = win.navigator.appVersion.match(/android/gi);</span>    <span class="token keyword">var</span> isIPhone <span class="token operator">=</span> win<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">iphone</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> devicePixelRatio <span class="token operator">=</span> win<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isIPhone<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>devicePixelRatio <span class="token operator">>=</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>dpr <span class="token operator">||</span> dpr <span class="token operator">>=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        dpr <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>devicePixelRatio <span class="token operator">>=</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>dpr <span class="token operator">||</span> dpr <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        dpr <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        dpr <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 其他设备下，仍旧使用1倍的方案</span>      dpr <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    scale <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> dpr<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  docEl<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"data-dpr"</span><span class="token punctuation">,</span> dpr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>metaEl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    metaEl <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"meta"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    metaEl<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"viewport"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    metaEl<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>      <span class="token string">"content"</span><span class="token punctuation">,</span>      <span class="token string">"initial-scale="</span> <span class="token operator">+</span>        scale <span class="token operator">+</span>        <span class="token string">", maximum-scale="</span> <span class="token operator">+</span>        scale <span class="token operator">+</span>        <span class="token string">", minimum-scale="</span> <span class="token operator">+</span>        scale <span class="token operator">+</span>        <span class="token string">", user-scalable=no"</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>docEl<span class="token punctuation">.</span>firstElementChild<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      docEl<span class="token punctuation">.</span>firstElementChild<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>metaEl<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> wrap <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      wrap<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>metaEl<span class="token punctuation">)</span><span class="token punctuation">;</span>      doc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>wrap<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">refreshRem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> width <span class="token operator">=</span> docEl<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">/</span> dpr <span class="token operator">></span> <span class="token number">540</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      width <span class="token operator">=</span> <span class="token number">540</span> <span class="token operator">*</span> dpr<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> rem <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">37.5</span><span class="token punctuation">;</span>    <span class="token comment">// 直接操作style会导致safari10报错，出现attempted to assign to readonly property</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      docEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> rem <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    flexible<span class="token punctuation">.</span>rem <span class="token operator">=</span> win<span class="token punctuation">.</span>rem <span class="token operator">=</span> rem<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  win<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>    <span class="token string">"resize"</span><span class="token punctuation">,</span>    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span>      tid <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>refreshRem<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token boolean">false</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  win<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>    <span class="token string">"pageshow"</span><span class="token punctuation">,</span>    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>persisted<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span>        tid <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>refreshRem<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token boolean">false</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// if (doc.readyState === 'complete') &#123;</span>  <span class="token comment">//     doc.body.style.fontSize = 12 * dpr + 'px';</span>  <span class="token comment">// &#125; else &#123;</span>  <span class="token comment">//     doc.addEventListener('DOMContentLoaded', function(e) &#123;</span>  <span class="token comment">//         doc.body.style.fontSize = 12 * dpr + 'px';</span>  <span class="token comment">//     &#125;, false);</span>  <span class="token comment">// &#125;</span>  <span class="token function">refreshRem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  flexible<span class="token punctuation">.</span>dpr <span class="token operator">=</span> win<span class="token punctuation">.</span>dpr <span class="token operator">=</span> dpr<span class="token punctuation">;</span>  flexible<span class="token punctuation">.</span>refreshRem <span class="token operator">=</span> refreshRem<span class="token punctuation">;</span>  flexible<span class="token punctuation">.</span><span class="token function-variable function">rem2px</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> val <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rem<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> d <span class="token operator">===</span> <span class="token string">"string"</span> <span class="token operator">&amp;&amp;</span> d<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">rem$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      val <span class="token operator">+=</span> <span class="token string">"px"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> val<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  flexible<span class="token punctuation">.</span><span class="token function-variable function">px2rem</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> val <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rem<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> d <span class="token operator">===</span> <span class="token string">"string"</span> <span class="token operator">&amp;&amp;</span> d<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">px$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      val <span class="token operator">+=</span> <span class="token string">"rem"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> val<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> window<span class="token punctuation">[</span><span class="token string">"lib"</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>window<span class="token punctuation">[</span><span class="token string">"lib"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5（CSS兼容语法适配）</title>
      <link href="/hexo/2023/06/07/h5-css-jian-rong-yu-fa-gua-pei/"/>
      <url>/hexo/2023/06/07/h5-css-jian-rong-yu-fa-gua-pei/</url>
      
        <content type="html"><![CDATA[<p>H5 的 样式兼容各个浏览器的毒点、实现效果</p><a id="more"></a><h3 id="IOS底部小黑条影响布局"><a href="#IOS底部小黑条影响布局" class="headerlink" title="IOS底部小黑条影响布局"></a>IOS底部小黑条影响布局</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.safe-area-bottom</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token function">constant</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">注：假如元素本身有padding-bottom边距，会被覆盖</font></p><h3 id="多个img标签拼接处留有白缝"><a href="#多个img标签拼接处留有白缝" class="headerlink" title="多个img标签拼接处留有白缝"></a>多个img标签拼接处留有白缝</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.img</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="height单位100vh-会把一部分浏览器的底部算进去，导致布局底部的被遮挡"><a href="#height单位100vh-会把一部分浏览器的底部算进去，导致布局底部的被遮挡" class="headerlink" title="height单位100vh 会把一部分浏览器的底部算进去，导致布局底部的被遮挡"></a>height单位100vh 会把一部分浏览器的底部算进去，导致布局底部的被遮挡</h3><p><font color="red">注：不要使用vh单位，改为100%</font></p><h3 id="line-height-在华为系统会有偏差"><a href="#line-height-在华为系统会有偏差" class="headerlink" title="line-height 在华为系统会有偏差"></a>line-height 在华为系统会有偏差</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.font-center</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red">注：改为flex布局水平垂直居中</font></p><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5（webview单通信）</title>
      <link href="/hexo/2023/06/07/h5-webview-dan-tong-xin/"/>
      <url>/hexo/2023/06/07/h5-webview-dan-tong-xin/</url>
      
        <content type="html"><![CDATA[<p>场景：当 app 或者小程序需要嵌入我们开发的 h5 页面的时候，需要处理的一些问题，完成不同环境下实现不同的交互</p><a id="more"></a><h2 id="封装的一套环境识别方法"><a href="#封装的一套环境识别方法" class="headerlink" title="封装的一套环境识别方法"></a>封装的一套环境识别方法</h2><p>  <font color="#08c">window.webkit.messageHandlers.jsCallToNativePages.postMessage(“{}”); 调用 ios 的 app 方法</font></p><p>  <font color="#08c">window.Android.jsCallToNativePages(“{}”); 调用 android 的 app 方法</font></p><p>  <font color="#08c">jsCallToNativePages 是 app 方法名，这个需要 app 开发者提供</font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> u <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> isWeiXin <span class="token operator">=</span> u<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">MicroMessenger</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'micromessenger'</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token keyword">var</span> isiOS <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">iphone|ipad|ipod</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>isWeiXin<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token number">3</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isiOS<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//ios</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//我们无法识别app的环境，只能通过调用app软件暴露出来的方法，执行一次，没有这个方法就会报错，我们可以捕获异常从而达到环境的判断</span>      window<span class="token punctuation">.</span>webkit<span class="token punctuation">.</span>messageHandlers<span class="token punctuation">.</span>jsCallToNativePages<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125;'</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'isios'</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token number">5</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//android</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span>Android<span class="token punctuation">.</span><span class="token function">jsCallToNativePages</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125;'</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token number">2</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token number">5</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 1： ios环境的app</span><span class="token comment">// 2:  android环境的app</span><span class="token comment">// 3:  微信环境下的浏览器</span><span class="token comment">// 5:  浏览器环境</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目（包管理）</title>
      <link href="/hexo/2023/06/07/xiang-mu-bao-guan-li/"/>
      <url>/hexo/2023/06/07/xiang-mu-bao-guan-li/</url>
      
        <content type="html"><![CDATA[<p>项目安装依赖准备、总结遇到的问题</p><a id="more"></a><h3 id="nrm镜像源管理工具"><a href="#nrm镜像源管理工具" class="headerlink" title="nrm镜像源管理工具"></a><font color="#08c">nrm镜像源管理工具</font></h3><p>安装成功，但是nrm ls查看源的时候，报以下错误</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Error [ERR_REQUIRE_ESM]: require() of ES Module D:\npm\node_modules\nrm\node_modules\open\index.js from D:\npm\node_modules\nrm\cli.js not supported.Instead change the require of index.js in D:\npm\node_modules\nrm\cli.js to a dynamic import() which is available in all CommonJS modules.at Object. (D:\npm\node_modules\nrm\cli.js:9:14) &#123;code: &#39;ERR_REQUIRE_ESM&#39;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原因：应该使用 open 的 CommonJs规范的包 ，现在 open v9.0.0 是 ES Module 版本的包</p><p>解决方法：<font color="#08c">npm install -g nrm <a href="mailto:&#111;&#112;&#x65;&#110;&#x40;&#x38;&#46;&#52;&#46;&#50;">&#111;&#112;&#x65;&#110;&#x40;&#x38;&#46;&#52;&#46;&#50;</a> –save</font> 安装指定版本的包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 获取镜像nrm ls# 使用镜像nrm use<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="pnpm使用"><a href="#pnpm使用" class="headerlink" title="pnpm使用"></a><font color="#08c">pnpm使用</font></h3><p>pnpm install 提示报错一些依赖没有成功安装上的时候，项目根目录建.npmrc文件，复制以下代码</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">shamefully-hoist: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>官网说明：提升至根模块目录中意味着应用代码可以访问到幻影依赖，即使他们对解析策略做了不当的修改。当处理一些有缺陷的可插拔工具不能正确解析依赖关系时，此设置很有用。<br>补充：<a href="https://pnpm.io/zh/npmrc">npmrc官网</a></p><h3 id="nvm版本管理工具"><a href="#nvm版本管理工具" class="headerlink" title="nvm版本管理工具"></a><font color="#08c">nvm版本管理工具</font></h3><h4 id="node安装成功，npm报错、提示找不到命令"><a href="#node安装成功，npm报错、提示找不到命令" class="headerlink" title="node安装成功，npm报错、提示找不到命令"></a>node安装成功，npm报错、提示找不到命令</h4><p>需要手动下载与node对应版本的npm</p><p>npm下载地址：<a href="http://npm.taobao.org/mirrors/npm/">http://npm.taobao.org/mirrors/npm/</a> （下载对应版本的zip文件）<br>node版本对应npm版本：<a href="https://nodejs.org/zh-cn/download/releases/">https://nodejs.org/zh-cn/download/releases/</a></p><p>最后将下载的npm文件夹里面的bin目录下的npm和npm.cmd两个文件复制一份到对应node版本的根目录下。</p><h3 id="rimraf快速删除文件"><a href="#rimraf快速删除文件" class="headerlink" title="rimraf快速删除文件"></a><font color="#08c">rimraf快速删除文件</font></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ npm install rimraf -g$ rimraf node_modules #删除node_modules, 管你什么权限不够、资源文件占用, 我给你通通删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="node-sass-版本对应"><a href="#node-sass-版本对应" class="headerlink" title="node-sass 版本对应"></a><font color="#08c">node-sass 版本对应</font></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ERR! gyp ERR! cwd D:\workspace\node_modules\node-sass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>nodejs与node-sass版本不匹配</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># node与node-sass版本对应表# node版本 node-sass版本node 16——6.0+node 15——5.0+node 14——4.14+node13—— 4.13+,&lt;5.0node12—— 4.12+node11—— 4.10+,&lt;5.0node10—— 4.9+,&lt;5.0node8——4.5.3+,&lt;5.0node&lt;8—— &lt;5.0# sass-loader与node-sass版本对应表# sass-loader版本 node-sass版本sass-loader 4.1.1—— node-sass 4.3.0sass-loader 7.0.3—— node-sass 4.7.2sass-loader 7.3.1—— node-sass 4.7.2sass-loader 7.3.1—— node-sass 4.14.1sass-loader 10.0.1—— node-sass 6.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 项目搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2 + vant2.0 标签页 + 折叠面板</title>
      <link href="/hexo/2023/02/07/gong-neng-mo-kuai-vue2-vant2.0-biao-qian-ye-zhe-die-mian-ban/"/>
      <url>/hexo/2023/02/07/gong-neng-mo-kuai-vue2-vant2.0-biao-qian-ye-zhe-die-mian-ban/</url>
      
        <content type="html"><![CDATA[<p>vue2.0 + vant2.0(Tab, Tabs标签页、 Collapse, CollapseItem折叠面板) 实现标签页点击跳转到页面对应的位置，并打开折叠内容（手风琴效果），页面滚动、Tabs标签页会根据滚动位置进行横向滚动</p><a id="more"></a><p><font color="#08c">原理：多个折叠面板，每一个tab标签都对应一个折叠面板，当点击tab1时打开对应1的折叠面板，关闭其他的折叠面板</font></p><p><font color="#08c">实现代码如下</font></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>customer-tabs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- v-model，是tabs对应的下标，刚进入页面就是停留在第一个tab --></span>    <span class="token comment">&lt;!-- scrollspy 页面滚动锚点 --></span>    <span class="token comment">&lt;!-- 官网链接https://vant-contrib.gitee.io/vant/v2/#/zh-CN/tab --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabs</span>      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span>      <span class="token attr-name">scrollspy</span>      <span class="token attr-name">sticky</span>      <span class="token attr-name">line-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>      <span class="token attr-name">line-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span>      <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>linear-gradient(270deg, #FFBB45 0%, #FF681C 100%);<span class="token punctuation">"</span></span>      <span class="token attr-name">offset-top</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>176<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tab</span>        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in list<span class="token punctuation">"</span></span>        <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.tab<span class="token punctuation">"</span></span>        <span class="token attr-name">:name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.id<span class="token punctuation">"</span></span>        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>customer-tabs__context<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item.title &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- name=(v-model绑定的)item.active就会打开手风琴 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-collapse</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.active<span class="token punctuation">"</span></span> <span class="token attr-name">accordion</span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-collapse-item</span>              <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(val, idx) in item.list<span class="token punctuation">"</span></span>              <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`Q$&#123;idx + 1&#125;：$&#123;val.title&#125;`<span class="token punctuation">"</span></span>              <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>idx<span class="token punctuation">"</span></span>              <span class="token attr-name">:name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>val.id<span class="token punctuation">"</span></span>              <span class="token attr-name">title-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span>              <span class="token attr-name">label-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span>              <span class="token attr-name">:border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>              <span class="token punctuation">></span></span>&#123;&#123; val.context &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-collapse-item</span>            <span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-collapse</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tab</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabs</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      active<span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>      list<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>          tab<span class="token operator">:</span> <span class="token string">"优惠券"</span><span class="token punctuation">,</span>          id<span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>          title<span class="token operator">:</span> <span class="token string">"优惠券相关问题"</span><span class="token punctuation">,</span>          active<span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>          list<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠券过期"</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"1-1"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span>                <span class="token string">"用户在使用优惠券应同时满足以下条件：在我的优惠券中有可使用的优惠券；订单符合券面注明的使用条件（可用油站、可用商品、可用身份、满减条件、可使用时间）等。"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠券使用不了"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span> <span class="token string">"用户在使用优惠券应同时满足以下条件："</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"1-2"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠券使用后没有信息提醒"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span> <span class="token string">"用户在使用优惠券应同时满足以下条件："</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"1-3"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠券是否可以替换"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span> <span class="token string">"用户在使用优惠券应同时满足以下条件："</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"1-4"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠券使用方法"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span> <span class="token string">"用户在使用优惠券应同时满足以下条件："</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"1-5"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          tab<span class="token operator">:</span> <span class="token string">"油价优惠"</span><span class="token punctuation">,</span>          id<span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>          title<span class="token operator">:</span> <span class="token string">"油价优惠相关问题"</span><span class="token punctuation">,</span>          active<span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>          list<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠价格不优惠"</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"2-1"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span>                <span class="token string">"用户在使用优惠券应同时满足以下条件：在我的优惠券中有可使用的优惠券；订单符合券面注明的使用条件（可用油站、可用商品、可用身份、满减条件、可使用时间）等。"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          tab<span class="token operator">:</span> <span class="token string">"退款相关"</span><span class="token punctuation">,</span>          id<span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span>          title<span class="token operator">:</span> <span class="token string">"退款相关问题"</span><span class="token punctuation">,</span>          active<span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span>          list<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠价格不优惠"</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"3-1"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span>                <span class="token string">"用户在使用优惠券应同时满足以下条件：在我的优惠券中有可使用的优惠券；订单符合券面注明的使用条件（可用油站、可用商品、可用身份、满减条件、可使用时间）等。"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          tab<span class="token operator">:</span> <span class="token string">"退款相关"</span><span class="token punctuation">,</span>          id<span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>          title<span class="token operator">:</span> <span class="token string">"退款相关问题"</span><span class="token punctuation">,</span>          active<span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>          list<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠价格不优惠"</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"4-1"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span>                <span class="token string">"用户在使用优惠券应同时满足以下条件：在我的优惠券中有可使用的优惠券；订单符合券面注明的使用条件（可用油站、可用商品、可用身份、满减条件、可使用时间）等。"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          tab<span class="token operator">:</span> <span class="token string">"退款相关"</span><span class="token punctuation">,</span>          id<span class="token operator">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span>          title<span class="token operator">:</span> <span class="token string">"退款相关问题"</span><span class="token punctuation">,</span>          active<span class="token operator">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span>          list<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>              title<span class="token operator">:</span> <span class="token string">"优惠价格不优惠"</span><span class="token punctuation">,</span>              id<span class="token operator">:</span> <span class="token string">"5-1"</span><span class="token punctuation">,</span>              context<span class="token operator">:</span>                <span class="token string">"用户在使用优惠券应同时满足以下条件：在我的优惠券中有可使用的优惠券；订单符合券面注明的使用条件（可用油站、可用商品、可用身份、满减条件、可使用时间）等。"</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          item<span class="token punctuation">.</span>active <span class="token operator">=</span> item<span class="token punctuation">.</span>id<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style lang="less" scoped>.customer-tabs</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>  <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token selector">;  &amp;__context</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 375px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 46px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Medium<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #333333<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">/deep/ .title</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Medium<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #333333<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">/deep/ .label</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> PingFangSC-Regular<span class="token punctuation">,</span> PingFang SC<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #666666<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>功能模块（签名生成图片）</title>
      <link href="/hexo/2023/01/13/gong-neng-mo-kuai-qian-ming-sheng-cheng-tu-pian/"/>
      <url>/hexo/2023/01/13/gong-neng-mo-kuai-qian-ming-sheng-cheng-tu-pian/</url>
      
        <content type="html"><![CDATA[<p>canvas画布签名生成图片 （PC端可用）</p><a id="more"></a><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>保存<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 配置内容</span>    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        width<span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token comment">// 宽度</span>        height<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// 高度</span>        lineWidth<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 线宽</span>        strokeStyle<span class="token operator">:</span> <span class="token string">'red'</span><span class="token punctuation">,</span> <span class="token comment">// 线条颜色</span>        lineCap<span class="token operator">:</span> <span class="token string">'round'</span><span class="token punctuation">,</span> <span class="token comment">// 设置线条两端圆角</span>        lineJoin<span class="token operator">:</span> <span class="token string">'round'</span><span class="token punctuation">,</span> <span class="token comment">// 线条交汇处圆角</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 获取canvas 实例</span>    <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span>    <span class="token comment">// 设置宽高</span>    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> config<span class="token punctuation">.</span>width    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> config<span class="token punctuation">.</span>height    <span class="token comment">// 设置一个边框</span>    canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>border <span class="token operator">=</span> <span class="token string">'1px solid #000'</span>    <span class="token comment">// 创建上下文</span>    <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>    <span class="token comment">// 设置填充背景色</span>    ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'transparent'</span>    <span class="token comment">// 绘制填充矩形</span>    ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span>        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// x 轴起始绘制位置</span>        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// y 轴起始绘制位置</span>        config<span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token comment">// 宽度</span>        config<span class="token punctuation">.</span>height <span class="token comment">// 高度</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 保存上次绘制的 坐标及偏移量</span>    <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        offsetX<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 偏移量</span>        offsetY<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        endX<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 坐标</span>        endY<span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 判断是否为移动端</span>    <span class="token keyword">const</span> mobileStatus <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Mobile|Android|iPhone</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 初始化</span>    <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取偏移量及坐标</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> offsetX<span class="token punctuation">,</span> offsetY<span class="token punctuation">,</span> pageX<span class="token punctuation">,</span> pageY <span class="token punctuation">&#125;</span> <span class="token operator">=</span> mobileStatus <span class="token operator">?</span> event<span class="token punctuation">.</span>changedTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> event         <span class="token comment">// 修改上次的偏移量及坐标</span>        client<span class="token punctuation">.</span>offsetX <span class="token operator">=</span> offsetX        client<span class="token punctuation">.</span>offsetY <span class="token operator">=</span> offsetY        client<span class="token punctuation">.</span>endX <span class="token operator">=</span> pageX        client<span class="token punctuation">.</span>endY <span class="token operator">=</span> pageY        <span class="token comment">// 清除以上一次 beginPath 之后的所有路径，进行绘制</span>        ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 根据配置文件设置相应配置</span>        ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> config<span class="token punctuation">.</span>lineWidth        ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> config<span class="token punctuation">.</span>strokeStyle        ctx<span class="token punctuation">.</span>lineCap <span class="token operator">=</span> config<span class="token punctuation">.</span>lineCap        ctx<span class="token punctuation">.</span>lineJoin <span class="token operator">=</span> config<span class="token punctuation">.</span>lineJoin        <span class="token comment">// 设置画线起始点位</span>        ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span>endX<span class="token punctuation">,</span> client<span class="token punctuation">.</span>endY<span class="token punctuation">)</span>        <span class="token comment">// 监听 鼠标移动或手势移动</span>        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>mobileStatus <span class="token operator">?</span> <span class="token string">"touchmove"</span> <span class="token operator">:</span> <span class="token string">"mousemove"</span><span class="token punctuation">,</span> draw<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 绘制</span>    <span class="token keyword">const</span> <span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取当前坐标点位</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> pageX<span class="token punctuation">,</span> pageY <span class="token punctuation">&#125;</span> <span class="token operator">=</span> mobileStatus <span class="token operator">?</span> event<span class="token punctuation">.</span>changedTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> event        <span class="token comment">// 修改最后一次绘制的坐标点</span>        client<span class="token punctuation">.</span>endX <span class="token operator">=</span> pageX        client<span class="token punctuation">.</span>endY <span class="token operator">=</span> pageY        <span class="token comment">// 根据坐标点位移动添加线条</span>        ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>pageX <span class="token punctuation">,</span> pageY <span class="token punctuation">)</span>        <span class="token comment">// 绘制</span>        ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 结束绘制</span>    <span class="token keyword">const</span> <span class="token function-variable function">cloaseDraw</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 结束绘制</span>        ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 移除鼠标移动或手势移动监听器</span>        window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"mousemove"</span><span class="token punctuation">,</span> draw<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 创建鼠标/手势按下监听器</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>mobileStatus <span class="token operator">?</span> <span class="token string">"touchstart"</span> <span class="token operator">:</span> <span class="token string">"mousedown"</span><span class="token punctuation">,</span> init<span class="token punctuation">)</span>    <span class="token comment">// 创建鼠标/手势 弹起/离开 监听器</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>mobileStatus <span class="token operator">?</span> <span class="token string">"touchend"</span> <span class="token operator">:</span><span class="token string">"mouseup"</span><span class="token punctuation">,</span> cloaseDraw<span class="token punctuation">)</span>        <span class="token comment">// 取消-清空画布</span>    <span class="token keyword">const</span> <span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 清空当前画布上的所有绘制内容</span>        ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>width<span class="token punctuation">,</span> config<span class="token punctuation">.</span>height<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 保存-将画布内容保存为图片</span>    <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 将canvas上的内容转成blob流</span>        canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span><span class="token parameter">blob</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 获取当前时间并转成字符串，用来当做文件名</span>            <span class="token keyword">const</span> date <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment">// 创建一个 a 标签</span>            <span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>            <span class="token comment">// 设置 a 标签的下载文件名</span>            a<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>date<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.png</span><span class="token template-punctuation string">`</span></span>            <span class="token comment">// 设置 a 标签的跳转路径为 文件流地址</span>            a<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>            <span class="token comment">// 手动触发 a 标签的点击事件</span>            a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment">// 移除 a 标签</span>            a<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5（助力活动）</title>
      <link href="/hexo/2023/01/07/h5-zhu-li-huo-dong/"/>
      <url>/hexo/2023/01/07/h5-zhu-li-huo-dong/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> H5 </tag>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全局（过滤展示）</title>
      <link href="/hexo/2023/01/07/quan-ju-guo-lu-zhan-shi/"/>
      <url>/hexo/2023/01/07/quan-ju-guo-lu-zhan-shi/</url>
      
        <content type="html"><![CDATA[<p>收录一些比较通用的过滤器函数filters、计算属性computed、函数methods</p><a id="more"></a><p><font color="#08c">要求：小于10000 单位 ‘名’ ，大于10000 单位 ‘万名’ （人数） </font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">people_num</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> num <span class="token operator">=</span> e <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">万</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>e<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 9999 展示 9999名用户</span><span class="token comment">// 12000 展示 1.2万</span><span class="token comment">// 10008 展示 1.0万 最多保留一位小数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#08c">要求：展示正数（金额） </font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">money_num</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 99 展示 99元</span><span class="token comment">// -99 展示 99元</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="#08c">要求：900 默认单位 m ，超过 1000 单位 km </font></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">distance_km</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> num <span class="token operator">=</span> e <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">===</span> num <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">km</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">m</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 900 展示 900m</span><span class="token comment">// 3293 展示 3.3km</span><span class="token comment">// 1200 展示 1.2km</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 全局函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2.0（自定义指令）</title>
      <link href="/hexo/2022/12/20/vue2.0-zi-ding-yi-zhi-ling/"/>
      <url>/hexo/2022/12/20/vue2.0-zi-ding-yi-zhi-ling/</url>
      
        <content type="html"><![CDATA[<p>场景：点击到页面的其他标签 隐藏或者收起 某元素标签</p><a id="more"></a><p>使用示例</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-hide</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>callback<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>click<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>传入回调</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">"hide"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">bind</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      binding<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    el<span class="token punctuation">.</span>__vueHide__ <span class="token operator">=</span> handler<span class="token punctuation">;</span>    el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> handler<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function-variable function">unbind</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> el<span class="token punctuation">.</span>__vueHide__<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    el<span class="token punctuation">.</span>__vueHide__ <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      
        <tags>
            
            <tag> vue2.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>功能模块（vue2 实现全局路由拦截弹框）</title>
      <link href="/hexo/2022/12/20/gong-neng-mo-kuai-vue2-shi-xian-quan-ju-lu-you-lan-jie-dan-kuang/"/>
      <url>/hexo/2022/12/20/gong-neng-mo-kuai-vue2-shi-xian-quan-ju-lu-you-lan-jie-dan-kuang/</url>
      
        <content type="html"><![CDATA[<p>一般实现登录token过期就是重定向到登录页面，让用户重新进行操作，但是也可以实现以弹框的形式进行登录，从而达到保存用户行为的效果</p><a id="more"></a><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a><font color="red">说明</font></h3><ul><li>登录组件<ul><li>函数式调用”extend” login.install({})</li><li>标签式调用 “&lt; login / &gt;”</li></ul></li><li>全局路由守卫<ul><li>白名单,绕过登录</li><li>名单,一定需要登录</li><li>不在任何名单,默认重定向到初始路由页面</li></ul></li><li>接口返回code对应码 ~ 清除本地登录信息<ul><li>411 用户冻结</li><li>9111 用户异常</li><li>9137 token过期</li></ul></li><li>自定义指令 ~ 校验登录</li></ul><h3 id="login登录函数组件（extend）"><a href="#login登录函数组件（extend）" class="headerlink" title="login登录函数组件（extend）"></a><font color="red">login登录函数组件（extend）</font></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> login <span class="token keyword">from</span> <span class="token string">"./login.vue"</span><span class="token punctuation">;</span><span class="token keyword">const</span> LoginDialog <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> instance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>login<span class="token punctuation">.</span><span class="token function-variable function">install</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LoginDialog</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span>  Vue<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    instance<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> login<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="路由封装-路由跳转校验登录"><a href="#路由封装-路由跳转校验登录" class="headerlink" title="路由封装 ~ 路由跳转校验登录"></a><font color="red">路由封装 ~ 路由跳转校验登录</font></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">import</span> routes <span class="token keyword">from</span> <span class="token string">"./routes"</span><span class="token punctuation">;</span><span class="token keyword">import</span> login <span class="token keyword">from</span> <span class="token string">"@/components/login"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Dialog <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vant"</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  mode<span class="token operator">:</span> <span class="token string">"history"</span><span class="token punctuation">,</span>  base<span class="token operator">:</span> window<span class="token punctuation">.</span>loaction<span class="token punctuation">.</span>href<span class="token punctuation">,</span>  routes<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 白名单、有些路由页面不需要登录也能访问</span><span class="token keyword">const</span> whiteList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">"/home"</span><span class="token punctuation">,</span> <span class="token string">"/detail"</span><span class="token punctuation">,</span> <span class="token string">"/customer"</span><span class="token punctuation">,</span> <span class="token string">"/about"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 需要登录的路由页面</span><span class="token keyword">const</span> loginList <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token string">"/search"</span><span class="token punctuation">,</span>  <span class="token string">"/order"</span><span class="token punctuation">,</span>  <span class="token string">"/person"</span><span class="token punctuation">,</span>  <span class="token string">"/collectionList"</span><span class="token punctuation">,</span>  <span class="token string">"/couponStationList"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 其他的就是重定向的路由</span>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  document<span class="token punctuation">.</span>title <span class="token operator">=</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title <span class="token operator">||</span> <span class="token keyword">from</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">;</span>  <span class="token keyword">const</span> isLogin <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token operator">!</span><span class="token operator">!</span>localStorage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>token    <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>isLogin<span class="token punctuation">)</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>whiteList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>loginList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">await</span> login<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    Dialog<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      title<span class="token operator">:</span> <span class="token string">"提醒"</span><span class="token punctuation">,</span>      message<span class="token operator">:</span> <span class="token string">"链接走丢了"</span><span class="token punctuation">,</span>      confirmButtonColor<span class="token operator">:</span> <span class="token string">"#000"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="axios封装-响应拦截处理"><a href="#axios封装-响应拦截处理" class="headerlink" title="axios封装 ~ 响应拦截处理"></a><font color="red">axios封装 ~ 响应拦截处理</font></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token keyword">import</span> login <span class="token keyword">from</span> <span class="token string">"@/components/login"</span><span class="token punctuation">;</span><span class="token keyword">const</span> http <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  baseURL<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_URL</span><span class="token punctuation">,</span>  timeout<span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 请求响应拦截处理</span>http<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> data<span class="token punctuation">,</span> config <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> data<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 定时器是因为全局的toast.clear导致污染</span>       <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> data<span class="token punctuation">.</span>message<span class="token punctuation">,</span>          duration<span class="token operator">:</span> <span class="token number">1500</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 401、9111、9137是token过期或者用户冻结，弹出登录框 ~ 登录之后刷新当前页面</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">401</span> <span class="token operator">||</span> data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">9111</span> <span class="token operator">||</span> data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">9137</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         login<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token operator">?.</span>message<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">Toast</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response <span class="token operator">||</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> http<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义指令-标签-“-lt-div-v-login-gt-”-校验登录提前，未登录弹登录框阻止冒泡，已登录无事发生"><a href="#自定义指令-标签-“-lt-div-v-login-gt-”-校验登录提前，未登录弹登录框阻止冒泡，已登录无事发生" class="headerlink" title="自定义指令 ~ 标签 “&lt; div v-login / &gt;” 校验登录提前，未登录弹登录框阻止冒泡，已登录无事发生 "></a><font color="red">自定义指令 ~ 标签 “&lt; div v-login / &gt;” 校验登录提前，未登录弹登录框阻止冒泡，已登录无事发生 </font></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">"login"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">bind</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> login<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">import</span> login <span class="token keyword">from</span> <span class="token string">"@/components/login"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> isLogin <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token operator">!</span><span class="token operator">!</span>localStorage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>token    <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLogin<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    e<span class="token punctuation">.</span><span class="token function">stopImmediatePropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    login<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- more -->]]></content>
      
      
      <categories>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能模块 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
